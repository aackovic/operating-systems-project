GAS LISTING /tmp/ccrd2aCb.s 			page 1


   1              		.file	"KernelConsole.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN13KernelConsole6__getcEv
   9              	_ZN13KernelConsole6__getcEv:
  10              	.LFB48:
  11              		.file 1 "src/KernelConsole.cpp"
   1:src/KernelConsole.cpp **** //
   2:src/KernelConsole.cpp **** // Created by os on 5/29/23.
   3:src/KernelConsole.cpp **** //
   4:src/KernelConsole.cpp **** 
   5:src/KernelConsole.cpp **** #include "../h/KernelConsole.hpp"
   6:src/KernelConsole.cpp **** 
   7:src/KernelConsole.cpp **** bool KernelConsole::initialized;
   8:src/KernelConsole.cpp **** ConsoleBuffer* KernelConsole::inputBuffer;
   9:src/KernelConsole.cpp **** ConsoleBuffer* KernelConsole::outputBuffer;
  10:src/KernelConsole.cpp **** bool KernelConsole::toEnd;
  11:src/KernelConsole.cpp **** uint64 KernelConsole::toPrint=0;
  12:src/KernelConsole.cpp **** 
  13:src/KernelConsole.cpp **** void KernelConsole::putcH() {
  14:src/KernelConsole.cpp ****     char c;
  15:src/KernelConsole.cpp ****     __asm__ volatile("mv %0, a1" : "=r"(c));
  16:src/KernelConsole.cpp ****     __putc(c);
  17:src/KernelConsole.cpp **** }
  18:src/KernelConsole.cpp **** 
  19:src/KernelConsole.cpp **** void KernelConsole::getcH() {
  20:src/KernelConsole.cpp ****     char c = __getc();
  21:src/KernelConsole.cpp ****     __asm__ volatile ("mv a0, %0" :: "r" ((uint64)c));
  22:src/KernelConsole.cpp ****     Riscv::w_a0_sscratch();
  23:src/KernelConsole.cpp **** }
  24:src/KernelConsole.cpp **** 
  25:src/KernelConsole.cpp **** char KernelConsole::__getc() {
  12              		.loc 1 25 30
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23341100 		sd	ra,8(sp)
  17 0008 23308100 		sd	s0,0(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040101 		addi	s0,sp,16
  21              		.cfi_def_cfa 8, 0
  26:src/KernelConsole.cpp ****     char c = inputBuffer->get();
  22              		.loc 1 26 5
  23              		.loc 1 26 30 is_stmt 0
  24 0010 17050000 		ld	a0,.LANCHOR0
  24      03350500 
  25 0018 97000000 		call	_ZN13ConsoleBuffer3getEv@plt
  25      E7800000 
  26              	.LVL0:
  27:src/KernelConsole.cpp ****     return c;
  27              		.loc 1 27 5 is_stmt 1
  28:src/KernelConsole.cpp **** }
  28              		.loc 1 28 1 is_stmt 0
GAS LISTING /tmp/ccrd2aCb.s 			page 2


  29 0020 83308100 		ld	ra,8(sp)
  30              		.cfi_restore 1
  31 0024 03340100 		ld	s0,0(sp)
  32              		.cfi_restore 8
  33              		.cfi_def_cfa 2, 16
  34 0028 13010101 		addi	sp,sp,16
  35              		.cfi_def_cfa_offset 0
  36 002c 67800000 		jr	ra
  37              		.cfi_endproc
  38              	.LFE48:
  40              		.align	2
  41              		.globl	_ZN13KernelConsole5getcHEv
  43              	_ZN13KernelConsole5getcHEv:
  44              	.LFB47:
  19:src/KernelConsole.cpp ****     char c = __getc();
  45              		.loc 1 19 29 is_stmt 1
  46              		.cfi_startproc
  47 0030 130101FF 		addi	sp,sp,-16
  48              		.cfi_def_cfa_offset 16
  49 0034 23341100 		sd	ra,8(sp)
  50 0038 23308100 		sd	s0,0(sp)
  51              		.cfi_offset 1, -8
  52              		.cfi_offset 8, -16
  53 003c 13040101 		addi	s0,sp,16
  54              		.cfi_def_cfa 8, 0
  20:src/KernelConsole.cpp ****     __asm__ volatile ("mv a0, %0" :: "r" ((uint64)c));
  55              		.loc 1 20 5
  20:src/KernelConsole.cpp ****     __asm__ volatile ("mv a0, %0" :: "r" ((uint64)c));
  56              		.loc 1 20 20 is_stmt 0
  57 0040 97000000 		call	_ZN13KernelConsole6__getcEv
  57      E7800000 
  58              	.LVL1:
  21:src/KernelConsole.cpp ****     Riscv::w_a0_sscratch();
  59              		.loc 1 21 5 is_stmt 1
  21:src/KernelConsole.cpp ****     Riscv::w_a0_sscratch();
  60              		.loc 1 21 54 is_stmt 0
  61              	#APP
  62              	# 21 "src/KernelConsole.cpp" 1
  22:src/KernelConsole.cpp **** }
  63              		mv a0, a0
  64              	# 0 "" 2
  65              		.loc 1 22 5 is_stmt 1
  66              	#NO_APP
  67              	.LBB9:
  68              	.LBB10:
  69              		.file 2 "src/../h/../h/Riscv.hpp"
   1:src/../h/../h/Riscv.hpp **** //
   2:src/../h/../h/Riscv.hpp **** // Created by os on 5/15/23.
   3:src/../h/../h/Riscv.hpp **** //
   4:src/../h/../h/Riscv.hpp **** 
   5:src/../h/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/../h/Riscv.hpp **** 
   8:src/../h/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/../h/Riscv.hpp **** #include "../h/userMain.hpp"
  10:src/../h/../h/Riscv.hpp **** #include "../h/PCB.hpp"
  11:src/../h/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccrd2aCb.s 			page 3


  12:src/../h/../h/Riscv.hpp **** class Riscv {
  13:src/../h/../h/Riscv.hpp **** public:
  14:src/../h/../h/Riscv.hpp ****     //non inline
  15:src/../h/../h/Riscv.hpp ****     static void popSppSpie();
  16:src/../h/../h/Riscv.hpp **** 
  17:src/../h/../h/Riscv.hpp ****     static void pushRegisters();
  18:src/../h/../h/Riscv.hpp **** 
  19:src/../h/../h/Riscv.hpp ****     static void popRegisters();
  20:src/../h/../h/Riscv.hpp **** 
  21:src/../h/../h/Riscv.hpp ****     static uint64 r_scause();
  22:src/../h/../h/Riscv.hpp **** 
  23:src/../h/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  24:src/../h/../h/Riscv.hpp **** 
  25:src/../h/../h/Riscv.hpp ****     static uint64 r_sepc();
  26:src/../h/../h/Riscv.hpp **** 
  27:src/../h/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  28:src/../h/../h/Riscv.hpp **** 
  29:src/../h/../h/Riscv.hpp ****     static uint64 r_stvec();
  30:src/../h/../h/Riscv.hpp **** 
  31:src/../h/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  32:src/../h/../h/Riscv.hpp **** 
  33:src/../h/../h/Riscv.hpp ****     static uint64 r_stval();
  34:src/../h/../h/Riscv.hpp **** 
  35:src/../h/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  36:src/../h/../h/Riscv.hpp **** 
  37:src/../h/../h/Riscv.hpp ****     enum BitMaskSip{
  38:src/../h/../h/Riscv.hpp ****         SIP_SSIP = (1<<1),
  39:src/../h/../h/Riscv.hpp ****         SIP_STIP = (1<<5),
  40:src/../h/../h/Riscv.hpp ****         SIP_SEIP = (1<<9),
  41:src/../h/../h/Riscv.hpp ****     };
  42:src/../h/../h/Riscv.hpp **** 
  43:src/../h/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  44:src/../h/../h/Riscv.hpp **** 
  45:src/../h/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  46:src/../h/../h/Riscv.hpp **** 
  47:src/../h/../h/Riscv.hpp ****     static uint64 r_sip();
  48:src/../h/../h/Riscv.hpp **** 
  49:src/../h/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  50:src/../h/../h/Riscv.hpp **** 
  51:src/../h/../h/Riscv.hpp ****     enum BitMaskSstatus{
  52:src/../h/../h/Riscv.hpp ****         SSTATUS_SIE = (1<<1),
  53:src/../h/../h/Riscv.hpp ****         SSTATUS_SPIE = (1<<5),
  54:src/../h/../h/Riscv.hpp ****         SSTATUS_SPP = (1<<8),
  55:src/../h/../h/Riscv.hpp ****     };
  56:src/../h/../h/Riscv.hpp **** 
  57:src/../h/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  58:src/../h/../h/Riscv.hpp **** 
  59:src/../h/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  60:src/../h/../h/Riscv.hpp **** 
  61:src/../h/../h/Riscv.hpp ****     static uint64 r_sstatus();
  62:src/../h/../h/Riscv.hpp **** 
  63:src/../h/../h/Riscv.hpp ****     static  void w_sstatus(uint64 sstatus);
  64:src/../h/../h/Riscv.hpp **** 
  65:src/../h/../h/Riscv.hpp ****     static void supervisorTrap();
  66:src/../h/../h/Riscv.hpp **** 
  67:src/../h/../h/Riscv.hpp ****     static void w_a0_sscratch();
  68:src/../h/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccrd2aCb.s 			page 4


  69:src/../h/../h/Riscv.hpp **** private:
  70:src/../h/../h/Riscv.hpp **** 
  71:src/../h/../h/Riscv.hpp ****     // supervisor trap handler
  72:src/../h/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  73:src/../h/../h/Riscv.hpp **** 
  74:src/../h/../h/Riscv.hpp ****     static void userMainWrapper(void *);
  75:src/../h/../h/Riscv.hpp **** 
  76:src/../h/../h/Riscv.hpp ****     friend class MemoryAllocator;
  77:src/../h/../h/Riscv.hpp ****     friend class PCB;
  78:src/../h/../h/Riscv.hpp ****     friend class Semaphore;
  79:src/../h/../h/Riscv.hpp **** };
  80:src/../h/../h/Riscv.hpp **** 
  81:src/../h/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  82:src/../h/../h/Riscv.hpp ****     uint64 volatile scause;
  83:src/../h/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  84:src/../h/../h/Riscv.hpp ****     return scause;
  85:src/../h/../h/Riscv.hpp **** }
  86:src/../h/../h/Riscv.hpp **** 
  87:src/../h/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  88:src/../h/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  89:src/../h/../h/Riscv.hpp **** }
  90:src/../h/../h/Riscv.hpp **** 
  91:src/../h/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  92:src/../h/../h/Riscv.hpp ****     uint64 volatile sepc;
  93:src/../h/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
  94:src/../h/../h/Riscv.hpp ****     return sepc;
  95:src/../h/../h/Riscv.hpp **** }
  96:src/../h/../h/Riscv.hpp **** 
  97:src/../h/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
  98:src/../h/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
  99:src/../h/../h/Riscv.hpp **** }
 100:src/../h/../h/Riscv.hpp **** 
 101:src/../h/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 102:src/../h/../h/Riscv.hpp ****     uint64 volatile stvec;
 103:src/../h/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 104:src/../h/../h/Riscv.hpp ****     return stvec;
 105:src/../h/../h/Riscv.hpp **** }
 106:src/../h/../h/Riscv.hpp **** 
 107:src/../h/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 108:src/../h/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 109:src/../h/../h/Riscv.hpp **** }
 110:src/../h/../h/Riscv.hpp **** 
 111:src/../h/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
 112:src/../h/../h/Riscv.hpp ****     uint64 volatile stval;
 113:src/../h/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 114:src/../h/../h/Riscv.hpp ****     return stval;
 115:src/../h/../h/Riscv.hpp **** }
 116:src/../h/../h/Riscv.hpp **** 
 117:src/../h/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 118:src/../h/../h/Riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 119:src/../h/../h/Riscv.hpp **** }
 120:src/../h/../h/Riscv.hpp **** 
 121:src/../h/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 122:src/../h/../h/Riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 123:src/../h/../h/Riscv.hpp **** }
 124:src/../h/../h/Riscv.hpp **** 
 125:src/../h/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
GAS LISTING /tmp/ccrd2aCb.s 			page 5


 126:src/../h/../h/Riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 127:src/../h/../h/Riscv.hpp **** }
 128:src/../h/../h/Riscv.hpp **** 
 129:src/../h/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 130:src/../h/../h/Riscv.hpp ****     uint64 volatile sip;
 131:src/../h/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 132:src/../h/../h/Riscv.hpp ****     return sip;
 133:src/../h/../h/Riscv.hpp **** }
 134:src/../h/../h/Riscv.hpp **** 
 135:src/../h/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 136:src/../h/../h/Riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 137:src/../h/../h/Riscv.hpp **** }
 138:src/../h/../h/Riscv.hpp **** 
 139:src/../h/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 140:src/../h/../h/Riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 141:src/../h/../h/Riscv.hpp **** }
 142:src/../h/../h/Riscv.hpp **** 
 143:src/../h/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 144:src/../h/../h/Riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 145:src/../h/../h/Riscv.hpp **** }
 146:src/../h/../h/Riscv.hpp **** 
 147:src/../h/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 148:src/../h/../h/Riscv.hpp ****     uint64 volatile sstatus;
 149:src/../h/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 150:src/../h/../h/Riscv.hpp ****     return sstatus;
 151:src/../h/../h/Riscv.hpp **** }
 152:src/../h/../h/Riscv.hpp **** 
 153:src/../h/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 154:src/../h/../h/Riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 155:src/../h/../h/Riscv.hpp **** }
 156:src/../h/../h/Riscv.hpp **** 
 157:src/../h/../h/Riscv.hpp **** inline void Riscv::w_a0_sscratch() {
 158:src/../h/../h/Riscv.hpp ****     uint64 a1Temp;
  70              		.loc 2 158 5
 159:src/../h/../h/Riscv.hpp ****     __asm__ volatile("mv %0, a1":"=r"(a1Temp));
  71              		.loc 2 159 5
  72              		.loc 2 159 47 is_stmt 0
  73              	#APP
  74              	# 159 "src/../h/../h/Riscv.hpp" 1
 160              	    __asm__ volatile("mv a1, %0"::"r"(PCB::running->sscratch));
  75              		mv a5, a1
  76              	# 0 "" 2
  77              	.LVL2:
  78              		.loc 2 160 5 is_stmt 1
  79              		.loc 2 160 53 is_stmt 0
  80              	#NO_APP
  81 0050 17070000 		la	a4,_ZN3PCB7runningE
  81      03370700 
  82 0058 03370700 		ld	a4,0(a4)
  83 005c 03370705 		ld	a4,80(a4)
  84              		.loc 2 160 63
  85              	#APP
  86              	# 160 "src/../h/../h/Riscv.hpp" 1
 161              	    __asm__ volatile("sd a0, 80(a1)");
  87              		mv a1, a4
  88              	# 0 "" 2
  89              		.loc 2 161 5 is_stmt 1
GAS LISTING /tmp/ccrd2aCb.s 			page 6


  90              		.loc 2 161 38 is_stmt 0
  91              	# 161 "src/../h/../h/Riscv.hpp" 1
 162              	    __asm__ volatile("mv a1,%0"::"r"(a1Temp));
  92              		sd a0, 80(a1)
  93              	# 0 "" 2
  94              		.loc 2 162 5 is_stmt 1
  95              		.loc 2 162 46 is_stmt 0
  96              	# 162 "src/../h/../h/Riscv.hpp" 1
 163              	    /*uint64 a0;
  97              		mv a1,a5
  98              	# 0 "" 2
  99              	.LVL3:
 100              	#NO_APP
 101              	.LBE10:
 102              	.LBE9:
  23:src/KernelConsole.cpp **** 
 103              		.loc 1 23 1
 104 006c 83308100 		ld	ra,8(sp)
 105              		.cfi_restore 1
 106 0070 03340100 		ld	s0,0(sp)
 107              		.cfi_restore 8
 108              		.cfi_def_cfa 2, 16
 109 0074 13010101 		addi	sp,sp,16
 110              		.cfi_def_cfa_offset 0
 111 0078 67800000 		jr	ra
 112              		.cfi_endproc
 113              	.LFE47:
 115              		.align	2
 116              		.globl	_ZN13KernelConsole6__putcEc
 118              	_ZN13KernelConsole6__putcEc:
 119              	.LFB49:
  29:src/KernelConsole.cpp **** 
  30:src/KernelConsole.cpp **** void KernelConsole::__putc(char c) {
 120              		.loc 1 30 36 is_stmt 1
 121              		.cfi_startproc
 122              	.LVL4:
 123 007c 130101FE 		addi	sp,sp,-32
 124              		.cfi_def_cfa_offset 32
 125 0080 233C1100 		sd	ra,24(sp)
 126 0084 23388100 		sd	s0,16(sp)
 127 0088 23349100 		sd	s1,8(sp)
 128              		.cfi_offset 1, -8
 129              		.cfi_offset 8, -16
 130              		.cfi_offset 9, -24
 131 008c 13040102 		addi	s0,sp,32
 132              		.cfi_def_cfa 8, 0
 133 0090 93050500 		mv	a1,a0
  31:src/KernelConsole.cpp ****     outputBuffer->put(c);
 134              		.loc 1 31 5
 135              		.loc 1 31 22 is_stmt 0
 136 0094 97040000 		lla	s1,.LANCHOR0
 136      93840400 
 137 009c 03B58400 		ld	a0,8(s1)
 138              	.LVL5:
 139 00a0 97000000 		call	_ZN13ConsoleBuffer3putEc@plt
 139      E7800000 
 140              	.LVL6:
GAS LISTING /tmp/ccrd2aCb.s 			page 7


  32:src/KernelConsole.cpp ****     toPrint++;
 141              		.loc 1 32 5 is_stmt 1
 142              		.loc 1 32 12 is_stmt 0
 143 00a8 83B70401 		ld	a5,16(s1)
 144 00ac 93871700 		addi	a5,a5,1
 145 00b0 23B8F400 		sd	a5,16(s1)
  33:src/KernelConsole.cpp **** }
 146              		.loc 1 33 1
 147 00b4 83308101 		ld	ra,24(sp)
 148              		.cfi_restore 1
 149 00b8 03340101 		ld	s0,16(sp)
 150              		.cfi_restore 8
 151              		.cfi_def_cfa 2, 32
 152 00bc 83348100 		ld	s1,8(sp)
 153              		.cfi_restore 9
 154 00c0 13010102 		addi	sp,sp,32
 155              		.cfi_def_cfa_offset 0
 156 00c4 67800000 		jr	ra
 157              		.cfi_endproc
 158              	.LFE49:
 160              		.align	2
 161              		.globl	_ZN13KernelConsole5putcHEv
 163              	_ZN13KernelConsole5putcHEv:
 164              	.LFB46:
  13:src/KernelConsole.cpp ****     char c;
 165              		.loc 1 13 29 is_stmt 1
 166              		.cfi_startproc
 167 00c8 130101FF 		addi	sp,sp,-16
 168              		.cfi_def_cfa_offset 16
 169 00cc 23341100 		sd	ra,8(sp)
 170 00d0 23308100 		sd	s0,0(sp)
 171              		.cfi_offset 1, -8
 172              		.cfi_offset 8, -16
 173 00d4 13040101 		addi	s0,sp,16
 174              		.cfi_def_cfa 8, 0
  14:src/KernelConsole.cpp ****     __asm__ volatile("mv %0, a1" : "=r"(c));
 175              		.loc 1 14 5
  15:src/KernelConsole.cpp ****     __putc(c);
 176              		.loc 1 15 5
  15:src/KernelConsole.cpp ****     __putc(c);
 177              		.loc 1 15 44 is_stmt 0
 178              	#APP
 179              	# 15 "src/KernelConsole.cpp" 1
 180              		mv a0, a1
 181              	# 0 "" 2
 182              	.LVL7:
  16:src/KernelConsole.cpp **** }
 183              		.loc 1 16 5 is_stmt 1
  16:src/KernelConsole.cpp **** }
 184              		.loc 1 16 11 is_stmt 0
 185              	#NO_APP
 186 00dc 1375F50F 		andi	a0,a0,0xff
 187 00e0 97000000 		call	_ZN13KernelConsole6__putcEc
 187      E7800000 
 188              	.LVL8:
  17:src/KernelConsole.cpp **** 
 189              		.loc 1 17 1
GAS LISTING /tmp/ccrd2aCb.s 			page 8


 190 00e8 83308100 		ld	ra,8(sp)
 191              		.cfi_restore 1
 192 00ec 03340100 		ld	s0,0(sp)
 193              		.cfi_restore 8
 194              		.cfi_def_cfa 2, 16
 195 00f0 13010101 		addi	sp,sp,16
 196              		.cfi_def_cfa_offset 0
 197 00f4 67800000 		jr	ra
 198              		.cfi_endproc
 199              	.LFE46:
 201              		.align	2
 202              		.globl	_ZN13KernelConsole14consoleWrapperEPv
 204              	_ZN13KernelConsole14consoleWrapperEPv:
 205              	.LFB50:
  34:src/KernelConsole.cpp **** 
  35:src/KernelConsole.cpp **** void KernelConsole::consoleWrapper(void *p) {
 206              		.loc 1 35 45 is_stmt 1
 207              		.cfi_startproc
 208              	.LVL9:
 209 00f8 130101FE 		addi	sp,sp,-32
 210              		.cfi_def_cfa_offset 32
 211 00fc 233C1100 		sd	ra,24(sp)
 212 0100 23388100 		sd	s0,16(sp)
 213 0104 23349100 		sd	s1,8(sp)
 214              		.cfi_offset 1, -8
 215              		.cfi_offset 8, -16
 216              		.cfi_offset 9, -24
 217 0108 13040102 		addi	s0,sp,32
 218              		.cfi_def_cfa 8, 0
 219 010c 6F008006 		j	.L10
 220              	.LVL10:
 221              	.L15:
 222              	.LBB11:
  36:src/KernelConsole.cpp ****     while(true){
  37:src/KernelConsole.cpp ****         if(toEnd && toPrint==0) {
  38:src/KernelConsole.cpp ****             PCB::running->changeState(PCB::FINISHED);
 223              		.loc 1 38 13
 224              		.loc 1 38 38 is_stmt 0
 225 0110 97070000 		la	a5,_ZN3PCB7runningE
 225      83B70700 
 226 0118 83B70700 		ld	a5,0(a5)
 227              	.LVL11:
 228              	.LBB12:
 229              	.LBB13:
 230              		.file 3 "src/../h/../h/../h/PCB.hpp"
   1:src/../h/../h/../h/PCB.hpp **** //
   2:src/../h/../h/../h/PCB.hpp **** // Created by os on 5/16/23.
   3:src/../h/../h/../h/PCB.hpp **** //
   4:src/../h/../h/../h/PCB.hpp **** 
   5:src/../h/../h/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_1_PCB_HPP
   6:src/../h/../h/../h/PCB.hpp **** #define PROJECT_BASE_V1_1_PCB_HPP
   7:src/../h/../h/../h/PCB.hpp **** 
   8:src/../h/../h/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/../h/../h/PCB.hpp **** #include "Scheduler.hpp"
  10:src/../h/../h/../h/PCB.hpp **** 
  11:src/../h/../h/../h/PCB.hpp **** class PCB {
  12:src/../h/../h/../h/PCB.hpp **** private:
GAS LISTING /tmp/ccrd2aCb.s 			page 9


  13:src/../h/../h/../h/PCB.hpp ****     //constants
  14:src/../h/../h/../h/PCB.hpp ****     static uint64 constexpr STACK_SIZE = 1024;
  15:src/../h/../h/../h/PCB.hpp ****     static uint64 constexpr TIME_SLICE = 2;
  16:src/../h/../h/../h/PCB.hpp ****     //struct
  17:src/../h/../h/../h/PCB.hpp ****     struct Context{
  18:src/../h/../h/../h/PCB.hpp ****         uint64 ra;
  19:src/../h/../h/../h/PCB.hpp ****         uint64 sp;
  20:src/../h/../h/../h/PCB.hpp ****     };
  21:src/../h/../h/../h/PCB.hpp **** public:
  22:src/../h/../h/../h/PCB.hpp ****     ///change?
  23:src/../h/../h/../h/PCB.hpp ****     enum State{
  24:src/../h/../h/../h/PCB.hpp ****         READY, RUNNING, SUSPENDED, FINISHED, EXITING, SLEEPING
  25:src/../h/../h/../h/PCB.hpp ****     };
  26:src/../h/../h/../h/PCB.hpp **** 
  27:src/../h/../h/../h/PCB.hpp ****     using Body = void(*)(void *);
  28:src/../h/../h/../h/PCB.hpp ****     static PCB* running;
  29:src/../h/../h/../h/PCB.hpp **** private:
  30:src/../h/../h/../h/PCB.hpp ****     //saving regA4 because interpreter uses it
  31:src/../h/../h/../h/PCB.hpp ****     static uint64 regA4;
  32:src/../h/../h/../h/PCB.hpp **** 
  33:src/../h/../h/../h/PCB.hpp ****     ///change?
  34:src/../h/../h/../h/PCB.hpp ****     bool rcs=0;
  35:src/../h/../h/../h/PCB.hpp **** 
  36:src/../h/../h/../h/PCB.hpp ****     //pcb variables
  37:src/../h/../h/../h/PCB.hpp ****     State state;
  38:src/../h/../h/../h/PCB.hpp ****     Body body;
  39:src/../h/../h/../h/PCB.hpp ****     void* stack;
  40:src/../h/../h/../h/PCB.hpp ****     Context context;
  41:src/../h/../h/../h/PCB.hpp ****     uint64 timeSlice;
  42:src/../h/../h/../h/PCB.hpp ****     void * arg;
  43:src/../h/../h/../h/PCB.hpp ****     uint64 sleepingTime=0;
  44:src/../h/../h/../h/PCB.hpp **** 
  45:src/../h/../h/../h/PCB.hpp ****     //sleepyThread
  46:src/../h/../h/../h/PCB.hpp ****     static PCB* sleepyHead;
  47:src/../h/../h/../h/PCB.hpp ****     PCB* nextSleepy = nullptr;
  48:src/../h/../h/../h/PCB.hpp **** 
  49:src/../h/../h/../h/PCB.hpp ****     //variable for regime change
  50:src/../h/../h/../h/PCB.hpp ****     bool mainOrConsole=false;
  51:src/../h/../h/../h/PCB.hpp **** 
  52:src/../h/../h/../h/PCB.hpp ****     ///change?
  53:src/../h/../h/../h/PCB.hpp ****     uint64 sscratch;
  54:src/../h/../h/../h/PCB.hpp **** public:
  55:src/../h/../h/../h/PCB.hpp ****     explicit PCB(Body body, void* arg, void* stack, uint64 timeSlice):
  56:src/../h/../h/../h/PCB.hpp ****         state(READY),
  57:src/../h/../h/../h/PCB.hpp ****         body(body),
  58:src/../h/../h/../h/PCB.hpp ****         stack(stack),
  59:src/../h/../h/../h/PCB.hpp ****         context({
  60:src/../h/../h/../h/PCB.hpp ****             (uint64) &threadWrapper,
  61:src/../h/../h/../h/PCB.hpp ****             (uint64) ((char *) stack + DEFAULT_STACK_SIZE)
  62:src/../h/../h/../h/PCB.hpp ****         }),
  63:src/../h/../h/../h/PCB.hpp ****         timeSlice(timeSlice),
  64:src/../h/../h/../h/PCB.hpp ****         arg(arg)
  65:src/../h/../h/../h/PCB.hpp ****     {}
  66:src/../h/../h/../h/PCB.hpp **** 
  67:src/../h/../h/../h/PCB.hpp ****     void* operator new (size_t);
  68:src/../h/../h/../h/PCB.hpp ****     void operator delete (void*);
  69:src/../h/../h/../h/PCB.hpp **** 
GAS LISTING /tmp/ccrd2aCb.s 			page 10


  70:src/../h/../h/../h/PCB.hpp ****     ~PCB();
  71:src/../h/../h/../h/PCB.hpp ****     static void contextSwitch(Context* oldContext, Context* runningContext);
  72:src/../h/../h/../h/PCB.hpp ****     static void dispatch();
  73:src/../h/../h/../h/PCB.hpp **** 
  74:src/../h/../h/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  75:src/../h/../h/../h/PCB.hpp **** 
  76:src/../h/../h/../h/PCB.hpp ****     //wrapper
  77:src/../h/../h/../h/PCB.hpp ****     static void threadWrapper();
  78:src/../h/../h/../h/PCB.hpp **** 
  79:src/../h/../h/../h/PCB.hpp ****     //getters setters etc.
  80:src/../h/../h/../h/PCB.hpp ****     bool isFinished() const { return state==FINISHED;}
  81:src/../h/../h/../h/PCB.hpp ****     void start() { Scheduler::put(this);}
  82:src/../h/../h/../h/PCB.hpp ****     uint64 getTimeSlice() const { return timeSlice;}
  83:src/../h/../h/../h/PCB.hpp ****     void setSleepingTime(uint64 t) { sleepingTime=t;}
  84:src/../h/../h/../h/PCB.hpp ****     uint64  getSleepingTime() const {return sleepingTime;}
  85:src/../h/../h/../h/PCB.hpp ****     static void decreaseSleepingTime() {if(sleepyHead) sleepyHead->sleepingTime--;}
  86:src/../h/../h/../h/PCB.hpp ****     bool isSleeping() const { return state==SLEEPING;}
  87:src/../h/../h/../h/PCB.hpp ****     bool isSuspended() const {return state==SUSPENDED;}
  88:src/../h/../h/../h/PCB.hpp ****     void setMainOrConsole(bool mc) { mainOrConsole=mc;}
  89:src/../h/../h/../h/PCB.hpp ****     void changeState(State s) { state=s;}
 231              		.loc 3 89 33 is_stmt 1
 232              		.loc 3 89 38 is_stmt 0
 233 011c 13073000 		li	a4,3
 234 0120 23A2E700 		sw	a4,4(a5)
 235              	.LVL12:
 236              	.LBE13:
 237              	.LBE12:
  39:src/KernelConsole.cpp ****             thread_exit();
 238              		.loc 1 39 13 is_stmt 1
 239              		.loc 1 39 24 is_stmt 0
 240 0124 97000000 		call	_Z11thread_exitv@plt
 240      E7800000 
 241              	.LVL13:
 242              	.L11:
  40:src/KernelConsole.cpp ****         }
  41:src/KernelConsole.cpp **** 
  42:src/KernelConsole.cpp ****         if((*((char*)CONSOLE_STATUS)&CONSOLE_TX_STATUS_BIT)){
 243              		.loc 1 42 9 is_stmt 1
 244              	.LBB14:
 245              		.loc 1 42 13 is_stmt 0
 246 012c 97070000 		la	a5,CONSOLE_STATUS
 246      83B70700 
 247 0134 83B70700 		ld	a5,0(a5)
 248 0138 83C70700 		lbu	a5,0(a5)
 249              		.loc 1 42 9
 250 013c 93F70702 		andi	a5,a5,32
 251 0140 63880704 		beqz	a5,.L12
 252              	.LBB15:
  43:src/KernelConsole.cpp ****             char c = outputBuffer->get();
 253              		.loc 1 43 13 is_stmt 1
 254              		.loc 1 43 39 is_stmt 0
 255 0144 97040000 		lla	s1,.LANCHOR0
 255      93840400 
 256 014c 03B58400 		ld	a0,8(s1)
 257 0150 97000000 		call	_ZN13ConsoleBuffer3getEv@plt
 257      E7800000 
 258              	.LVL14:
GAS LISTING /tmp/ccrd2aCb.s 			page 11


  44:src/KernelConsole.cpp ****             *(char*)CONSOLE_TX_DATA=c;
 259              		.loc 1 44 13 is_stmt 1
 260 0158 97070000 		la	a5,CONSOLE_TX_DATA
 260      83B70700 
 261 0160 83B70700 		ld	a5,0(a5)
 262              		.loc 1 44 36 is_stmt 0
 263 0164 2380A700 		sb	a0,0(a5)
  45:src/KernelConsole.cpp ****             toPrint--;
 264              		.loc 1 45 13 is_stmt 1
 265              		.loc 1 45 20 is_stmt 0
 266 0168 83B70401 		ld	a5,16(s1)
 267 016c 9387F7FF 		addi	a5,a5,-1
 268 0170 23B8F400 		sd	a5,16(s1)
 269              	.LVL15:
 270              	.L10:
 271              	.LBE15:
 272              	.LBE14:
 273              	.LBE11:
  36:src/KernelConsole.cpp ****         if(toEnd && toPrint==0) {
 274              		.loc 1 36 5 is_stmt 1
 275              	.LBB17:
  37:src/KernelConsole.cpp ****             PCB::running->changeState(PCB::FINISHED);
 276              		.loc 1 37 9
 277 0174 97070000 		lbu	a5,.LANCHOR0+24
 277      83C70700 
 278 017c E38807FA 		beqz	a5,.L11
  37:src/KernelConsole.cpp ****             PCB::running->changeState(PCB::FINISHED);
 279              		.loc 1 37 28 is_stmt 0 discriminator 1
 280 0180 97070000 		ld	a5,.LANCHOR0+16
 280      83B70700 
  37:src/KernelConsole.cpp ****             PCB::running->changeState(PCB::FINISHED);
 281              		.loc 1 37 18 discriminator 1
 282 0188 E39207FA 		bnez	a5,.L11
 283 018c 6FF05FF8 		j	.L15
 284              	.L12:
 285              	.LBB16:
  46:src/KernelConsole.cpp ****         }
  47:src/KernelConsole.cpp ****         else
  48:src/KernelConsole.cpp ****             thread_dispatch();
 286              		.loc 1 48 13 is_stmt 1
 287              		.loc 1 48 28 is_stmt 0
 288 0190 97000000 		call	_Z15thread_dispatchv@plt
 288      E7800000 
 289              	.LVL16:
 290 0198 6FF0DFFD 		j	.L10
 291              	.LBE16:
 292              	.LBE17:
 293              		.cfi_endproc
 294              	.LFE50:
 296              		.align	2
 297              		.globl	_ZN13KernelConsole4initEv
 299              	_ZN13KernelConsole4initEv:
 300              	.LFB51:
  49:src/KernelConsole.cpp ****     }
  50:src/KernelConsole.cpp **** }
  51:src/KernelConsole.cpp **** 
  52:src/KernelConsole.cpp **** void KernelConsole::init() {
GAS LISTING /tmp/ccrd2aCb.s 			page 12


 301              		.loc 1 52 28 is_stmt 1
 302              		.cfi_startproc
 303              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 304              		.cfi_lsda 0x1b,.LLSDA51
  53:src/KernelConsole.cpp ****     if(!initialized){
 305              		.loc 1 53 5
 306              		.loc 1 53 8 is_stmt 0
 307 019c 97070000 		lbu	a5,.LANCHOR0+25
 307      83C70700 
 308              		.loc 1 53 5
 309 01a4 63840700 		beqz	a5,.L26
 310 01a8 67800000 		ret
 311              	.L26:
  52:src/KernelConsole.cpp ****     if(!initialized){
 312              		.loc 1 52 28
 313 01ac 130101FE 		addi	sp,sp,-32
 314              		.cfi_def_cfa_offset 32
 315 01b0 233C1100 		sd	ra,24(sp)
 316 01b4 23388100 		sd	s0,16(sp)
 317 01b8 23349100 		sd	s1,8(sp)
 318 01bc 23302101 		sd	s2,0(sp)
 319              		.cfi_offset 1, -8
 320              		.cfi_offset 8, -16
 321              		.cfi_offset 9, -24
 322              		.cfi_offset 18, -32
 323 01c0 13040102 		addi	s0,sp,32
 324              		.cfi_def_cfa 8, 0
  54:src/KernelConsole.cpp ****         inputBuffer=new ConsoleBuffer(4096);
 325              		.loc 1 54 9 is_stmt 1
 326              		.loc 1 54 43 is_stmt 0
 327 01c4 37150000 		li	a0,4096
 328 01c8 13050503 		addi	a0,a0,48
 329              	.LEHB0:
 330 01cc 97000000 		call	_Znwm@plt
 330      E7800000 
 331              	.LVL17:
 332              	.LEHE0:
 333 01d4 93040500 		mv	s1,a0
 334 01d8 B7150000 		li	a1,4096
 335              	.LEHB1:
 336 01dc 97000000 		call	_ZN13ConsoleBufferC1Ei@plt
 336      E7800000 
 337              	.LVL18:
 338              	.LEHE1:
 339              		.loc 1 54 20 discriminator 2
 340 01e4 97070000 		sd	s1,.LANCHOR0,a5
 340      23B09700 
  55:src/KernelConsole.cpp ****         outputBuffer=new ConsoleBuffer(4096);
 341              		.loc 1 55 9 is_stmt 1 discriminator 2
 342              		.loc 1 55 44 is_stmt 0 discriminator 2
 343 01ec 37150000 		li	a0,4096
 344 01f0 13050503 		addi	a0,a0,48
 345              	.LEHB2:
 346 01f4 97000000 		call	_Znwm@plt
 346      E7800000 
 347              	.LVL19:
 348              	.LEHE2:
GAS LISTING /tmp/ccrd2aCb.s 			page 13


 349 01fc 93040500 		mv	s1,a0
 350 0200 B7150000 		li	a1,4096
 351              	.LEHB3:
 352 0204 97000000 		call	_ZN13ConsoleBufferC1Ei@plt
 352      E7800000 
 353              	.LVL20:
 354              	.LEHE3:
 355              		.loc 1 55 21 discriminator 2
 356 020c 97070000 		lla	a5,.LANCHOR0
 356      93870700 
 357 0214 23B49700 		sd	s1,8(a5)
  56:src/KernelConsole.cpp ****         initialized=1;
 358              		.loc 1 56 9 is_stmt 1 discriminator 2
 359              		.loc 1 56 20 is_stmt 0 discriminator 2
 360 0218 13071000 		li	a4,1
 361 021c A38CE700 		sb	a4,25(a5)
  57:src/KernelConsole.cpp ****         toEnd=0;
 362              		.loc 1 57 9 is_stmt 1 discriminator 2
 363              		.loc 1 57 14 is_stmt 0 discriminator 2
 364 0220 238C0700 		sb	zero,24(a5)
  58:src/KernelConsole.cpp ****     }
  59:src/KernelConsole.cpp **** }
 365              		.loc 1 59 1 discriminator 2
 366 0224 83308101 		ld	ra,24(sp)
 367              		.cfi_remember_state
 368              		.cfi_restore 1
 369 0228 03340101 		ld	s0,16(sp)
 370              		.cfi_restore 8
 371              		.cfi_def_cfa 2, 32
 372 022c 83348100 		ld	s1,8(sp)
 373              		.cfi_restore 9
 374 0230 03390100 		ld	s2,0(sp)
 375              		.cfi_restore 18
 376 0234 13010102 		addi	sp,sp,32
 377              		.cfi_def_cfa_offset 0
 378 0238 67800000 		jr	ra
 379              	.L20:
 380              		.cfi_restore_state
 381 023c 13090500 		mv	s2,a0
  54:src/KernelConsole.cpp ****         outputBuffer=new ConsoleBuffer(4096);
 382              		.loc 1 54 43
 383 0240 13850400 		mv	a0,s1
 384 0244 97000000 		call	_ZdlPv@plt
 384      E7800000 
 385              	.LVL21:
 386 024c 13050900 		mv	a0,s2
 387              	.LEHB4:
 388 0250 97000000 		call	_Unwind_Resume@plt
 388      E7800000 
 389              	.LVL22:
 390              	.L21:
 391 0258 13090500 		mv	s2,a0
  55:src/KernelConsole.cpp ****         initialized=1;
 392              		.loc 1 55 44
 393 025c 13850400 		mv	a0,s1
 394 0260 97000000 		call	_ZdlPv@plt
 394      E7800000 
GAS LISTING /tmp/ccrd2aCb.s 			page 14


 395              	.LVL23:
 396 0268 13050900 		mv	a0,s2
 397 026c 97000000 		call	_Unwind_Resume@plt
 397      E7800000 
 398              	.LVL24:
 399              	.LEHE4:
 400              		.cfi_endproc
 401              	.LFE51:
 402              		.globl	__gxx_personality_v0
 403              		.section	.gcc_except_table,"a",@progbits
 404              	.LLSDA51:
 405 0000 FF       		.byte	0xff
 406 0001 FF       		.byte	0xff
 407 0002 03       		.byte	0x3
 408 0003 41       		.byte	0x41
 409 0004 00000000 		.4byte	.LEHB0-.LFB51
 410 0008 00000000 		.4byte	.LEHE0-.LEHB0
 411 000c 00000000 		.4byte	0
 412 0010 00       		.byte	0
 413 0011 00000000 		.4byte	.LEHB1-.LFB51
 414 0015 00000000 		.4byte	.LEHE1-.LEHB1
 415 0019 00000000 		.4byte	.L20-.LFB51
 416 001d 00       		.byte	0
 417 001e 00000000 		.4byte	.LEHB2-.LFB51
 418 0022 00000000 		.4byte	.LEHE2-.LEHB2
 419 0026 00000000 		.4byte	0
 420 002a 00       		.byte	0
 421 002b 00000000 		.4byte	.LEHB3-.LFB51
 422 002f 00000000 		.4byte	.LEHE3-.LEHB3
 423 0033 00000000 		.4byte	.L21-.LFB51
 424 0037 00       		.byte	0
 425 0038 00000000 		.4byte	.LEHB4-.LFB51
 426 003c 00000000 		.4byte	.LEHE4-.LEHB4
 427 0040 00000000 		.4byte	0
 428 0044 00       		.byte	0
 429              		.text
 431              		.globl	_ZN13KernelConsole7toPrintE
 432              		.globl	_ZN13KernelConsole5toEndE
 433              		.globl	_ZN13KernelConsole12outputBufferE
 434              		.globl	_ZN13KernelConsole11inputBufferE
 435              		.globl	_ZN13KernelConsole11initializedE
 436              		.bss
 437              		.align	3
 438              		.set	.LANCHOR0,. + 0
 441              	_ZN13KernelConsole11inputBufferE:
 442 0000 00000000 		.zero	8
 442      00000000 
 445              	_ZN13KernelConsole12outputBufferE:
 446 0008 00000000 		.zero	8
 446      00000000 
 449              	_ZN13KernelConsole7toPrintE:
 450 0010 00000000 		.zero	8
 450      00000000 
 453              	_ZN13KernelConsole5toEndE:
 454 0018 00       		.zero	1
 457              	_ZN13KernelConsole11initializedE:
 458 0019 00       		.zero	1
GAS LISTING /tmp/ccrd2aCb.s 			page 15


 459              		.text
 460              	.Letext0:
 461              		.file 4 "src/../h/../lib//hw.h"
 462              		.file 5 "src/../h/../h/ConsoleBuffer.hpp"
 463              		.file 6 "src/../h/KernelConsole.hpp"
 464              		.file 7 "src/../h/../h/../h/syscall_c.hpp"
 3441              		.align	3
 3444              	DW.ref.__gxx_personality_v0:
 3445 0000 00000000 		.dword	__gxx_personality_v0
 3445      00000000 
 3446              		.ident	"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04) 9.4.0"
 3447              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccrd2aCb.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 KernelConsole.cpp
     /tmp/ccrd2aCb.s:9      .text:0000000000000000 _ZN13KernelConsole6__getcEv
     /tmp/ccrd2aCb.s:13     .text:0000000000000000 .L0 
     /tmp/ccrd2aCb.s:14     .text:0000000000000000 .L0 
     /tmp/ccrd2aCb.s:15     .text:0000000000000004 .L0 
     /tmp/ccrd2aCb.s:18     .text:000000000000000c .L0 
     /tmp/ccrd2aCb.s:19     .text:000000000000000c .L0 
     /tmp/ccrd2aCb.s:21     .text:0000000000000010 .L0 
     /tmp/ccrd2aCb.s:23     .text:0000000000000010 .L0 
     /tmp/ccrd2aCb.s:24     .text:0000000000000010 .L0 
     /tmp/ccrd2aCb.s:28     .text:0000000000000020 .L0 
     /tmp/ccrd2aCb.s:29     .text:0000000000000020 .L0 
     /tmp/ccrd2aCb.s:30     .text:0000000000000024 .L0 
     /tmp/ccrd2aCb.s:32     .text:0000000000000028 .L0 
     /tmp/ccrd2aCb.s:33     .text:0000000000000028 .L0 
     /tmp/ccrd2aCb.s:35     .text:000000000000002c .L0 
     /tmp/ccrd2aCb.s:37     .text:0000000000000030 .L0 
     /tmp/ccrd2aCb.s:43     .text:0000000000000030 _ZN13KernelConsole5getcHEv
     /tmp/ccrd2aCb.s:46     .text:0000000000000030 .L0 
     /tmp/ccrd2aCb.s:47     .text:0000000000000030 .L0 
     /tmp/ccrd2aCb.s:48     .text:0000000000000034 .L0 
     /tmp/ccrd2aCb.s:51     .text:000000000000003c .L0 
     /tmp/ccrd2aCb.s:52     .text:000000000000003c .L0 
     /tmp/ccrd2aCb.s:54     .text:0000000000000040 .L0 
     /tmp/ccrd2aCb.s:56     .text:0000000000000040 .L0 
     /tmp/ccrd2aCb.s:57     .text:0000000000000040 .L0 
     /tmp/ccrd2aCb.s:60     .text:0000000000000048 .L0 
src/KernelConsole.cpp:21     .text:0000000000000048 .L0 
     /tmp/ccrd2aCb.s:70     .text:000000000000004c .L0 
     /tmp/ccrd2aCb.s:71     .text:000000000000004c .L0 
     /tmp/ccrd2aCb.s:72     .text:000000000000004c .L0 
src/../h/../h/Riscv.hpp:159    .text:000000000000004c .L0 
     /tmp/ccrd2aCb.s:79     .text:0000000000000050 .L0 
     /tmp/ccrd2aCb.s:81     .text:0000000000000050 .L0 
src/../h/../h/Riscv.hpp:160    .text:0000000000000060 .L0 
     /tmp/ccrd2aCb.s:90     .text:0000000000000064 .L0 
src/../h/../h/Riscv.hpp:161    .text:0000000000000064 .L0 
     /tmp/ccrd2aCb.s:95     .text:0000000000000068 .L0 
src/../h/../h/Riscv.hpp:162    .text:0000000000000068 .L0 
     /tmp/ccrd2aCb.s:104    .text:000000000000006c .L0 
     /tmp/ccrd2aCb.s:105    .text:0000000000000070 .L0 
     /tmp/ccrd2aCb.s:107    .text:0000000000000074 .L0 
     /tmp/ccrd2aCb.s:108    .text:0000000000000074 .L0 
     /tmp/ccrd2aCb.s:110    .text:0000000000000078 .L0 
     /tmp/ccrd2aCb.s:112    .text:000000000000007c .L0 
     /tmp/ccrd2aCb.s:118    .text:000000000000007c _ZN13KernelConsole6__putcEc
     /tmp/ccrd2aCb.s:121    .text:000000000000007c .L0 
     /tmp/ccrd2aCb.s:123    .text:000000000000007c .L0 
     /tmp/ccrd2aCb.s:124    .text:0000000000000080 .L0 
     /tmp/ccrd2aCb.s:128    .text:000000000000008c .L0 
     /tmp/ccrd2aCb.s:129    .text:000000000000008c .L0 
     /tmp/ccrd2aCb.s:130    .text:000000000000008c .L0 
     /tmp/ccrd2aCb.s:132    .text:0000000000000090 .L0 
     /tmp/ccrd2aCb.s:135    .text:0000000000000094 .L0 
     /tmp/ccrd2aCb.s:136    .text:0000000000000094 .L0 
     /tmp/ccrd2aCb.s:142    .text:00000000000000a8 .L0 
GAS LISTING /tmp/ccrd2aCb.s 			page 17


     /tmp/ccrd2aCb.s:143    .text:00000000000000a8 .L0 
     /tmp/ccrd2aCb.s:147    .text:00000000000000b4 .L0 
     /tmp/ccrd2aCb.s:148    .text:00000000000000b8 .L0 
     /tmp/ccrd2aCb.s:150    .text:00000000000000bc .L0 
     /tmp/ccrd2aCb.s:151    .text:00000000000000bc .L0 
     /tmp/ccrd2aCb.s:153    .text:00000000000000c0 .L0 
     /tmp/ccrd2aCb.s:155    .text:00000000000000c4 .L0 
     /tmp/ccrd2aCb.s:157    .text:00000000000000c8 .L0 
     /tmp/ccrd2aCb.s:163    .text:00000000000000c8 _ZN13KernelConsole5putcHEv
     /tmp/ccrd2aCb.s:166    .text:00000000000000c8 .L0 
     /tmp/ccrd2aCb.s:167    .text:00000000000000c8 .L0 
     /tmp/ccrd2aCb.s:168    .text:00000000000000cc .L0 
     /tmp/ccrd2aCb.s:171    .text:00000000000000d4 .L0 
     /tmp/ccrd2aCb.s:172    .text:00000000000000d4 .L0 
     /tmp/ccrd2aCb.s:174    .text:00000000000000d8 .L0 
     /tmp/ccrd2aCb.s:176    .text:00000000000000d8 .L0 
     /tmp/ccrd2aCb.s:177    .text:00000000000000d8 .L0 
src/KernelConsole.cpp:15     .text:00000000000000d8 .L0 
     /tmp/ccrd2aCb.s:184    .text:00000000000000dc .L0 
     /tmp/ccrd2aCb.s:186    .text:00000000000000dc .L0 
     /tmp/ccrd2aCb.s:190    .text:00000000000000e8 .L0 
     /tmp/ccrd2aCb.s:191    .text:00000000000000ec .L0 
     /tmp/ccrd2aCb.s:193    .text:00000000000000f0 .L0 
     /tmp/ccrd2aCb.s:194    .text:00000000000000f0 .L0 
     /tmp/ccrd2aCb.s:196    .text:00000000000000f4 .L0 
     /tmp/ccrd2aCb.s:198    .text:00000000000000f8 .L0 
     /tmp/ccrd2aCb.s:204    .text:00000000000000f8 _ZN13KernelConsole14consoleWrapperEPv
     /tmp/ccrd2aCb.s:207    .text:00000000000000f8 .L0 
     /tmp/ccrd2aCb.s:209    .text:00000000000000f8 .L0 
     /tmp/ccrd2aCb.s:210    .text:00000000000000fc .L0 
     /tmp/ccrd2aCb.s:214    .text:0000000000000108 .L0 
     /tmp/ccrd2aCb.s:215    .text:0000000000000108 .L0 
     /tmp/ccrd2aCb.s:216    .text:0000000000000108 .L0 
     /tmp/ccrd2aCb.s:218    .text:000000000000010c .L0 
     /tmp/ccrd2aCb.s:224    .text:0000000000000110 .L0 
     /tmp/ccrd2aCb.s:225    .text:0000000000000110 .L0 
     /tmp/ccrd2aCb.s:232    .text:000000000000011c .L0 
     /tmp/ccrd2aCb.s:233    .text:000000000000011c .L0 
     /tmp/ccrd2aCb.s:239    .text:0000000000000124 .L0 
     /tmp/ccrd2aCb.s:240    .text:0000000000000124 .L0 
     /tmp/ccrd2aCb.s:245    .text:000000000000012c .L0 
     /tmp/ccrd2aCb.s:246    .text:000000000000012c .L0 
     /tmp/ccrd2aCb.s:250    .text:000000000000013c .L0 
     /tmp/ccrd2aCb.s:254    .text:0000000000000144 .L0 
     /tmp/ccrd2aCb.s:255    .text:0000000000000144 .L0 
     /tmp/ccrd2aCb.s:260    .text:0000000000000158 .L0 
     /tmp/ccrd2aCb.s:263    .text:0000000000000164 .L0 
     /tmp/ccrd2aCb.s:265    .text:0000000000000168 .L0 
     /tmp/ccrd2aCb.s:266    .text:0000000000000168 .L0 
     /tmp/ccrd2aCb.s:276    .text:0000000000000174 .L0 
     /tmp/ccrd2aCb.s:277    .text:0000000000000174 .L0 
     /tmp/ccrd2aCb.s:280    .text:0000000000000180 .L0 
     /tmp/ccrd2aCb.s:282    .text:0000000000000188 .L0 
     /tmp/ccrd2aCb.s:287    .text:0000000000000190 .L0 
     /tmp/ccrd2aCb.s:288    .text:0000000000000190 .L0 
     /tmp/ccrd2aCb.s:293    .text:000000000000019c .L0 
     /tmp/ccrd2aCb.s:299    .text:000000000000019c _ZN13KernelConsole4initEv
GAS LISTING /tmp/ccrd2aCb.s 			page 18


     /tmp/ccrd2aCb.s:302    .text:000000000000019c .L0 
     /tmp/ccrd2aCb.s:3444   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccrd2aCb.s:305    .text:000000000000019c .L0 
     /tmp/ccrd2aCb.s:306    .text:000000000000019c .L0 
     /tmp/ccrd2aCb.s:307    .text:000000000000019c .L0 
     /tmp/ccrd2aCb.s:309    .text:00000000000001a4 .L0 
     /tmp/ccrd2aCb.s:313    .text:00000000000001ac .L0 
     /tmp/ccrd2aCb.s:314    .text:00000000000001b0 .L0 
     /tmp/ccrd2aCb.s:319    .text:00000000000001c0 .L0 
     /tmp/ccrd2aCb.s:320    .text:00000000000001c0 .L0 
     /tmp/ccrd2aCb.s:321    .text:00000000000001c0 .L0 
     /tmp/ccrd2aCb.s:322    .text:00000000000001c0 .L0 
     /tmp/ccrd2aCb.s:324    .text:00000000000001c4 .L0 
     /tmp/ccrd2aCb.s:326    .text:00000000000001c4 .L0 
     /tmp/ccrd2aCb.s:327    .text:00000000000001c4 .L0 
     /tmp/ccrd2aCb.s:340    .text:00000000000001e4 .L0 
     /tmp/ccrd2aCb.s:342    .text:00000000000001ec .L0 
     /tmp/ccrd2aCb.s:343    .text:00000000000001ec .L0 
     /tmp/ccrd2aCb.s:356    .text:000000000000020c .L0 
     /tmp/ccrd2aCb.s:359    .text:0000000000000218 .L0 
     /tmp/ccrd2aCb.s:360    .text:0000000000000218 .L0 
     /tmp/ccrd2aCb.s:363    .text:0000000000000220 .L0 
     /tmp/ccrd2aCb.s:364    .text:0000000000000220 .L0 
     /tmp/ccrd2aCb.s:366    .text:0000000000000224 .L0 
     /tmp/ccrd2aCb.s:367    .text:0000000000000228 .L0 
     /tmp/ccrd2aCb.s:368    .text:0000000000000228 .L0 
     /tmp/ccrd2aCb.s:370    .text:000000000000022c .L0 
     /tmp/ccrd2aCb.s:371    .text:000000000000022c .L0 
     /tmp/ccrd2aCb.s:373    .text:0000000000000230 .L0 
     /tmp/ccrd2aCb.s:375    .text:0000000000000234 .L0 
     /tmp/ccrd2aCb.s:377    .text:0000000000000238 .L0 
     /tmp/ccrd2aCb.s:380    .text:000000000000023c .L0 
     /tmp/ccrd2aCb.s:383    .text:0000000000000240 .L0 
     /tmp/ccrd2aCb.s:393    .text:000000000000025c .L0 
     /tmp/ccrd2aCb.s:400    .text:0000000000000274 .L0 
     /tmp/ccrd2aCb.s:449    .bss:0000000000000010 _ZN13KernelConsole7toPrintE
     /tmp/ccrd2aCb.s:453    .bss:0000000000000018 _ZN13KernelConsole5toEndE
     /tmp/ccrd2aCb.s:445    .bss:0000000000000008 _ZN13KernelConsole12outputBufferE
     /tmp/ccrd2aCb.s:441    .bss:0000000000000000 _ZN13KernelConsole11inputBufferE
     /tmp/ccrd2aCb.s:457    .bss:0000000000000019 _ZN13KernelConsole11initializedE
     /tmp/ccrd2aCb.s:438    .bss:0000000000000000 .LANCHOR0
     /tmp/ccrd2aCb.s:465    .text:0000000000000274 .L0 
     /tmp/ccrd2aCb.s:24     .text:0000000000000010 .L0 
     /tmp/ccrd2aCb.s:81     .text:0000000000000050 .L0 
     /tmp/ccrd2aCb.s:136    .text:0000000000000094 .L0 
     /tmp/ccrd2aCb.s:225    .text:0000000000000110 .L0 
     /tmp/ccrd2aCb.s:246    .text:000000000000012c .L0 
     /tmp/ccrd2aCb.s:255    .text:0000000000000144 .L0 
     /tmp/ccrd2aCb.s:260    .text:0000000000000158 .L0 
     /tmp/ccrd2aCb.s:277    .text:0000000000000174 .L0 
     /tmp/ccrd2aCb.s:280    .text:0000000000000180 .L0 
     /tmp/ccrd2aCb.s:307    .text:000000000000019c .L0 
     /tmp/ccrd2aCb.s:340    .text:00000000000001e4 .L0 
     /tmp/ccrd2aCb.s:356    .text:000000000000020c .L0 
     /tmp/ccrd2aCb.s:270    .text:0000000000000174 .L10
     /tmp/ccrd2aCb.s:284    .text:0000000000000190 .L12
     /tmp/ccrd2aCb.s:242    .text:000000000000012c .L11
GAS LISTING /tmp/ccrd2aCb.s 			page 19


     /tmp/ccrd2aCb.s:221    .text:0000000000000110 .L15
     /tmp/ccrd2aCb.s:311    .text:00000000000001ac .L26
     /tmp/ccrd2aCb.s:329    .text:00000000000001cc .LEHB0
     /tmp/ccrd2aCb.s:300    .text:000000000000019c .LFB51
     /tmp/ccrd2aCb.s:332    .text:00000000000001d4 .LEHE0
     /tmp/ccrd2aCb.s:335    .text:00000000000001dc .LEHB1
     /tmp/ccrd2aCb.s:338    .text:00000000000001e4 .LEHE1
     /tmp/ccrd2aCb.s:379    .text:000000000000023c .L20
     /tmp/ccrd2aCb.s:345    .text:00000000000001f4 .LEHB2
     /tmp/ccrd2aCb.s:348    .text:00000000000001fc .LEHE2
     /tmp/ccrd2aCb.s:351    .text:0000000000000204 .LEHB3
     /tmp/ccrd2aCb.s:354    .text:000000000000020c .LEHE3
     /tmp/ccrd2aCb.s:390    .text:0000000000000258 .L21
     /tmp/ccrd2aCb.s:387    .text:0000000000000250 .LEHB4
     /tmp/ccrd2aCb.s:399    .text:0000000000000274 .LEHE4
     /tmp/ccrd2aCb.s:1896   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccrd2aCb.s:3366   .debug_str:0000000000000985 .LASF179
     /tmp/ccrd2aCb.s:3318   .debug_str:000000000000082d .LASF180
     /tmp/ccrd2aCb.s:3374   .debug_str:0000000000000a77 .LASF181
     /tmp/ccrd2aCb.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccrd2aCb.s:460    .text:0000000000000274 .Letext0
     /tmp/ccrd2aCb.s:3050   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccrd2aCb.s:3180   .debug_str:00000000000003f9 .LASF0
     /tmp/ccrd2aCb.s:3204   .debug_str:00000000000004bd .LASF1
     /tmp/ccrd2aCb.s:3300   .debug_str:00000000000007ad .LASF2
     /tmp/ccrd2aCb.s:3308   .debug_str:00000000000007f8 .LASF4
     /tmp/ccrd2aCb.s:3192   .debug_str:0000000000000451 .LASF3
     /tmp/ccrd2aCb.s:3062   .debug_str:0000000000000051 .LASF5
     /tmp/ccrd2aCb.s:3266   .debug_str:000000000000069d .LASF6
     /tmp/ccrd2aCb.s:3198   .debug_str:0000000000000492 .LASF7
     /tmp/ccrd2aCb.s:3158   .debug_str:000000000000035f .LASF8
     /tmp/ccrd2aCb.s:3166   .debug_str:00000000000003a2 .LASF9
     /tmp/ccrd2aCb.s:3098   .debug_str:0000000000000187 .LASF10
     /tmp/ccrd2aCb.s:3150   .debug_str:0000000000000328 .LASF11
     /tmp/ccrd2aCb.s:3112   .debug_str:00000000000001f0 .LASF12
     /tmp/ccrd2aCb.s:3096   .debug_str:0000000000000177 .LASF13
     /tmp/ccrd2aCb.s:3344   .debug_str:000000000000090c .LASF14
     /tmp/ccrd2aCb.s:3138   .debug_str:00000000000002b5 .LASF15
     /tmp/ccrd2aCb.s:3332   .debug_str:00000000000008ba .LASF16
     /tmp/ccrd2aCb.s:3224   .debug_str:000000000000056b .LASF17
     /tmp/ccrd2aCb.s:3348   .debug_str:0000000000000928 .LASF182
     /tmp/ccrd2aCb.s:3358   .debug_str:0000000000000961 .LASF183
     /tmp/ccrd2aCb.s:3094   .debug_str:0000000000000171 .LASF18
     /tmp/ccrd2aCb.s:3324   .debug_str:000000000000086f .LASF19
     /tmp/ccrd2aCb.s:3106   .debug_str:00000000000001af .LASF20
     /tmp/ccrd2aCb.s:3084   .debug_str:000000000000012d .LASF21
     /tmp/ccrd2aCb.s:3270   .debug_str:00000000000006cb .LASF22
     /tmp/ccrd2aCb.s:3104   .debug_str:00000000000001a6 .LASF23
     /tmp/ccrd2aCb.s:3304   .debug_str:00000000000007d3 .LASF24
     /tmp/ccrd2aCb.s:3422   .debug_str:0000000000000c53 .LASF25
     /tmp/ccrd2aCb.s:3362   .debug_str:0000000000000971 .LASF45
     /tmp/ccrd2aCb.s:3176   .debug_str:00000000000003db .LASF32
     /tmp/ccrd2aCb.s:3128   .debug_str:000000000000027e .LASF26
     /tmp/ccrd2aCb.s:3262   .debug_str:000000000000068b .LASF184
     /tmp/ccrd2aCb.s:3058   .debug_str:000000000000003c .LASF27
     /tmp/ccrd2aCb.s:3430   .debug_str:0000000000000c86 .LASF28
     /tmp/ccrd2aCb.s:3376   .debug_str:0000000000000a9a .LASF29
GAS LISTING /tmp/ccrd2aCb.s 			page 20


     /tmp/ccrd2aCb.s:3372   .debug_str:0000000000000a6d .LASF30
     /tmp/ccrd2aCb.s:3194   .debug_str:0000000000000463 .LASF31
     /tmp/ccrd2aCb.s:3160   .debug_str:000000000000036f .LASF33
     /tmp/ccrd2aCb.s:3234   .debug_str:00000000000005bb .LASF34
     /tmp/ccrd2aCb.s:3292   .debug_str:000000000000076f .LASF35
     /tmp/ccrd2aCb.s:3130   .debug_str:0000000000000284 .LASF36
     /tmp/ccrd2aCb.s:3378   .debug_str:0000000000000aa2 .LASF141
     /tmp/ccrd2aCb.s:3434   .debug_str:0000000000000ca4 .LASF37
     /tmp/ccrd2aCb.s:3140   .debug_str:00000000000002cb .LASF39
     /tmp/ccrd2aCb.s:3060   .debug_str:0000000000000041 .LASF41
     /tmp/ccrd2aCb.s:3190   .debug_str:0000000000000444 .LASF43
     /tmp/ccrd2aCb.s:3202   .debug_str:00000000000004b8 .LASF38
     /tmp/ccrd2aCb.s:3250   .debug_str:0000000000000626 .LASF40
     /tmp/ccrd2aCb.s:3116   .debug_str:0000000000000219 .LASF42
     /tmp/ccrd2aCb.s:3080   .debug_str:0000000000000100 .LASF44
     /tmp/ccrd2aCb.s:3124   .debug_str:000000000000025b .LASF47
     /tmp/ccrd2aCb.s:3074   .debug_str:00000000000000b4 .LASF49
     /tmp/ccrd2aCb.s:3320   .debug_str:0000000000000843 .LASF46
     /tmp/ccrd2aCb.s:3086   .debug_str:0000000000000136 .LASF48
     /tmp/ccrd2aCb.s:3078   .debug_str:00000000000000e7 .LASF50
     /tmp/ccrd2aCb.s:3350   .debug_str:0000000000000930 .LASF51
     /tmp/ccrd2aCb.s:3412   .debug_str:0000000000000be6 .LASF55
     /tmp/ccrd2aCb.s:3428   .debug_str:0000000000000c80 .LASF52
     /tmp/ccrd2aCb.s:3368   .debug_str:0000000000000a49 .LASF53
     /tmp/ccrd2aCb.s:3210   .debug_str:00000000000004f0 .LASF54
     /tmp/ccrd2aCb.s:3114   .debug_str:0000000000000200 .LASF56
     /tmp/ccrd2aCb.s:3274   .debug_str:00000000000006e8 .LASF57
     /tmp/ccrd2aCb.s:3400   .debug_str:0000000000000b76 .LASF58
     /tmp/ccrd2aCb.s:3088   .debug_str:0000000000000144 .LASF59
     /tmp/ccrd2aCb.s:3152   .debug_str:0000000000000337 .LASF60
     /tmp/ccrd2aCb.s:3326   .debug_str:0000000000000877 .LASF61
     /tmp/ccrd2aCb.s:3328   .debug_str:000000000000088c .LASF62
     /tmp/ccrd2aCb.s:3238   .debug_str:00000000000005d4 .LASF63
     /tmp/ccrd2aCb.s:3406   .debug_str:0000000000000bb0 .LASF64
     /tmp/ccrd2aCb.s:3162   .debug_str:000000000000037a .LASF65
     /tmp/ccrd2aCb.s:3252   .debug_str:0000000000000632 .LASF66
     /tmp/ccrd2aCb.s:3258   .debug_str:0000000000000673 .LASF67
     /tmp/ccrd2aCb.s:3110   .debug_str:00000000000001d4 .LASF68
     /tmp/ccrd2aCb.s:3426   .debug_str:0000000000000c74 .LASF69
     /tmp/ccrd2aCb.s:3076   .debug_str:00000000000000c7 .LASF70
     /tmp/ccrd2aCb.s:3264   .debug_str:0000000000000690 .LASF71
     /tmp/ccrd2aCb.s:3410   .debug_str:0000000000000bce .LASF72
     /tmp/ccrd2aCb.s:3390   .debug_str:0000000000000b16 .LASF73
     /tmp/ccrd2aCb.s:3404   .debug_str:0000000000000b97 .LASF74
     /tmp/ccrd2aCb.s:3364   .debug_str:0000000000000979 .LASF75
     /tmp/ccrd2aCb.s:3182   .debug_str:0000000000000406 .LASF76
     /tmp/ccrd2aCb.s:3052   .debug_str:0000000000000000 .LASF77
     /tmp/ccrd2aCb.s:3148   .debug_str:000000000000030d .LASF78
     /tmp/ccrd2aCb.s:3220   .debug_str:0000000000000558 .LASF79
     /tmp/ccrd2aCb.s:3394   .debug_str:0000000000000b33 .LASF80
     /tmp/ccrd2aCb.s:3054   .debug_str:0000000000000010 .LASF81
     /tmp/ccrd2aCb.s:3206   .debug_str:00000000000004d0 .LASF82
     /tmp/ccrd2aCb.s:3070   .debug_str:0000000000000085 .LASF83
     /tmp/ccrd2aCb.s:3216   .debug_str:000000000000052b .LASF84
     /tmp/ccrd2aCb.s:3136   .debug_str:00000000000002a8 .LASF85
     /tmp/ccrd2aCb.s:3420   .debug_str:0000000000000c3b .LASF86
     /tmp/ccrd2aCb.s:3402   .debug_str:0000000000000b91 .LASF87
GAS LISTING /tmp/ccrd2aCb.s 			page 21


     /tmp/ccrd2aCb.s:3170   .debug_str:00000000000003b7 .LASF88
     /tmp/ccrd2aCb.s:3178   .debug_str:00000000000003e1 .LASF89
     /tmp/ccrd2aCb.s:3316   .debug_str:000000000000081f .LASF90
     /tmp/ccrd2aCb.s:3322   .debug_str:0000000000000854 .LASF91
     /tmp/ccrd2aCb.s:3184   .debug_str:000000000000041d .LASF92
     /tmp/ccrd2aCb.s:3414   .debug_str:0000000000000bfd .LASF93
     /tmp/ccrd2aCb.s:3386   .debug_str:0000000000000af1 .LASF96
     /tmp/ccrd2aCb.s:3218   .debug_str:0000000000000543 .LASF98
     /tmp/ccrd2aCb.s:3296   .debug_str:0000000000000799 .LASF94
     /tmp/ccrd2aCb.s:3256   .debug_str:000000000000065e .LASF95
     /tmp/ccrd2aCb.s:3278   .debug_str:0000000000000711 .LASF97
     /tmp/ccrd2aCb.s:3282   .debug_str:000000000000071e .LASF99
     /tmp/ccrd2aCb.s:3248   .debug_str:000000000000061f .LASF100
     /tmp/ccrd2aCb.s:3200   .debug_str:00000000000004a5 .LASF101
     /tmp/ccrd2aCb.s:3416   .debug_str:0000000000000c17 .LASF102
     /tmp/ccrd2aCb.s:3370   .debug_str:0000000000000a59 .LASF103
     /tmp/ccrd2aCb.s:3242   .debug_str:00000000000005f6 .LASF104
     /tmp/ccrd2aCb.s:3254   .debug_str:000000000000064a .LASF105
     /tmp/ccrd2aCb.s:3214   .debug_str:0000000000000523 .LASF106
     /tmp/ccrd2aCb.s:3284   .debug_str:0000000000000731 .LASF107
     /tmp/ccrd2aCb.s:3436   .debug_str:0000000000000cb1 .LASF108
     /tmp/ccrd2aCb.s:3188   .debug_str:0000000000000430 .LASF109
     /tmp/ccrd2aCb.s:3342   .debug_str:0000000000000905 .LASF110
     /tmp/ccrd2aCb.s:3312   .debug_str:0000000000000805 .LASF111
     /tmp/ccrd2aCb.s:3314   .debug_str:0000000000000818 .LASF112
     /tmp/ccrd2aCb.s:3134   .debug_str:0000000000000295 .LASF113
     /tmp/ccrd2aCb.s:3310   .debug_str:00000000000007ff .LASF114
     /tmp/ccrd2aCb.s:3174   .debug_str:00000000000003c9 .LASF115
     /tmp/ccrd2aCb.s:3186   .debug_str:000000000000042a .LASF116
     /tmp/ccrd2aCb.s:3122   .debug_str:0000000000000249 .LASF117
     /tmp/ccrd2aCb.s:3064   .debug_str:0000000000000058 .LASF118
     /tmp/ccrd2aCb.s:3302   .debug_str:00000000000007bb .LASF119
     /tmp/ccrd2aCb.s:3298   .debug_str:00000000000007a2 .LASF120
     /tmp/ccrd2aCb.s:3432   .debug_str:0000000000000c8c .LASF121
     /tmp/ccrd2aCb.s:3360   .debug_str:0000000000000967 .LASF122
     /tmp/ccrd2aCb.s:3424   .debug_str:0000000000000c5e .LASF123
     /tmp/ccrd2aCb.s:3102   .debug_str:000000000000019c .LASF124
     /tmp/ccrd2aCb.s:3232   .debug_str:00000000000005a5 .LASF125
     /tmp/ccrd2aCb.s:3384   .debug_str:0000000000000ae2 .LASF126
     /tmp/ccrd2aCb.s:3164   .debug_str:0000000000000386 .LASF127
     /tmp/ccrd2aCb.s:3090   .debug_str:0000000000000154 .LASF128
     /tmp/ccrd2aCb.s:3354   .debug_str:0000000000000940 .LASF129
     /tmp/ccrd2aCb.s:3272   .debug_str:00000000000006d3 .LASF156
     /tmp/ccrd2aCb.s:3196   .debug_str:0000000000000470 .LASF158
     /tmp/ccrd2aCb.s:3230   .debug_str:0000000000000595 .LASF185
     /tmp/ccrd2aCb.s:3398   .debug_str:0000000000000b58 .LASF186
     /tmp/ccrd2aCb.s:3330   .debug_str:00000000000008ac .LASF130
     /tmp/ccrd2aCb.s:3154   .debug_str:0000000000000353 .LASF131
     /tmp/ccrd2aCb.s:3340   .debug_str:0000000000000900 .LASF132
     /tmp/ccrd2aCb.s:3244   .debug_str:00000000000005fe .LASF133
     /tmp/ccrd2aCb.s:3142   .debug_str:00000000000002d7 .LASF134
     /tmp/ccrd2aCb.s:3396   .debug_str:0000000000000b4a .LASF135
     /tmp/ccrd2aCb.s:3208   .debug_str:00000000000004e6 .LASF136
     /tmp/ccrd2aCb.s:3118   .debug_str:0000000000000227 .LASF137
     /tmp/ccrd2aCb.s:3288   .debug_str:0000000000000751 .LASF138
     /tmp/ccrd2aCb.s:3092   .debug_str:0000000000000162 .LASF139
     /tmp/ccrd2aCb.s:3240   .debug_str:00000000000005df .LASF140
GAS LISTING /tmp/ccrd2aCb.s 			page 22


     /tmp/ccrd2aCb.s:3228   .debug_str:000000000000057c .LASF187
     /tmp/ccrd2aCb.s:3276   .debug_str:00000000000006f8 .LASF142
     /tmp/ccrd2aCb.s:3290   .debug_str:0000000000000768 .LASF143
     /tmp/ccrd2aCb.s:3246   .debug_str:0000000000000603 .LASF144
     /tmp/ccrd2aCb.s:3352   .debug_str:000000000000093b .LASF145
     /tmp/ccrd2aCb.s:3338   .debug_str:00000000000008f0 .LASF188
     /tmp/ccrd2aCb.s:3236   .debug_str:00000000000005c6 .LASF146
     /tmp/ccrd2aCb.s:3382   .debug_str:0000000000000ad6 .LASF147
     /tmp/ccrd2aCb.s:3066   .debug_str:0000000000000063 .LASF148
     /tmp/ccrd2aCb.s:3082   .debug_str:0000000000000128 .LASF149
     /tmp/ccrd2aCb.s:3306   .debug_str:00000000000007de .LASF150
     /tmp/ccrd2aCb.s:3280   .debug_str:0000000000000718 .LASF151
     /tmp/ccrd2aCb.s:3286   .debug_str:0000000000000745 .LASF152
     /tmp/ccrd2aCb.s:3132   .debug_str:000000000000028d .LASF153
     /tmp/ccrd2aCb.s:3172   .debug_str:00000000000003c2 .LASF154
     /tmp/ccrd2aCb.s:3380   .debug_str:0000000000000aba .LASF155
     /tmp/ccrd2aCb.s:3222   .debug_str:0000000000000564 .LASF189
     /tmp/ccrd2aCb.s:3388   .debug_str:0000000000000afa .LASF190
     /tmp/ccrd2aCb.s:3356   .debug_str:000000000000095b .LASF157
     /tmp/ccrd2aCb.s:3268   .debug_str:00000000000006b0 .LASF159
     /tmp/ccrd2aCb.s:3100   .debug_str:0000000000000196 .LASF160
     /tmp/ccrd2aCb.s:3108   .debug_str:00000000000001b9 .LASF161
     /tmp/ccrd2aCb.s:3336   .debug_str:00000000000008e1 .LASF162
     /tmp/ccrd2aCb.s:3212   .debug_str:00000000000004fd .LASF163
     /tmp/ccrd2aCb.s:3408   .debug_str:0000000000000bc7 .LASF164
     /tmp/ccrd2aCb.s:3418   .debug_str:0000000000000c1f .LASF165
     /tmp/ccrd2aCb.s:3056   .debug_str:000000000000001b .LASF166
     /tmp/ccrd2aCb.s:3144   .debug_str:00000000000002e6 .LASF167
     /tmp/ccrd2aCb.s:3072   .debug_str:0000000000000092 .LASF168
     /tmp/ccrd2aCb.s:3126   .debug_str:0000000000000264 .LASF169
     /tmp/ccrd2aCb.s:3294   .debug_str:000000000000077d .LASF170
     /tmp/ccrd2aCb.s:401    .text:0000000000000274 .LFE51
     /tmp/ccrd2aCb.s:331    .text:00000000000001d4 .LVL17
     /tmp/ccrd2aCb.s:337    .text:00000000000001e4 .LVL18
     /tmp/ccrd2aCb.s:347    .text:00000000000001fc .LVL19
     /tmp/ccrd2aCb.s:353    .text:000000000000020c .LVL20
     /tmp/ccrd2aCb.s:385    .text:000000000000024c .LVL21
     /tmp/ccrd2aCb.s:389    .text:0000000000000258 .LVL22
     /tmp/ccrd2aCb.s:395    .text:0000000000000268 .LVL23
     /tmp/ccrd2aCb.s:398    .text:0000000000000274 .LVL24
     /tmp/ccrd2aCb.s:205    .text:00000000000000f8 .LFB50
     /tmp/ccrd2aCb.s:294    .text:000000000000019c .LFE50
     /tmp/ccrd2aCb.s:2973   .debug_loc:0000000000000000 .LLST3
     /tmp/ccrd2aCb.s:252    .text:0000000000000144 .LBB15
     /tmp/ccrd2aCb.s:271    .text:0000000000000174 .LBE15
     /tmp/ccrd2aCb.s:2987   .debug_loc:0000000000000039 .LLST6
     /tmp/ccrd2aCb.s:258    .text:0000000000000158 .LVL14
     /tmp/ccrd2aCb.s:228    .text:000000000000011c .LBB12
     /tmp/ccrd2aCb.s:237    .text:0000000000000124 .LBE12
     /tmp/ccrd2aCb.s:2994   .debug_loc:000000000000005c .LLST4
     /tmp/ccrd2aCb.s:3002   .debug_loc:0000000000000080 .LLST5
     /tmp/ccrd2aCb.s:241    .text:000000000000012c .LVL13
     /tmp/ccrd2aCb.s:289    .text:0000000000000198 .LVL16
     /tmp/ccrd2aCb.s:119    .text:000000000000007c .LFB49
     /tmp/ccrd2aCb.s:158    .text:00000000000000c8 .LFE49
     /tmp/ccrd2aCb.s:3009   .debug_loc:00000000000000a3 .LLST1
     /tmp/ccrd2aCb.s:140    .text:00000000000000a8 .LVL6
GAS LISTING /tmp/ccrd2aCb.s 			page 23


     /tmp/ccrd2aCb.s:10     .text:0000000000000000 .LFB48
     /tmp/ccrd2aCb.s:38     .text:0000000000000030 .LFE48
     /tmp/ccrd2aCb.s:26     .text:0000000000000020 .LVL0
     /tmp/ccrd2aCb.s:44     .text:0000000000000030 .LFB47
     /tmp/ccrd2aCb.s:113    .text:000000000000007c .LFE47
     /tmp/ccrd2aCb.s:67     .text:000000000000004c .LBB9
     /tmp/ccrd2aCb.s:102    .text:000000000000006c .LBE9
     /tmp/ccrd2aCb.s:3023   .debug_loc:00000000000000dc .LLST0
     /tmp/ccrd2aCb.s:58     .text:0000000000000048 .LVL1
     /tmp/ccrd2aCb.s:164    .text:00000000000000c8 .LFB46
     /tmp/ccrd2aCb.s:199    .text:00000000000000f8 .LFE46
     /tmp/ccrd2aCb.s:3030   .debug_loc:00000000000000ff .LLST2
     /tmp/ccrd2aCb.s:188    .text:00000000000000e8 .LVL8
     /tmp/ccrd2aCb.s:3168   .debug_str:00000000000003b0 .LASF191
     /tmp/ccrd2aCb.s:3156   .debug_str:000000000000035a .LASF192
     /tmp/ccrd2aCb.s:3146   .debug_str:0000000000000307 .LASF171
     /tmp/ccrd2aCb.s:3260   .debug_str:0000000000000684 .LASF172
     /tmp/ccrd2aCb.s:3392   .debug_str:0000000000000b24 .LASF173
     /tmp/ccrd2aCb.s:3120   .debug_str:0000000000000231 .LASF174
     /tmp/ccrd2aCb.s:3334   .debug_str:00000000000008d0 .LASF175
     /tmp/ccrd2aCb.s:3226   .debug_str:0000000000000570 .LASF177
     /tmp/ccrd2aCb.s:3068   .debug_str:0000000000000070 .LASF176
     /tmp/ccrd2aCb.s:3346   .debug_str:0000000000000918 .LASF178
     /tmp/ccrd2aCb.s:208    .text:00000000000000f8 .LVL9
     /tmp/ccrd2aCb.s:220    .text:0000000000000110 .LVL10
     /tmp/ccrd2aCb.s:269    .text:0000000000000174 .LVL15
     /tmp/ccrd2aCb.s:227    .text:000000000000011c .LVL11
     /tmp/ccrd2aCb.s:235    .text:0000000000000124 .LVL12
     /tmp/ccrd2aCb.s:122    .text:000000000000007c .LVL4
     /tmp/ccrd2aCb.s:138    .text:00000000000000a0 .LVL5
     /tmp/ccrd2aCb.s:77     .text:0000000000000050 .LVL2
     /tmp/ccrd2aCb.s:99     .text:000000000000006c .LVL3
     /tmp/ccrd2aCb.s:182    .text:00000000000000dc .LVL7
     /tmp/ccrd2aCb.s:466    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccrd2aCb.s:404    .gcc_except_table:0000000000000000 .LLSDA51

UNDEFINED SYMBOLS
_ZN13ConsoleBuffer3getEv
_ZN3PCB7runningE
_ZN13ConsoleBuffer3putEc
_Z11thread_exitv
CONSOLE_STATUS
CONSOLE_TX_DATA
_Z15thread_dispatchv
_Znwm
_ZN13ConsoleBufferC1Ei
_ZdlPv
_Unwind_Resume
__gxx_personality_v0
