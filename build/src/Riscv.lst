GAS LISTING /tmp/ccyKFwZR.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB46:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 5/15/23.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../lib/console.h"
   7:src/Riscv.cpp **** #include "../h/PCB.hpp"
   8:src/Riscv.cpp **** #include "../h/KernelSemaphore.hpp"
   9:src/Riscv.cpp **** #include "../h/KernelConsole.hpp"
  10:src/Riscv.cpp **** 
  11:src/Riscv.cpp **** void Riscv::popSppSpie() {
  12              		.loc 1 11 26
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  12:src/Riscv.cpp ****     __asm__ volatile ("csrw sepc, ra");
  20              		.loc 1 12 5
  21              		.loc 1 12 39 is_stmt 0
  22              	#APP
  23              	# 12 "src/Riscv.cpp" 1
  13              	    __asm__ volatile ("sret");
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 13 5 is_stmt 1
  27              		.loc 1 13 30 is_stmt 0
  28              	# 13 "src/Riscv.cpp" 1
  14              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 14 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE46:
  42              		.align	2
  43              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  45              	_ZN5Riscv20handleSupervisorTrapEv:
  46              	.LFB47:
GAS LISTING /tmp/ccyKFwZR.s 			page 2


  15:src/Riscv.cpp **** 
  16:src/Riscv.cpp **** void Riscv::handleSupervisorTrap() {
  47              		.loc 1 16 36 is_stmt 1
  48              		.cfi_startproc
  49 0020 130101F8 		addi	sp,sp,-128
  50              		.cfi_def_cfa_offset 128
  51 0024 233C1106 		sd	ra,120(sp)
  52 0028 23388106 		sd	s0,112(sp)
  53 002c 23349106 		sd	s1,104(sp)
  54              		.cfi_offset 1, -8
  55              		.cfi_offset 8, -16
  56              		.cfi_offset 9, -24
  57 0030 13040108 		addi	s0,sp,128
  58              		.cfi_def_cfa 8, 0
  17:src/Riscv.cpp ****     __asm__ volatile("mv %0, a4" : "=r"(PCB::regA4));
  59              		.loc 1 17 5
  60              		.loc 1 17 53 is_stmt 0
  61              	#APP
  62              	# 17 "src/Riscv.cpp" 1
  18              	    __asm__ volatile("csrr %0, sscratch":"=r"(PCB::running->sscratch));
  63              		mv a4, a4
  64              	# 0 "" 2
  65              	#NO_APP
  66 0038 97070000 		la	a5,_ZN3PCB5regA4E
  66      83B70700 
  67 0040 23B0E700 		sd	a4,0(a5)
  68              		.loc 1 18 5 is_stmt 1
  69              		.loc 1 18 61 is_stmt 0
  70 0044 97070000 		la	a5,_ZN3PCB7runningE
  70      83B70700 
  71 004c 83B70700 		ld	a5,0(a5)
  72              		.loc 1 18 71
  73              	#APP
  74              	# 18 "src/Riscv.cpp" 1
  19              	    volatile uint64 scause = r_scause();
  75              		csrr a4, sscratch
  76              	# 0 "" 2
  77              	#NO_APP
  78 0054 23B8E704 		sd	a4,80(a5)
  79              		.loc 1 19 5 is_stmt 1
  80              	.LBB36:
  81              	.LBB37:
  82              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 5/15/23.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** #include "../h/userMain.hpp"
  10:src/../h/Riscv.hpp **** #include "../h/PCB.hpp"
  11:src/../h/Riscv.hpp **** 
  12:src/../h/Riscv.hpp **** class Riscv {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp ****     //non inline
GAS LISTING /tmp/ccyKFwZR.s 			page 3


  15:src/../h/Riscv.hpp ****     static void popSppSpie();
  16:src/../h/Riscv.hpp **** 
  17:src/../h/Riscv.hpp ****     static void pushRegisters();
  18:src/../h/Riscv.hpp **** 
  19:src/../h/Riscv.hpp ****     static void popRegisters();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     static uint64 r_scause();
  22:src/../h/Riscv.hpp **** 
  23:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  24:src/../h/Riscv.hpp **** 
  25:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  28:src/../h/Riscv.hpp **** 
  29:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  30:src/../h/Riscv.hpp **** 
  31:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     static uint64 r_stval();
  34:src/../h/Riscv.hpp **** 
  35:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  36:src/../h/Riscv.hpp **** 
  37:src/../h/Riscv.hpp ****     enum BitMaskSip{
  38:src/../h/Riscv.hpp ****         SIP_SSIP = (1<<1),
  39:src/../h/Riscv.hpp ****         SIP_STIP = (1<<5),
  40:src/../h/Riscv.hpp ****         SIP_SEIP = (1<<9),
  41:src/../h/Riscv.hpp ****     };
  42:src/../h/Riscv.hpp **** 
  43:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  44:src/../h/Riscv.hpp **** 
  45:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  46:src/../h/Riscv.hpp **** 
  47:src/../h/Riscv.hpp ****     static uint64 r_sip();
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  50:src/../h/Riscv.hpp **** 
  51:src/../h/Riscv.hpp ****     enum BitMaskSstatus{
  52:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1<<1),
  53:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1<<5),
  54:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1<<8),
  55:src/../h/Riscv.hpp ****     };
  56:src/../h/Riscv.hpp **** 
  57:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  58:src/../h/Riscv.hpp **** 
  59:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
  62:src/../h/Riscv.hpp **** 
  63:src/../h/Riscv.hpp ****     static  void w_sstatus(uint64 sstatus);
  64:src/../h/Riscv.hpp **** 
  65:src/../h/Riscv.hpp ****     static void supervisorTrap();
  66:src/../h/Riscv.hpp **** 
  67:src/../h/Riscv.hpp ****     static void w_a0_sscratch();
  68:src/../h/Riscv.hpp **** 
  69:src/../h/Riscv.hpp **** private:
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     // supervisor trap handler
GAS LISTING /tmp/ccyKFwZR.s 			page 4


  72:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp ****     static void userMainWrapper(void *);
  75:src/../h/Riscv.hpp **** 
  76:src/../h/Riscv.hpp ****     friend class MemoryAllocator;
  77:src/../h/Riscv.hpp ****     friend class PCB;
  78:src/../h/Riscv.hpp ****     friend class Semaphore;
  79:src/../h/Riscv.hpp **** };
  80:src/../h/Riscv.hpp **** 
  81:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  82:src/../h/Riscv.hpp ****     uint64 volatile scause;
  83              		.loc 2 82 5
  83:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  84              		.loc 2 83 5
  85              		.loc 2 83 72 is_stmt 0
  86              	#APP
  87              	# 83 "src/../h/Riscv.hpp" 1
  84              	    return scause;
  88              		csrr a5, scause
  89              	# 0 "" 2
  90              	#NO_APP
  91 005c 2338F4FA 		sd	a5,-80(s0)
  92              		.loc 2 84 5 is_stmt 1
  93              		.loc 2 84 12 is_stmt 0
  94 0060 833704FB 		ld	a5,-80(s0)
  95              	.LBE37:
  96              	.LBE36:
  97              		.loc 1 19 39
  98 0064 233CF4FC 		sd	a5,-40(s0)
  20:src/Riscv.cpp ****     if(scause == 0x0000000000000008UL || scause == 0x0000000000000009UL){
  99              		.loc 1 20 5 is_stmt 1
 100              	.LBB38:
 101              		.loc 1 20 15 is_stmt 0
 102 0068 033784FD 		ld	a4,-40(s0)
 103              		.loc 1 20 39
 104 006c 93078000 		li	a5,8
 105 0070 6306F704 		beq	a4,a5,.L4
 106              		.loc 1 20 49 discriminator 2
 107 0074 033784FD 		ld	a4,-40(s0)
 108              		.loc 1 20 39 discriminator 2
 109 0078 93079000 		li	a5,9
 110 007c 6300F704 		beq	a4,a5,.L4
 111              	.LBE38:
  21:src/Riscv.cpp ****         // interrupt : NO, cause code: environment call from S-mode (9)
  22:src/Riscv.cpp ****         volatile uint64 sepc = r_sepc() + 4;
  23:src/Riscv.cpp ****         volatile uint64 sstatus = r_sstatus();
  24:src/Riscv.cpp ****         volatile uint64 a0;
  25:src/Riscv.cpp ****         __asm__ volatile("mv %0, a0" : "=r"(a0));
  26:src/Riscv.cpp **** 
  27:src/Riscv.cpp ****         if(a0==0x01){
  28:src/Riscv.cpp ****             //mem_alloc
  29:src/Riscv.cpp ****             MemoryAllocator::memAllocH();
  30:src/Riscv.cpp ****         }
  31:src/Riscv.cpp ****         else if(a0==0x02){
  32:src/Riscv.cpp ****             //mem_free
  33:src/Riscv.cpp ****             MemoryAllocator::memFreeH();
  34:src/Riscv.cpp ****         }
GAS LISTING /tmp/ccyKFwZR.s 			page 5


  35:src/Riscv.cpp ****         else if(a0==0x11){
  36:src/Riscv.cpp ****             //thread_create
  37:src/Riscv.cpp ****             PCB::threadCreateH();
  38:src/Riscv.cpp ****         }
  39:src/Riscv.cpp ****         else if(a0==0x12){
  40:src/Riscv.cpp ****             //thread_exit
  41:src/Riscv.cpp ****             PCB::threadExitH();
  42:src/Riscv.cpp ****         }
  43:src/Riscv.cpp ****         else if(a0==0x13){
  44:src/Riscv.cpp ****             //thread_dispatch
  45:src/Riscv.cpp ****             PCB::threadDispatchH();
  46:src/Riscv.cpp ****         }
  47:src/Riscv.cpp ****         else if(a0==0x14){
  48:src/Riscv.cpp ****             //thread_join
  49:src/Riscv.cpp ****             PCB::threadJoinH();
  50:src/Riscv.cpp ****         }
  51:src/Riscv.cpp ****         else if(a0==0x21){
  52:src/Riscv.cpp ****             //sem_open
  53:src/Riscv.cpp ****             KernelSemaphore::semOpenH();
  54:src/Riscv.cpp ****         }
  55:src/Riscv.cpp ****         else if(a0==0x22){
  56:src/Riscv.cpp ****             //sem_close
  57:src/Riscv.cpp ****             KernelSemaphore::semCloseH();
  58:src/Riscv.cpp ****         }
  59:src/Riscv.cpp ****         else if(a0==0x23){
  60:src/Riscv.cpp ****             //swm_wait
  61:src/Riscv.cpp ****             KernelSemaphore::semWaitH();
  62:src/Riscv.cpp ****         }
  63:src/Riscv.cpp ****         else if(a0==0x24){
  64:src/Riscv.cpp ****             //sem_signal
  65:src/Riscv.cpp ****             KernelSemaphore::semSignalH();
  66:src/Riscv.cpp ****         }
  67:src/Riscv.cpp ****         else if(a0==0x31){
  68:src/Riscv.cpp ****             //time_sleep
  69:src/Riscv.cpp ****             PCB::timeSleepH();
  70:src/Riscv.cpp ****         }
  71:src/Riscv.cpp ****         else if(a0==0x41){
  72:src/Riscv.cpp ****             //getc
  73:src/Riscv.cpp **** 
  74:src/Riscv.cpp ****             KernelConsole::getcH();
  75:src/Riscv.cpp ****         }
  76:src/Riscv.cpp ****         else if(a0==0x42){
  77:src/Riscv.cpp ****             //putc
  78:src/Riscv.cpp **** 
  79:src/Riscv.cpp ****             KernelConsole::putcH();
  80:src/Riscv.cpp ****         }
  81:src/Riscv.cpp **** 
  82:src/Riscv.cpp ****         w_sepc(sepc);
  83:src/Riscv.cpp ****         w_sstatus(sstatus);
  84:src/Riscv.cpp ****         //privMode
  85:src/Riscv.cpp ****         /*if(PCB::running->mainOrConsole)
  86:src/Riscv.cpp ****             Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
  87:src/Riscv.cpp ****         else
  88:src/Riscv.cpp ****             Riscv::mc_sstatus(Riscv::SSTATUS_SPP);*/
  89:src/Riscv.cpp ****     }
  90:src/Riscv.cpp ****     else if(scause == 0x8000000000000001UL){
 112              		.loc 1 90 10 is_stmt 1
GAS LISTING /tmp/ccyKFwZR.s 			page 6


 113              	.LBB76:
 114              	.LBB39:
 115              		.loc 1 90 20 is_stmt 0
 116 0080 033784FD 		ld	a4,-40(s0)
 117              		.loc 1 90 10
 118 0084 9307F0FF 		li	a5,-1
 119 0088 9397F703 		slli	a5,a5,63
 120 008c 93871700 		addi	a5,a5,1
 121 0090 6308F71A 		beq	a4,a5,.L27
 122              	.LBE39:
 123              	.LBE76:
  91:src/Riscv.cpp ****         // interrupt, yes, cause code: supervisor software interrupt (timer)
  92:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
  93:src/Riscv.cpp ****         PCB::timeSliceCounter++;
  94:src/Riscv.cpp ****         PCB::decreaseSleepingTime();
  95:src/Riscv.cpp ****         PCB::removeSleepy();
  96:src/Riscv.cpp ****         if(PCB::timeSliceCounter >= PCB::running->getTimeSlice()) {
  97:src/Riscv.cpp ****             volatile uint64 sepc = r_sepc();
  98:src/Riscv.cpp ****             volatile uint64 sstatus = r_sstatus();
  99:src/Riscv.cpp ****             PCB::timeSliceCounter=0;
 100:src/Riscv.cpp ****             PCB::dispatch();
 101:src/Riscv.cpp ****             w_sepc(sepc);
 102:src/Riscv.cpp ****             w_sstatus(sstatus);
 103:src/Riscv.cpp ****         }
 104:src/Riscv.cpp ****         //PCB::running->changeRegime();
 105:src/Riscv.cpp ****     }
 106:src/Riscv.cpp ****     else if(scause == 0x8000000000000009UL){
 124              		.loc 1 106 10 is_stmt 1
 125              	.LBB77:
 126              	.LBB64:
 127              	.LBB40:
 128              		.loc 1 106 20 is_stmt 0
 129 0094 033784FD 		ld	a4,-40(s0)
 130              		.loc 1 106 10
 131 0098 9307F0FF 		li	a5,-1
 132 009c 9397F703 		slli	a5,a5,63
 133 00a0 93879700 		addi	a5,a5,9
 134 00a4 6302F724 		beq	a4,a5,.L28
 107:src/Riscv.cpp ****         // interrupt, yes, cause code: supervisor external interrupt (console)
 108:src/Riscv.cpp ****         //console_handler();
 109:src/Riscv.cpp ****         int num = plic_claim();
 110:src/Riscv.cpp ****         if(num==0x0a && (*((char*)CONSOLE_STATUS)&CONSOLE_RX_STATUS_BIT)){
 111:src/Riscv.cpp ****             char ret = *(char*)CONSOLE_RX_DATA;
 112:src/Riscv.cpp ****             KernelConsole::inputBuffer->put(ret);
 113:src/Riscv.cpp ****         }
 114:src/Riscv.cpp ****         plic_complete(num);
 115:src/Riscv.cpp ****     }
 116:src/Riscv.cpp ****     else if(scause == 0x02UL){
 135              		.loc 1 116 10 is_stmt 1
 136              		.loc 1 116 20 is_stmt 0
 137 00a8 033784FD 		ld	a4,-40(s0)
 138              		.loc 1 116 10
 139 00ac 93072000 		li	a5,2
 140 00b0 630EF728 		beq	a4,a5,.L29
 117:src/Riscv.cpp ****         __putc('2');
 118:src/Riscv.cpp **** 
 119:src/Riscv.cpp ****     }
GAS LISTING /tmp/ccyKFwZR.s 			page 7


 120:src/Riscv.cpp ****     else if(scause == 0x05UL){
 141              		.loc 1 120 10 is_stmt 1
 142              		.loc 1 120 20 is_stmt 0
 143 00b4 833784FD 		ld	a5,-40(s0)
 144              	.LBE40:
 145              	.LBE64:
 146              	.LBE77:
 121:src/Riscv.cpp ****         //__putc('5');
 122:src/Riscv.cpp ****     }
 123:src/Riscv.cpp ****     else{
 124:src/Riscv.cpp ****         // unexpected trap cause
 125:src/Riscv.cpp ****         // print(scause) (sepc) (stval)
 126:src/Riscv.cpp ****     }
 127:src/Riscv.cpp **** }
 147              		.loc 1 127 1
 148 00b8 6F00000F 		j	.L3
 149              	.L4:
 150              	.LBB78:
 151              	.LBB65:
  22:src/Riscv.cpp ****         volatile uint64 sstatus = r_sstatus();
 152              		.loc 1 22 9 is_stmt 1
 153              	.LBB66:
 154              	.LBB67:
  85:src/../h/Riscv.hpp **** }
  86:src/../h/Riscv.hpp **** 
  87:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  88:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  89:src/../h/Riscv.hpp **** }
  90:src/../h/Riscv.hpp **** 
  91:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  92:src/../h/Riscv.hpp ****     uint64 volatile sepc;
 155              		.loc 2 92 5
  93:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 156              		.loc 2 93 5
 157              		.loc 2 93 64 is_stmt 0
 158              	#APP
 159              	# 93 "src/../h/Riscv.hpp" 1
  94              	    return sepc;
 160              		csrr a5, sepc
 161              	# 0 "" 2
 162              	#NO_APP
 163 00c0 2330F4FC 		sd	a5,-64(s0)
 164              		.loc 2 94 5 is_stmt 1
 165              		.loc 2 94 12 is_stmt 0
 166 00c4 833704FC 		ld	a5,-64(s0)
 167              	.LBE67:
 168              	.LBE66:
  22:src/Riscv.cpp ****         volatile uint64 sstatus = r_sstatus();
 169              		.loc 1 22 41
 170 00c8 93874700 		addi	a5,a5,4
  22:src/Riscv.cpp ****         volatile uint64 sstatus = r_sstatus();
 171              		.loc 1 22 43
 172 00cc 2334F4F8 		sd	a5,-120(s0)
  23:src/Riscv.cpp ****         volatile uint64 a0;
 173              		.loc 1 23 9 is_stmt 1
 174              	.LBB68:
 175              	.LBB69:
GAS LISTING /tmp/ccyKFwZR.s 			page 8


  95:src/../h/Riscv.hpp **** }
  96:src/../h/Riscv.hpp **** 
  97:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
  98:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
  99:src/../h/Riscv.hpp **** }
 100:src/../h/Riscv.hpp **** 
 101:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 102:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 103:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 104:src/../h/Riscv.hpp ****     return stvec;
 105:src/../h/Riscv.hpp **** }
 106:src/../h/Riscv.hpp **** 
 107:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 108:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 109:src/../h/Riscv.hpp **** }
 110:src/../h/Riscv.hpp **** 
 111:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
 112:src/../h/Riscv.hpp ****     uint64 volatile stval;
 113:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 114:src/../h/Riscv.hpp ****     return stval;
 115:src/../h/Riscv.hpp **** }
 116:src/../h/Riscv.hpp **** 
 117:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 118:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 119:src/../h/Riscv.hpp **** }
 120:src/../h/Riscv.hpp **** 
 121:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 122:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 123:src/../h/Riscv.hpp **** }
 124:src/../h/Riscv.hpp **** 
 125:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 126:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 127:src/../h/Riscv.hpp **** }
 128:src/../h/Riscv.hpp **** 
 129:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 130:src/../h/Riscv.hpp ****     uint64 volatile sip;
 131:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 132:src/../h/Riscv.hpp ****     return sip;
 133:src/../h/Riscv.hpp **** }
 134:src/../h/Riscv.hpp **** 
 135:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 136:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 137:src/../h/Riscv.hpp **** }
 138:src/../h/Riscv.hpp **** 
 139:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 140:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 141:src/../h/Riscv.hpp **** }
 142:src/../h/Riscv.hpp **** 
 143:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 144:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 145:src/../h/Riscv.hpp **** }
 146:src/../h/Riscv.hpp **** 
 147:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 148:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 176              		.loc 2 148 5
 149:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 177              		.loc 2 149 5
GAS LISTING /tmp/ccyKFwZR.s 			page 9


 178              		.loc 2 149 76 is_stmt 0
 179              	#APP
 180              	# 149 "src/../h/Riscv.hpp" 1
 150              	    return sstatus;
 181              		csrr a5, sstatus
 182              	# 0 "" 2
 183              	#NO_APP
 184 00d4 233CF4FA 		sd	a5,-72(s0)
 185              		.loc 2 150 5 is_stmt 1
 186              		.loc 2 150 12 is_stmt 0
 187 00d8 833784FB 		ld	a5,-72(s0)
 188              	.LBE69:
 189              	.LBE68:
  23:src/Riscv.cpp ****         volatile uint64 a0;
 190              		.loc 1 23 45
 191 00dc 2338F4F8 		sd	a5,-112(s0)
  24:src/Riscv.cpp ****         __asm__ volatile("mv %0, a0" : "=r"(a0));
 192              		.loc 1 24 9 is_stmt 1
  25:src/Riscv.cpp **** 
 193              		.loc 1 25 9
  25:src/Riscv.cpp **** 
 194              		.loc 1 25 49 is_stmt 0
 195              	#APP
 196              	# 25 "src/Riscv.cpp" 1
 197              		mv a5, a0
 198              	# 0 "" 2
 199              	#NO_APP
 200 00e4 233CF4F8 		sd	a5,-104(s0)
  27:src/Riscv.cpp ****             //mem_alloc
 201              		.loc 1 27 9 is_stmt 1
  27:src/Riscv.cpp ****             //mem_alloc
 202              		.loc 1 27 14 is_stmt 0
 203 00e8 033784F9 		ld	a4,-104(s0)
  27:src/Riscv.cpp ****             //mem_alloc
 204              		.loc 1 27 9
 205 00ec 93071000 		li	a5,1
 206 00f0 6300F70A 		beq	a4,a5,.L30
  31:src/Riscv.cpp ****             //mem_free
 207              		.loc 1 31 14 is_stmt 1
  31:src/Riscv.cpp ****             //mem_free
 208              		.loc 1 31 19 is_stmt 0
 209 00f4 033784F9 		ld	a4,-104(s0)
  31:src/Riscv.cpp ****             //mem_free
 210              		.loc 1 31 14
 211 00f8 93072000 		li	a5,2
 212 00fc 6300F70C 		beq	a4,a5,.L31
  35:src/Riscv.cpp ****             //thread_create
 213              		.loc 1 35 14 is_stmt 1
  35:src/Riscv.cpp ****             //thread_create
 214              		.loc 1 35 19 is_stmt 0
 215 0100 033784F9 		ld	a4,-104(s0)
  35:src/Riscv.cpp ****             //thread_create
 216              		.loc 1 35 14
 217 0104 93071001 		li	a5,17
 218 0108 6300F70C 		beq	a4,a5,.L32
  39:src/Riscv.cpp ****             //thread_exit
 219              		.loc 1 39 14 is_stmt 1
GAS LISTING /tmp/ccyKFwZR.s 			page 10


  39:src/Riscv.cpp ****             //thread_exit
 220              		.loc 1 39 19 is_stmt 0
 221 010c 033784F9 		ld	a4,-104(s0)
  39:src/Riscv.cpp ****             //thread_exit
 222              		.loc 1 39 14
 223 0110 93072001 		li	a5,18
 224 0114 6300F70C 		beq	a4,a5,.L33
  43:src/Riscv.cpp ****             //thread_dispatch
 225              		.loc 1 43 14 is_stmt 1
  43:src/Riscv.cpp ****             //thread_dispatch
 226              		.loc 1 43 19 is_stmt 0
 227 0118 033784F9 		ld	a4,-104(s0)
  43:src/Riscv.cpp ****             //thread_dispatch
 228              		.loc 1 43 14
 229 011c 93073001 		li	a5,19
 230 0120 6300F70C 		beq	a4,a5,.L34
  47:src/Riscv.cpp ****             //thread_join
 231              		.loc 1 47 14 is_stmt 1
  47:src/Riscv.cpp ****             //thread_join
 232              		.loc 1 47 19 is_stmt 0
 233 0124 033784F9 		ld	a4,-104(s0)
  47:src/Riscv.cpp ****             //thread_join
 234              		.loc 1 47 14
 235 0128 93074001 		li	a5,20
 236 012c 6300F70C 		beq	a4,a5,.L35
  51:src/Riscv.cpp ****             //sem_open
 237              		.loc 1 51 14 is_stmt 1
  51:src/Riscv.cpp ****             //sem_open
 238              		.loc 1 51 19 is_stmt 0
 239 0130 033784F9 		ld	a4,-104(s0)
  51:src/Riscv.cpp ****             //sem_open
 240              		.loc 1 51 14
 241 0134 93071002 		li	a5,33
 242 0138 6300F70C 		beq	a4,a5,.L36
  55:src/Riscv.cpp ****             //sem_close
 243              		.loc 1 55 14 is_stmt 1
  55:src/Riscv.cpp ****             //sem_close
 244              		.loc 1 55 19 is_stmt 0
 245 013c 033784F9 		ld	a4,-104(s0)
  55:src/Riscv.cpp ****             //sem_close
 246              		.loc 1 55 14
 247 0140 93072002 		li	a5,34
 248 0144 6300F70C 		beq	a4,a5,.L37
  59:src/Riscv.cpp ****             //swm_wait
 249              		.loc 1 59 14 is_stmt 1
  59:src/Riscv.cpp ****             //swm_wait
 250              		.loc 1 59 19 is_stmt 0
 251 0148 033784F9 		ld	a4,-104(s0)
  59:src/Riscv.cpp ****             //swm_wait
 252              		.loc 1 59 14
 253 014c 93073002 		li	a5,35
 254 0150 6300F70C 		beq	a4,a5,.L38
  63:src/Riscv.cpp ****             //sem_signal
 255              		.loc 1 63 14 is_stmt 1
  63:src/Riscv.cpp ****             //sem_signal
 256              		.loc 1 63 19 is_stmt 0
 257 0154 033784F9 		ld	a4,-104(s0)
GAS LISTING /tmp/ccyKFwZR.s 			page 11


  63:src/Riscv.cpp ****             //sem_signal
 258              		.loc 1 63 14
 259 0158 93074002 		li	a5,36
 260 015c 6300F70C 		beq	a4,a5,.L39
  67:src/Riscv.cpp ****             //time_sleep
 261              		.loc 1 67 14 is_stmt 1
  67:src/Riscv.cpp ****             //time_sleep
 262              		.loc 1 67 19 is_stmt 0
 263 0160 033784F9 		ld	a4,-104(s0)
  67:src/Riscv.cpp ****             //time_sleep
 264              		.loc 1 67 14
 265 0164 93071003 		li	a5,49
 266 0168 6300F70C 		beq	a4,a5,.L40
  71:src/Riscv.cpp ****             //getc
 267              		.loc 1 71 14 is_stmt 1
  71:src/Riscv.cpp ****             //getc
 268              		.loc 1 71 19 is_stmt 0
 269 016c 033784F9 		ld	a4,-104(s0)
  71:src/Riscv.cpp ****             //getc
 270              		.loc 1 71 14
 271 0170 93071004 		li	a5,65
 272 0174 6300F70C 		beq	a4,a5,.L41
  76:src/Riscv.cpp ****             //putc
 273              		.loc 1 76 14 is_stmt 1
  76:src/Riscv.cpp ****             //putc
 274              		.loc 1 76 19 is_stmt 0
 275 0178 033784F9 		ld	a4,-104(s0)
  76:src/Riscv.cpp ****             //putc
 276              		.loc 1 76 14
 277 017c 93072004 		li	a5,66
 278 0180 631CF700 		bne	a4,a5,.L8
  79:src/Riscv.cpp ****         }
 279              		.loc 1 79 13 is_stmt 1
  79:src/Riscv.cpp ****         }
 280              		.loc 1 79 33 is_stmt 0
 281 0184 97000000 		call	_ZN13KernelConsole5putcHEv@plt
 281      E7800000 
 282              	.LVL0:
 283 018c 6F00C000 		j	.L8
 284              	.L30:
  29:src/Riscv.cpp ****         }
 285              		.loc 1 29 13 is_stmt 1
  29:src/Riscv.cpp ****         }
 286              		.loc 1 29 39 is_stmt 0
 287 0190 97000000 		call	_ZN15MemoryAllocator9memAllocHEv@plt
 287      E7800000 
 288              	.LVL1:
 289              	.L8:
  82:src/Riscv.cpp ****         w_sstatus(sstatus);
 290              		.loc 1 82 9 is_stmt 1
  82:src/Riscv.cpp ****         w_sstatus(sstatus);
 291              		.loc 1 82 15 is_stmt 0
 292 0198 833784F8 		ld	a5,-120(s0)
 293              	.LVL2:
 294              	.LBB70:
 295              	.LBB71:
  98:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccyKFwZR.s 			page 12


 296              		.loc 2 98 5 is_stmt 1
  98:src/../h/Riscv.hpp **** }
 297              		.loc 2 98 65 is_stmt 0
 298              	#APP
 299              	# 98 "src/../h/Riscv.hpp" 1
 300              		csrw sepc, a5
 301              	# 0 "" 2
 302              	.LVL3:
 303              	#NO_APP
 304              	.LBE71:
 305              	.LBE70:
  83:src/Riscv.cpp ****         //privMode
 306              		.loc 1 83 9 is_stmt 1
  83:src/Riscv.cpp ****         //privMode
 307              		.loc 1 83 18 is_stmt 0
 308 01a0 833704F9 		ld	a5,-112(s0)
 309              	.LVL4:
 310              	.LBB72:
 311              	.LBB73:
 151:src/../h/Riscv.hpp **** }
 152:src/../h/Riscv.hpp **** 
 153:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 154:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 312              		.loc 2 154 5 is_stmt 1
 313              		.loc 2 154 77 is_stmt 0
 314              	#APP
 315              	# 154 "src/../h/Riscv.hpp" 1
 155              	}
 316              		csrw sstatus, a5
 317              	# 0 "" 2
 318              	.LVL5:
 319              	#NO_APP
 320              	.L3:
 321              	.LBE73:
 322              	.LBE72:
 323              	.LBE65:
 324              	.LBE78:
 325              		.loc 1 127 1
 326 01a8 83308107 		ld	ra,120(sp)
 327              		.cfi_remember_state
 328              		.cfi_restore 1
 329 01ac 03340107 		ld	s0,112(sp)
 330              		.cfi_restore 8
 331              		.cfi_def_cfa 2, 128
 332 01b0 83348106 		ld	s1,104(sp)
 333              		.cfi_restore 9
 334 01b4 13010108 		addi	sp,sp,128
 335              		.cfi_def_cfa_offset 0
 336 01b8 67800000 		jr	ra
 337              	.L31:
 338              		.cfi_restore_state
 339              	.LBB79:
 340              	.LBB74:
  33:src/Riscv.cpp ****         }
 341              		.loc 1 33 13 is_stmt 1
  33:src/Riscv.cpp ****         }
 342              		.loc 1 33 38 is_stmt 0
GAS LISTING /tmp/ccyKFwZR.s 			page 13


 343 01bc 97000000 		call	_ZN15MemoryAllocator8memFreeHEv@plt
 343      E7800000 
 344              	.LVL6:
 345 01c4 6FF05FFD 		j	.L8
 346              	.L32:
  37:src/Riscv.cpp ****         }
 347              		.loc 1 37 13 is_stmt 1
  37:src/Riscv.cpp ****         }
 348              		.loc 1 37 31 is_stmt 0
 349 01c8 97000000 		call	_ZN3PCB13threadCreateHEv@plt
 349      E7800000 
 350              	.LVL7:
 351 01d0 6FF09FFC 		j	.L8
 352              	.L33:
  41:src/Riscv.cpp ****         }
 353              		.loc 1 41 13 is_stmt 1
  41:src/Riscv.cpp ****         }
 354              		.loc 1 41 29 is_stmt 0
 355 01d4 97000000 		call	_ZN3PCB11threadExitHEv@plt
 355      E7800000 
 356              	.LVL8:
 357 01dc 6FF0DFFB 		j	.L8
 358              	.L34:
  45:src/Riscv.cpp ****         }
 359              		.loc 1 45 13 is_stmt 1
  45:src/Riscv.cpp ****         }
 360              		.loc 1 45 33 is_stmt 0
 361 01e0 97000000 		call	_ZN3PCB15threadDispatchHEv@plt
 361      E7800000 
 362              	.LVL9:
 363 01e8 6FF01FFB 		j	.L8
 364              	.L35:
  49:src/Riscv.cpp ****         }
 365              		.loc 1 49 13 is_stmt 1
  49:src/Riscv.cpp ****         }
 366              		.loc 1 49 29 is_stmt 0
 367 01ec 97000000 		call	_ZN3PCB11threadJoinHEv@plt
 367      E7800000 
 368              	.LVL10:
 369 01f4 6FF05FFA 		j	.L8
 370              	.L36:
  53:src/Riscv.cpp ****         }
 371              		.loc 1 53 13 is_stmt 1
  53:src/Riscv.cpp ****         }
 372              		.loc 1 53 38 is_stmt 0
 373 01f8 97000000 		call	_ZN15KernelSemaphore8semOpenHEv@plt
 373      E7800000 
 374              	.LVL11:
 375 0200 6FF09FF9 		j	.L8
 376              	.L37:
  57:src/Riscv.cpp ****         }
 377              		.loc 1 57 13 is_stmt 1
  57:src/Riscv.cpp ****         }
 378              		.loc 1 57 39 is_stmt 0
 379 0204 97000000 		call	_ZN15KernelSemaphore9semCloseHEv@plt
 379      E7800000 
 380              	.LVL12:
GAS LISTING /tmp/ccyKFwZR.s 			page 14


 381 020c 6FF0DFF8 		j	.L8
 382              	.L38:
  61:src/Riscv.cpp ****         }
 383              		.loc 1 61 13 is_stmt 1
  61:src/Riscv.cpp ****         }
 384              		.loc 1 61 38 is_stmt 0
 385 0210 97000000 		call	_ZN15KernelSemaphore8semWaitHEv@plt
 385      E7800000 
 386              	.LVL13:
 387 0218 6FF01FF8 		j	.L8
 388              	.L39:
  65:src/Riscv.cpp ****         }
 389              		.loc 1 65 13 is_stmt 1
  65:src/Riscv.cpp ****         }
 390              		.loc 1 65 40 is_stmt 0
 391 021c 97000000 		call	_ZN15KernelSemaphore10semSignalHEv@plt
 391      E7800000 
 392              	.LVL14:
 393 0224 6FF05FF7 		j	.L8
 394              	.L40:
  69:src/Riscv.cpp ****         }
 395              		.loc 1 69 13 is_stmt 1
  69:src/Riscv.cpp ****         }
 396              		.loc 1 69 28 is_stmt 0
 397 0228 97000000 		call	_ZN3PCB10timeSleepHEv@plt
 397      E7800000 
 398              	.LVL15:
 399 0230 6FF09FF6 		j	.L8
 400              	.L41:
  74:src/Riscv.cpp ****         }
 401              		.loc 1 74 13 is_stmt 1
  74:src/Riscv.cpp ****         }
 402              		.loc 1 74 33 is_stmt 0
 403 0234 97000000 		call	_ZN13KernelConsole5getcHEv@plt
 403      E7800000 
 404              	.LVL16:
 405 023c 6FF0DFF5 		j	.L8
 406              	.L27:
 407              	.LBE74:
 408              	.LBB75:
 409              	.LBB46:
  92:src/Riscv.cpp ****         PCB::timeSliceCounter++;
 410              		.loc 1 92 9 is_stmt 1
 411              	.LVL17:
 412              	.LBB47:
 413              	.LBB48:
 126:src/../h/Riscv.hpp **** }
 414              		.loc 2 126 5
 126:src/../h/Riscv.hpp **** }
 415              		.loc 2 126 64 is_stmt 0
 416 0240 93072000 		li	a5,2
 417              	#APP
 418              	# 126 "src/../h/Riscv.hpp" 1
 419              		csrc sip, a5
 420              	# 0 "" 2
 421              	.LVL18:
 422              	#NO_APP
GAS LISTING /tmp/ccyKFwZR.s 			page 15


 423              	.LBE48:
 424              	.LBE47:
  93:src/Riscv.cpp ****         PCB::decreaseSleepingTime();
 425              		.loc 1 93 9 is_stmt 1
  93:src/Riscv.cpp ****         PCB::decreaseSleepingTime();
 426              		.loc 1 93 30 is_stmt 0
 427 0248 17070000 		la	a4,_ZN3PCB16timeSliceCounterE
 427      03370700 
 428 0250 83370700 		ld	a5,0(a4)
 429 0254 93871700 		addi	a5,a5,1
 430 0258 2330F700 		sd	a5,0(a4)
  94:src/Riscv.cpp ****         PCB::removeSleepy();
 431              		.loc 1 94 9 is_stmt 1
 432              	.LBB49:
 433              	.LBB50:
 434              		.file 3 "src/../h/../h/PCB.hpp"
   1:src/../h/../h/PCB.hpp **** //
   2:src/../h/../h/PCB.hpp **** // Created by os on 5/16/23.
   3:src/../h/../h/PCB.hpp **** //
   4:src/../h/../h/PCB.hpp **** 
   5:src/../h/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_1_PCB_HPP
   6:src/../h/../h/PCB.hpp **** #define PROJECT_BASE_V1_1_PCB_HPP
   7:src/../h/../h/PCB.hpp **** 
   8:src/../h/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/../h/PCB.hpp **** #include "Scheduler.hpp"
  10:src/../h/../h/PCB.hpp **** 
  11:src/../h/../h/PCB.hpp **** class PCB {
  12:src/../h/../h/PCB.hpp **** private:
  13:src/../h/../h/PCB.hpp ****     //constants
  14:src/../h/../h/PCB.hpp ****     static uint64 constexpr STACK_SIZE = 1024;
  15:src/../h/../h/PCB.hpp ****     static uint64 constexpr TIME_SLICE = 2;
  16:src/../h/../h/PCB.hpp ****     //struct
  17:src/../h/../h/PCB.hpp ****     struct Context{
  18:src/../h/../h/PCB.hpp ****         uint64 ra;
  19:src/../h/../h/PCB.hpp ****         uint64 sp;
  20:src/../h/../h/PCB.hpp ****     };
  21:src/../h/../h/PCB.hpp **** public:
  22:src/../h/../h/PCB.hpp ****     ///change?
  23:src/../h/../h/PCB.hpp ****     enum State{
  24:src/../h/../h/PCB.hpp ****         READY, RUNNING, SUSPENDED, FINISHED, EXITING, SLEEPING
  25:src/../h/../h/PCB.hpp ****     };
  26:src/../h/../h/PCB.hpp **** 
  27:src/../h/../h/PCB.hpp ****     using Body = void(*)(void *);
  28:src/../h/../h/PCB.hpp ****     static PCB* running;
  29:src/../h/../h/PCB.hpp **** private:
  30:src/../h/../h/PCB.hpp ****     //saving regA4 because interpreter uses it
  31:src/../h/../h/PCB.hpp ****     static uint64 regA4;
  32:src/../h/../h/PCB.hpp **** 
  33:src/../h/../h/PCB.hpp ****     ///change?
  34:src/../h/../h/PCB.hpp ****     bool rcs=0;
  35:src/../h/../h/PCB.hpp **** 
  36:src/../h/../h/PCB.hpp ****     //pcb variables
  37:src/../h/../h/PCB.hpp ****     State state;
  38:src/../h/../h/PCB.hpp ****     Body body;
  39:src/../h/../h/PCB.hpp ****     void* stack;
  40:src/../h/../h/PCB.hpp ****     Context context;
  41:src/../h/../h/PCB.hpp ****     uint64 timeSlice;
GAS LISTING /tmp/ccyKFwZR.s 			page 16


  42:src/../h/../h/PCB.hpp ****     void * arg;
  43:src/../h/../h/PCB.hpp ****     uint64 sleepingTime=0;
  44:src/../h/../h/PCB.hpp **** 
  45:src/../h/../h/PCB.hpp ****     //sleepyThread
  46:src/../h/../h/PCB.hpp ****     static PCB* sleepyHead;
  47:src/../h/../h/PCB.hpp ****     PCB* nextSleepy = nullptr;
  48:src/../h/../h/PCB.hpp **** 
  49:src/../h/../h/PCB.hpp ****     //variable for regime change
  50:src/../h/../h/PCB.hpp ****     bool mainOrConsole=false;
  51:src/../h/../h/PCB.hpp **** 
  52:src/../h/../h/PCB.hpp ****     ///change?
  53:src/../h/../h/PCB.hpp ****     uint64 sscratch;
  54:src/../h/../h/PCB.hpp **** public:
  55:src/../h/../h/PCB.hpp ****     explicit PCB(Body body, void* arg, void* stack, uint64 timeSlice):
  56:src/../h/../h/PCB.hpp ****         state(READY),
  57:src/../h/../h/PCB.hpp ****         body(body),
  58:src/../h/../h/PCB.hpp ****         stack(stack),
  59:src/../h/../h/PCB.hpp ****         context({
  60:src/../h/../h/PCB.hpp ****             (uint64) &threadWrapper,
  61:src/../h/../h/PCB.hpp ****             (uint64) ((char *) stack + DEFAULT_STACK_SIZE)
  62:src/../h/../h/PCB.hpp ****         }),
  63:src/../h/../h/PCB.hpp ****         timeSlice(timeSlice),
  64:src/../h/../h/PCB.hpp ****         arg(arg)
  65:src/../h/../h/PCB.hpp ****     {}
  66:src/../h/../h/PCB.hpp **** 
  67:src/../h/../h/PCB.hpp ****     void* operator new (size_t);
  68:src/../h/../h/PCB.hpp ****     void operator delete (void*);
  69:src/../h/../h/PCB.hpp **** 
  70:src/../h/../h/PCB.hpp ****     ~PCB();
  71:src/../h/../h/PCB.hpp ****     static void contextSwitch(Context* oldContext, Context* runningContext);
  72:src/../h/../h/PCB.hpp ****     static void dispatch();
  73:src/../h/../h/PCB.hpp **** 
  74:src/../h/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  75:src/../h/../h/PCB.hpp **** 
  76:src/../h/../h/PCB.hpp ****     //wrapper
  77:src/../h/../h/PCB.hpp ****     static void threadWrapper();
  78:src/../h/../h/PCB.hpp **** 
  79:src/../h/../h/PCB.hpp ****     //getters setters etc.
  80:src/../h/../h/PCB.hpp ****     bool isFinished() const { return state==FINISHED;}
  81:src/../h/../h/PCB.hpp ****     void start() { Scheduler::put(this);}
  82:src/../h/../h/PCB.hpp ****     uint64 getTimeSlice() const { return timeSlice;}
  83:src/../h/../h/PCB.hpp ****     void setSleepingTime(uint64 t) { sleepingTime=t;}
  84:src/../h/../h/PCB.hpp ****     uint64  getSleepingTime() const {return sleepingTime;}
  85:src/../h/../h/PCB.hpp ****     static void decreaseSleepingTime() {if(sleepyHead) sleepyHead->sleepingTime--;}
 435              		.loc 3 85 41
 436              		.loc 3 85 54 is_stmt 0
 437 025c 97070000 		la	a5,_ZN3PCB10sleepyHeadE
 437      83B70700 
 438 0264 83B70700 		ld	a5,0(a5)
 439              		.loc 3 85 41
 440 0268 63880700 		beqz	a5,.L21
 441              		.loc 3 85 56 is_stmt 1
 442              		.loc 3 85 68 is_stmt 0
 443 026c 03B78703 		ld	a4,56(a5)
 444              		.loc 3 85 80
 445 0270 1307F7FF 		addi	a4,a4,-1
 446 0274 23BCE702 		sd	a4,56(a5)
GAS LISTING /tmp/ccyKFwZR.s 			page 17


 447              	.L21:
 448              	.LBE50:
 449              	.LBE49:
  95:src/Riscv.cpp ****         if(PCB::timeSliceCounter >= PCB::running->getTimeSlice()) {
 450              		.loc 1 95 9 is_stmt 1
  95:src/Riscv.cpp ****         if(PCB::timeSliceCounter >= PCB::running->getTimeSlice()) {
 451              		.loc 1 95 26 is_stmt 0
 452 0278 97000000 		call	_ZN3PCB12removeSleepyEv@plt
 452      E7800000 
 453              	.LVL19:
  96:src/Riscv.cpp ****             volatile uint64 sepc = r_sepc();
 454              		.loc 1 96 9 is_stmt 1
 455              	.LBB51:
  96:src/Riscv.cpp ****             volatile uint64 sepc = r_sepc();
 456              		.loc 1 96 63 is_stmt 0
 457 0280 97070000 		la	a5,_ZN3PCB7runningE
 457      83B70700 
 458 0288 83B70700 		ld	a5,0(a5)
 459              	.LVL20:
 460              	.LBB52:
 461              	.LBB53:
  82:src/../h/../h/PCB.hpp ****     void setSleepingTime(uint64 t) { sleepingTime=t;}
 462              		.loc 3 82 35 is_stmt 1
  82:src/../h/../h/PCB.hpp ****     void setSleepingTime(uint64 t) { sleepingTime=t;}
 463              		.loc 3 82 42 is_stmt 0
 464 028c 83B78702 		ld	a5,40(a5)
 465              	.LVL21:
 466              	.LBE53:
 467              	.LBE52:
  96:src/Riscv.cpp ****             volatile uint64 sepc = r_sepc();
 468              		.loc 1 96 34
 469 0290 17070000 		la	a4,_ZN3PCB16timeSliceCounterE
 469      03370700 
 470 0298 03370700 		ld	a4,0(a4)
  96:src/Riscv.cpp ****             volatile uint64 sepc = r_sepc();
 471              		.loc 1 96 9
 472 029c E366F7F0 		bltu	a4,a5,.L3
 473              	.LBB54:
  97:src/Riscv.cpp ****             volatile uint64 sstatus = r_sstatus();
 474              		.loc 1 97 13 is_stmt 1
 475              	.LBB55:
 476              	.LBB56:
  92:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 477              		.loc 2 92 5
  93:src/../h/Riscv.hpp ****     return sepc;
 478              		.loc 2 93 5
  93:src/../h/Riscv.hpp ****     return sepc;
 479              		.loc 2 93 64 is_stmt 0
 480              	#APP
 481              	# 93 "src/../h/Riscv.hpp" 1
 482              		csrr a5, sepc
 483              	# 0 "" 2
 484              	#NO_APP
 485 02a4 2338F4FC 		sd	a5,-48(s0)
  94:src/../h/Riscv.hpp **** }
 486              		.loc 2 94 5 is_stmt 1
  94:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccyKFwZR.s 			page 18


 487              		.loc 2 94 12 is_stmt 0
 488 02a8 833704FD 		ld	a5,-48(s0)
 489              	.LBE56:
 490              	.LBE55:
  97:src/Riscv.cpp ****             volatile uint64 sstatus = r_sstatus();
 491              		.loc 1 97 43
 492 02ac 2330F4FA 		sd	a5,-96(s0)
  98:src/Riscv.cpp ****             PCB::timeSliceCounter=0;
 493              		.loc 1 98 13 is_stmt 1
 494              	.LBB57:
 495              	.LBB58:
 148:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 496              		.loc 2 148 5
 149:src/../h/Riscv.hpp ****     return sstatus;
 497              		.loc 2 149 5
 149:src/../h/Riscv.hpp ****     return sstatus;
 498              		.loc 2 149 76 is_stmt 0
 499              	#APP
 500              	# 149 "src/../h/Riscv.hpp" 1
 501              		csrr a5, sstatus
 502              	# 0 "" 2
 503              	#NO_APP
 504 02b4 2334F4FC 		sd	a5,-56(s0)
 150:src/../h/Riscv.hpp **** }
 505              		.loc 2 150 5 is_stmt 1
 150:src/../h/Riscv.hpp **** }
 506              		.loc 2 150 12 is_stmt 0
 507 02b8 833784FC 		ld	a5,-56(s0)
 508              	.LBE58:
 509              	.LBE57:
  98:src/Riscv.cpp ****             PCB::timeSliceCounter=0;
 510              		.loc 1 98 49
 511 02bc 2334F4FA 		sd	a5,-88(s0)
  99:src/Riscv.cpp ****             PCB::dispatch();
 512              		.loc 1 99 13 is_stmt 1
  99:src/Riscv.cpp ****             PCB::dispatch();
 513              		.loc 1 99 34 is_stmt 0
 514 02c0 97070000 		la	a5,_ZN3PCB16timeSliceCounterE
 514      83B70700 
 515 02c8 23B00700 		sd	zero,0(a5)
 100:src/Riscv.cpp ****             w_sepc(sepc);
 516              		.loc 1 100 13 is_stmt 1
 100:src/Riscv.cpp ****             w_sepc(sepc);
 517              		.loc 1 100 26 is_stmt 0
 518 02cc 97000000 		call	_ZN3PCB8dispatchEv@plt
 518      E7800000 
 519              	.LVL22:
 101:src/Riscv.cpp ****             w_sstatus(sstatus);
 520              		.loc 1 101 13 is_stmt 1
 101:src/Riscv.cpp ****             w_sstatus(sstatus);
 521              		.loc 1 101 19 is_stmt 0
 522 02d4 833704FA 		ld	a5,-96(s0)
 523              	.LVL23:
 524              	.LBB59:
 525              	.LBB60:
  98:src/../h/Riscv.hpp **** }
 526              		.loc 2 98 5 is_stmt 1
GAS LISTING /tmp/ccyKFwZR.s 			page 19


  98:src/../h/Riscv.hpp **** }
 527              		.loc 2 98 65 is_stmt 0
 528              	#APP
 529              	# 98 "src/../h/Riscv.hpp" 1
 530              		csrw sepc, a5
 531              	# 0 "" 2
 532              	.LVL24:
 533              	#NO_APP
 534              	.LBE60:
 535              	.LBE59:
 102:src/Riscv.cpp ****         }
 536              		.loc 1 102 13 is_stmt 1
 102:src/Riscv.cpp ****         }
 537              		.loc 1 102 22 is_stmt 0
 538 02dc 833784FA 		ld	a5,-88(s0)
 539              	.LVL25:
 540              	.LBB61:
 541              	.LBB62:
 154:src/../h/Riscv.hpp **** }
 542              		.loc 2 154 5 is_stmt 1
 154:src/../h/Riscv.hpp **** }
 543              		.loc 2 154 77 is_stmt 0
 544              	#APP
 545              	# 154 "src/../h/Riscv.hpp" 1
 546              		csrw sstatus, a5
 547              	# 0 "" 2
 548              		.loc 2 155 1
 549              	#NO_APP
 550 02e4 6FF05FEC 		j	.L3
 551              	.LVL26:
 552              	.L28:
 553              	.LBE62:
 554              	.LBE61:
 555              	.LBE54:
 556              	.LBE51:
 557              	.LBE46:
 558              	.LBB63:
 559              	.LBB41:
 109:src/Riscv.cpp ****         if(num==0x0a && (*((char*)CONSOLE_STATUS)&CONSOLE_RX_STATUS_BIT)){
 560              		.loc 1 109 9 is_stmt 1
 109:src/Riscv.cpp ****         if(num==0x0a && (*((char*)CONSOLE_STATUS)&CONSOLE_RX_STATUS_BIT)){
 561              		.loc 1 109 29 is_stmt 0
 562 02e8 97000000 		call	plic_claim@plt
 562      E7800000 
 563              	.LVL27:
 564 02f0 93040500 		mv	s1,a0
 565              	.LVL28:
 110:src/Riscv.cpp ****             char ret = *(char*)CONSOLE_RX_DATA;
 566              		.loc 1 110 9 is_stmt 1
 567              	.LBB42:
 568 02f4 9307A000 		li	a5,10
 569 02f8 630AF500 		beq	a0,a5,.L42
 570              	.LVL29:
 571              	.L23:
 572              	.LBE42:
 114:src/Riscv.cpp ****     }
 573              		.loc 1 114 9
GAS LISTING /tmp/ccyKFwZR.s 			page 20


 114:src/Riscv.cpp ****     }
 574              		.loc 1 114 22 is_stmt 0
 575 02fc 13850400 		mv	a0,s1
 576 0300 97000000 		call	plic_complete@plt
 576      E7800000 
 577              	.LVL30:
 578              	.LBE41:
 579 0308 6FF01FEA 		j	.L3
 580              	.LVL31:
 581              	.L42:
 582              	.LBB45:
 583              	.LBB44:
 110:src/Riscv.cpp ****             char ret = *(char*)CONSOLE_RX_DATA;
 584              		.loc 1 110 26 discriminator 1
 585 030c 97070000 		la	a5,CONSOLE_STATUS
 585      83B70700 
 586 0314 83B70700 		ld	a5,0(a5)
 587 0318 83C70700 		lbu	a5,0(a5)
 110:src/Riscv.cpp ****             char ret = *(char*)CONSOLE_RX_DATA;
 588              		.loc 1 110 22 discriminator 1
 589 031c 93F71700 		andi	a5,a5,1
 590 0320 E38E07FC 		beqz	a5,.L23
 591              	.LBB43:
 111:src/Riscv.cpp ****             KernelConsole::inputBuffer->put(ret);
 592              		.loc 1 111 13 is_stmt 1
 111:src/Riscv.cpp ****             KernelConsole::inputBuffer->put(ret);
 593              		.loc 1 111 24 is_stmt 0
 594 0324 97070000 		la	a5,CONSOLE_RX_DATA
 594      83B70700 
 595 032c 83B70700 		ld	a5,0(a5)
 596              	.LVL32:
 112:src/Riscv.cpp ****         }
 597              		.loc 1 112 13 is_stmt 1
 112:src/Riscv.cpp ****         }
 598              		.loc 1 112 44 is_stmt 0
 599 0330 83C50700 		lbu	a1,0(a5)
 600 0334 97070000 		la	a5,_ZN13KernelConsole11inputBufferE
 600      83B70700 
 601              	.LVL33:
 602 033c 03B50700 		ld	a0,0(a5)
 603              	.LVL34:
 604 0340 97000000 		call	_ZN13ConsoleBuffer3putEc@plt
 604      E7800000 
 605              	.LVL35:
 606              	.LBE43:
 607 0348 6FF05FFB 		j	.L23
 608              	.L29:
 609              	.LBE44:
 610              	.LBE45:
 117:src/Riscv.cpp **** 
 611              		.loc 1 117 9 is_stmt 1
 117:src/Riscv.cpp **** 
 612              		.loc 1 117 15 is_stmt 0
 613 034c 13052003 		li	a0,50
 614 0350 97000000 		call	__putc@plt
 614      E7800000 
 615              	.LVL36:
GAS LISTING /tmp/ccyKFwZR.s 			page 21


 616 0358 6FF01FE5 		j	.L3
 617              	.LBE63:
 618              	.LBE75:
 619              	.LBE79:
 620              		.cfi_endproc
 621              	.LFE47:
 623              		.align	2
 624              		.globl	_ZN5Riscv15userMainWrapperEPv
 626              	_ZN5Riscv15userMainWrapperEPv:
 627              	.LFB48:
 128:src/Riscv.cpp **** 
 129:src/Riscv.cpp **** void Riscv::userMainWrapper(void *) {
 628              		.loc 1 129 37 is_stmt 1
 629              		.cfi_startproc
 630 035c 130101FF 		addi	sp,sp,-16
 631              		.cfi_def_cfa_offset 16
 632 0360 23341100 		sd	ra,8(sp)
 633 0364 23308100 		sd	s0,0(sp)
 634              		.cfi_offset 1, -8
 635              		.cfi_offset 8, -16
 636 0368 13040101 		addi	s0,sp,16
 637              		.cfi_def_cfa 8, 0
 130:src/Riscv.cpp ****     userMain();
 638              		.loc 1 130 5
 639              		.loc 1 130 13 is_stmt 0
 640 036c 97000000 		call	_Z8userMainv@plt
 640      E7800000 
 641              	.LVL37:
 131:src/Riscv.cpp **** }
 642              		.loc 1 131 1
 643 0374 83308100 		ld	ra,8(sp)
 644              		.cfi_restore 1
 645 0378 03340100 		ld	s0,0(sp)
 646              		.cfi_restore 8
 647              		.cfi_def_cfa 2, 16
 648 037c 13010101 		addi	sp,sp,16
 649              		.cfi_def_cfa_offset 0
 650 0380 67800000 		jr	ra
 651              		.cfi_endproc
 652              	.LFE48:
 654              	.Letext0:
 655              		.file 4 "src/../h/../lib/hw.h"
 656              		.file 5 "src/../h/../h/../h/MemoryAllocator.hpp"
 657              		.file 6 "src/../h/../h/ConsoleBuffer.hpp"
 658              		.file 7 "src/../h/KernelSemaphore.hpp"
 659              		.file 8 "src/../h/KernelConsole.hpp"
 660              		.file 9 "src/../h/../h/../h/syscall_c.hpp"
 661              		.file 10 "src/../h/../h/userMain.hpp"
 662              		.file 11 "src/../lib/console.h"
GAS LISTING /tmp/ccyKFwZR.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccyKFwZR.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccyKFwZR.s:13     .text:0000000000000000 .L0 
     /tmp/ccyKFwZR.s:14     .text:0000000000000000 .L0 
     /tmp/ccyKFwZR.s:15     .text:0000000000000004 .L0 
     /tmp/ccyKFwZR.s:17     .text:0000000000000008 .L0 
     /tmp/ccyKFwZR.s:19     .text:000000000000000c .L0 
     /tmp/ccyKFwZR.s:21     .text:000000000000000c .L0 
       src/Riscv.cpp:12     .text:000000000000000c .L0 
     /tmp/ccyKFwZR.s:27     .text:0000000000000010 .L0 
       src/Riscv.cpp:13     .text:0000000000000010 .L0 
     /tmp/ccyKFwZR.s:33     .text:0000000000000014 .L0 
     /tmp/ccyKFwZR.s:34     .text:0000000000000018 .L0 
     /tmp/ccyKFwZR.s:35     .text:0000000000000018 .L0 
     /tmp/ccyKFwZR.s:37     .text:000000000000001c .L0 
     /tmp/ccyKFwZR.s:39     .text:0000000000000020 .L0 
     /tmp/ccyKFwZR.s:45     .text:0000000000000020 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccyKFwZR.s:48     .text:0000000000000020 .L0 
     /tmp/ccyKFwZR.s:49     .text:0000000000000020 .L0 
     /tmp/ccyKFwZR.s:50     .text:0000000000000024 .L0 
     /tmp/ccyKFwZR.s:54     .text:0000000000000030 .L0 
     /tmp/ccyKFwZR.s:55     .text:0000000000000030 .L0 
     /tmp/ccyKFwZR.s:56     .text:0000000000000030 .L0 
     /tmp/ccyKFwZR.s:58     .text:0000000000000034 .L0 
     /tmp/ccyKFwZR.s:60     .text:0000000000000034 .L0 
       src/Riscv.cpp:17     .text:0000000000000034 .L0 
     /tmp/ccyKFwZR.s:69     .text:0000000000000044 .L0 
     /tmp/ccyKFwZR.s:70     .text:0000000000000044 .L0 
       src/Riscv.cpp:18     .text:0000000000000050 .L0 
     /tmp/ccyKFwZR.s:83     .text:0000000000000058 .L0 
     /tmp/ccyKFwZR.s:84     .text:0000000000000058 .L0 
     /tmp/ccyKFwZR.s:85     .text:0000000000000058 .L0 
  src/../h/Riscv.hpp:83     .text:0000000000000058 .L0 
     /tmp/ccyKFwZR.s:93     .text:0000000000000060 .L0 
     /tmp/ccyKFwZR.s:94     .text:0000000000000060 .L0 
     /tmp/ccyKFwZR.s:98     .text:0000000000000064 .L0 
     /tmp/ccyKFwZR.s:101    .text:0000000000000068 .L0 
     /tmp/ccyKFwZR.s:102    .text:0000000000000068 .L0 
     /tmp/ccyKFwZR.s:104    .text:000000000000006c .L0 
     /tmp/ccyKFwZR.s:107    .text:0000000000000074 .L0 
     /tmp/ccyKFwZR.s:109    .text:0000000000000078 .L0 
     /tmp/ccyKFwZR.s:115    .text:0000000000000080 .L0 
     /tmp/ccyKFwZR.s:116    .text:0000000000000080 .L0 
     /tmp/ccyKFwZR.s:118    .text:0000000000000084 .L0 
     /tmp/ccyKFwZR.s:128    .text:0000000000000094 .L0 
     /tmp/ccyKFwZR.s:129    .text:0000000000000094 .L0 
     /tmp/ccyKFwZR.s:131    .text:0000000000000098 .L0 
     /tmp/ccyKFwZR.s:136    .text:00000000000000a8 .L0 
     /tmp/ccyKFwZR.s:137    .text:00000000000000a8 .L0 
     /tmp/ccyKFwZR.s:139    .text:00000000000000ac .L0 
     /tmp/ccyKFwZR.s:142    .text:00000000000000b4 .L0 
     /tmp/ccyKFwZR.s:143    .text:00000000000000b4 .L0 
     /tmp/ccyKFwZR.s:148    .text:00000000000000b8 .L0 
     /tmp/ccyKFwZR.s:155    .text:00000000000000bc .L0 
     /tmp/ccyKFwZR.s:156    .text:00000000000000bc .L0 
     /tmp/ccyKFwZR.s:157    .text:00000000000000bc .L0 
GAS LISTING /tmp/ccyKFwZR.s 			page 23


  src/../h/Riscv.hpp:93     .text:00000000000000bc .L0 
     /tmp/ccyKFwZR.s:165    .text:00000000000000c4 .L0 
     /tmp/ccyKFwZR.s:166    .text:00000000000000c4 .L0 
     /tmp/ccyKFwZR.s:170    .text:00000000000000c8 .L0 
     /tmp/ccyKFwZR.s:172    .text:00000000000000cc .L0 
     /tmp/ccyKFwZR.s:176    .text:00000000000000d0 .L0 
     /tmp/ccyKFwZR.s:177    .text:00000000000000d0 .L0 
     /tmp/ccyKFwZR.s:178    .text:00000000000000d0 .L0 
  src/../h/Riscv.hpp:149    .text:00000000000000d0 .L0 
     /tmp/ccyKFwZR.s:186    .text:00000000000000d8 .L0 
     /tmp/ccyKFwZR.s:187    .text:00000000000000d8 .L0 
     /tmp/ccyKFwZR.s:191    .text:00000000000000dc .L0 
     /tmp/ccyKFwZR.s:193    .text:00000000000000e0 .L0 
     /tmp/ccyKFwZR.s:194    .text:00000000000000e0 .L0 
       src/Riscv.cpp:25     .text:00000000000000e0 .L0 
     /tmp/ccyKFwZR.s:202    .text:00000000000000e8 .L0 
     /tmp/ccyKFwZR.s:203    .text:00000000000000e8 .L0 
     /tmp/ccyKFwZR.s:205    .text:00000000000000ec .L0 
     /tmp/ccyKFwZR.s:208    .text:00000000000000f4 .L0 
     /tmp/ccyKFwZR.s:209    .text:00000000000000f4 .L0 
     /tmp/ccyKFwZR.s:211    .text:00000000000000f8 .L0 
     /tmp/ccyKFwZR.s:214    .text:0000000000000100 .L0 
     /tmp/ccyKFwZR.s:215    .text:0000000000000100 .L0 
     /tmp/ccyKFwZR.s:217    .text:0000000000000104 .L0 
     /tmp/ccyKFwZR.s:220    .text:000000000000010c .L0 
     /tmp/ccyKFwZR.s:221    .text:000000000000010c .L0 
     /tmp/ccyKFwZR.s:223    .text:0000000000000110 .L0 
     /tmp/ccyKFwZR.s:226    .text:0000000000000118 .L0 
     /tmp/ccyKFwZR.s:227    .text:0000000000000118 .L0 
     /tmp/ccyKFwZR.s:229    .text:000000000000011c .L0 
     /tmp/ccyKFwZR.s:232    .text:0000000000000124 .L0 
     /tmp/ccyKFwZR.s:233    .text:0000000000000124 .L0 
     /tmp/ccyKFwZR.s:235    .text:0000000000000128 .L0 
     /tmp/ccyKFwZR.s:238    .text:0000000000000130 .L0 
     /tmp/ccyKFwZR.s:239    .text:0000000000000130 .L0 
     /tmp/ccyKFwZR.s:241    .text:0000000000000134 .L0 
     /tmp/ccyKFwZR.s:244    .text:000000000000013c .L0 
     /tmp/ccyKFwZR.s:245    .text:000000000000013c .L0 
     /tmp/ccyKFwZR.s:247    .text:0000000000000140 .L0 
     /tmp/ccyKFwZR.s:250    .text:0000000000000148 .L0 
     /tmp/ccyKFwZR.s:251    .text:0000000000000148 .L0 
     /tmp/ccyKFwZR.s:253    .text:000000000000014c .L0 
     /tmp/ccyKFwZR.s:256    .text:0000000000000154 .L0 
     /tmp/ccyKFwZR.s:257    .text:0000000000000154 .L0 
     /tmp/ccyKFwZR.s:259    .text:0000000000000158 .L0 
     /tmp/ccyKFwZR.s:262    .text:0000000000000160 .L0 
     /tmp/ccyKFwZR.s:263    .text:0000000000000160 .L0 
     /tmp/ccyKFwZR.s:265    .text:0000000000000164 .L0 
     /tmp/ccyKFwZR.s:268    .text:000000000000016c .L0 
     /tmp/ccyKFwZR.s:269    .text:000000000000016c .L0 
     /tmp/ccyKFwZR.s:271    .text:0000000000000170 .L0 
     /tmp/ccyKFwZR.s:274    .text:0000000000000178 .L0 
     /tmp/ccyKFwZR.s:275    .text:0000000000000178 .L0 
     /tmp/ccyKFwZR.s:277    .text:000000000000017c .L0 
     /tmp/ccyKFwZR.s:280    .text:0000000000000184 .L0 
     /tmp/ccyKFwZR.s:281    .text:0000000000000184 .L0 
     /tmp/ccyKFwZR.s:286    .text:0000000000000190 .L0 
GAS LISTING /tmp/ccyKFwZR.s 			page 24


     /tmp/ccyKFwZR.s:287    .text:0000000000000190 .L0 
     /tmp/ccyKFwZR.s:291    .text:0000000000000198 .L0 
     /tmp/ccyKFwZR.s:292    .text:0000000000000198 .L0 
     /tmp/ccyKFwZR.s:297    .text:000000000000019c .L0 
  src/../h/Riscv.hpp:98     .text:000000000000019c .L0 
     /tmp/ccyKFwZR.s:307    .text:00000000000001a0 .L0 
     /tmp/ccyKFwZR.s:308    .text:00000000000001a0 .L0 
     /tmp/ccyKFwZR.s:313    .text:00000000000001a4 .L0 
  src/../h/Riscv.hpp:154    .text:00000000000001a4 .L0 
     /tmp/ccyKFwZR.s:326    .text:00000000000001a8 .L0 
     /tmp/ccyKFwZR.s:327    .text:00000000000001ac .L0 
     /tmp/ccyKFwZR.s:328    .text:00000000000001ac .L0 
     /tmp/ccyKFwZR.s:330    .text:00000000000001b0 .L0 
     /tmp/ccyKFwZR.s:331    .text:00000000000001b0 .L0 
     /tmp/ccyKFwZR.s:333    .text:00000000000001b4 .L0 
     /tmp/ccyKFwZR.s:335    .text:00000000000001b8 .L0 
     /tmp/ccyKFwZR.s:338    .text:00000000000001bc .L0 
     /tmp/ccyKFwZR.s:342    .text:00000000000001bc .L0 
     /tmp/ccyKFwZR.s:343    .text:00000000000001bc .L0 
     /tmp/ccyKFwZR.s:348    .text:00000000000001c8 .L0 
     /tmp/ccyKFwZR.s:349    .text:00000000000001c8 .L0 
     /tmp/ccyKFwZR.s:354    .text:00000000000001d4 .L0 
     /tmp/ccyKFwZR.s:355    .text:00000000000001d4 .L0 
     /tmp/ccyKFwZR.s:360    .text:00000000000001e0 .L0 
     /tmp/ccyKFwZR.s:361    .text:00000000000001e0 .L0 
     /tmp/ccyKFwZR.s:366    .text:00000000000001ec .L0 
     /tmp/ccyKFwZR.s:367    .text:00000000000001ec .L0 
     /tmp/ccyKFwZR.s:372    .text:00000000000001f8 .L0 
     /tmp/ccyKFwZR.s:373    .text:00000000000001f8 .L0 
     /tmp/ccyKFwZR.s:378    .text:0000000000000204 .L0 
     /tmp/ccyKFwZR.s:379    .text:0000000000000204 .L0 
     /tmp/ccyKFwZR.s:384    .text:0000000000000210 .L0 
     /tmp/ccyKFwZR.s:385    .text:0000000000000210 .L0 
     /tmp/ccyKFwZR.s:390    .text:000000000000021c .L0 
     /tmp/ccyKFwZR.s:391    .text:000000000000021c .L0 
     /tmp/ccyKFwZR.s:396    .text:0000000000000228 .L0 
     /tmp/ccyKFwZR.s:397    .text:0000000000000228 .L0 
     /tmp/ccyKFwZR.s:402    .text:0000000000000234 .L0 
     /tmp/ccyKFwZR.s:403    .text:0000000000000234 .L0 
     /tmp/ccyKFwZR.s:414    .text:0000000000000240 .L0 
     /tmp/ccyKFwZR.s:415    .text:0000000000000240 .L0 
     /tmp/ccyKFwZR.s:416    .text:0000000000000240 .L0 
     /tmp/ccyKFwZR.s:426    .text:0000000000000248 .L0 
     /tmp/ccyKFwZR.s:427    .text:0000000000000248 .L0 
     /tmp/ccyKFwZR.s:435    .text:000000000000025c .L0 
     /tmp/ccyKFwZR.s:436    .text:000000000000025c .L0 
     /tmp/ccyKFwZR.s:437    .text:000000000000025c .L0 
     /tmp/ccyKFwZR.s:440    .text:0000000000000268 .L0 
     /tmp/ccyKFwZR.s:442    .text:000000000000026c .L0 
     /tmp/ccyKFwZR.s:443    .text:000000000000026c .L0 
     /tmp/ccyKFwZR.s:445    .text:0000000000000270 .L0 
     /tmp/ccyKFwZR.s:451    .text:0000000000000278 .L0 
     /tmp/ccyKFwZR.s:452    .text:0000000000000278 .L0 
     /tmp/ccyKFwZR.s:456    .text:0000000000000280 .L0 
     /tmp/ccyKFwZR.s:457    .text:0000000000000280 .L0 
     /tmp/ccyKFwZR.s:463    .text:000000000000028c .L0 
     /tmp/ccyKFwZR.s:464    .text:000000000000028c .L0 
GAS LISTING /tmp/ccyKFwZR.s 			page 25


     /tmp/ccyKFwZR.s:469    .text:0000000000000290 .L0 
     /tmp/ccyKFwZR.s:472    .text:000000000000029c .L0 
     /tmp/ccyKFwZR.s:477    .text:00000000000002a0 .L0 
     /tmp/ccyKFwZR.s:478    .text:00000000000002a0 .L0 
     /tmp/ccyKFwZR.s:479    .text:00000000000002a0 .L0 
  src/../h/Riscv.hpp:93     .text:00000000000002a0 .L0 
     /tmp/ccyKFwZR.s:487    .text:00000000000002a8 .L0 
     /tmp/ccyKFwZR.s:488    .text:00000000000002a8 .L0 
     /tmp/ccyKFwZR.s:492    .text:00000000000002ac .L0 
     /tmp/ccyKFwZR.s:496    .text:00000000000002b0 .L0 
     /tmp/ccyKFwZR.s:497    .text:00000000000002b0 .L0 
     /tmp/ccyKFwZR.s:498    .text:00000000000002b0 .L0 
  src/../h/Riscv.hpp:149    .text:00000000000002b0 .L0 
     /tmp/ccyKFwZR.s:506    .text:00000000000002b8 .L0 
     /tmp/ccyKFwZR.s:507    .text:00000000000002b8 .L0 
     /tmp/ccyKFwZR.s:511    .text:00000000000002bc .L0 
     /tmp/ccyKFwZR.s:513    .text:00000000000002c0 .L0 
     /tmp/ccyKFwZR.s:514    .text:00000000000002c0 .L0 
     /tmp/ccyKFwZR.s:517    .text:00000000000002cc .L0 
     /tmp/ccyKFwZR.s:518    .text:00000000000002cc .L0 
     /tmp/ccyKFwZR.s:521    .text:00000000000002d4 .L0 
     /tmp/ccyKFwZR.s:522    .text:00000000000002d4 .L0 
     /tmp/ccyKFwZR.s:527    .text:00000000000002d8 .L0 
  src/../h/Riscv.hpp:98     .text:00000000000002d8 .L0 
     /tmp/ccyKFwZR.s:537    .text:00000000000002dc .L0 
     /tmp/ccyKFwZR.s:538    .text:00000000000002dc .L0 
     /tmp/ccyKFwZR.s:543    .text:00000000000002e0 .L0 
  src/../h/Riscv.hpp:154    .text:00000000000002e0 .L0 
     /tmp/ccyKFwZR.s:550    .text:00000000000002e4 .L0 
     /tmp/ccyKFwZR.s:561    .text:00000000000002e8 .L0 
     /tmp/ccyKFwZR.s:562    .text:00000000000002e8 .L0 
     /tmp/ccyKFwZR.s:568    .text:00000000000002f4 .L0 
     /tmp/ccyKFwZR.s:574    .text:00000000000002fc .L0 
     /tmp/ccyKFwZR.s:575    .text:00000000000002fc .L0 
     /tmp/ccyKFwZR.s:585    .text:000000000000030c .L0 
     /tmp/ccyKFwZR.s:589    .text:000000000000031c .L0 
     /tmp/ccyKFwZR.s:593    .text:0000000000000324 .L0 
     /tmp/ccyKFwZR.s:594    .text:0000000000000324 .L0 
     /tmp/ccyKFwZR.s:598    .text:0000000000000330 .L0 
     /tmp/ccyKFwZR.s:599    .text:0000000000000330 .L0 
     /tmp/ccyKFwZR.s:612    .text:000000000000034c .L0 
     /tmp/ccyKFwZR.s:613    .text:000000000000034c .L0 
     /tmp/ccyKFwZR.s:620    .text:000000000000035c .L0 
     /tmp/ccyKFwZR.s:626    .text:000000000000035c _ZN5Riscv15userMainWrapperEPv
     /tmp/ccyKFwZR.s:629    .text:000000000000035c .L0 
     /tmp/ccyKFwZR.s:630    .text:000000000000035c .L0 
     /tmp/ccyKFwZR.s:631    .text:0000000000000360 .L0 
     /tmp/ccyKFwZR.s:634    .text:0000000000000368 .L0 
     /tmp/ccyKFwZR.s:635    .text:0000000000000368 .L0 
     /tmp/ccyKFwZR.s:637    .text:000000000000036c .L0 
     /tmp/ccyKFwZR.s:639    .text:000000000000036c .L0 
     /tmp/ccyKFwZR.s:640    .text:000000000000036c .L0 
     /tmp/ccyKFwZR.s:643    .text:0000000000000374 .L0 
     /tmp/ccyKFwZR.s:644    .text:0000000000000378 .L0 
     /tmp/ccyKFwZR.s:646    .text:000000000000037c .L0 
     /tmp/ccyKFwZR.s:647    .text:000000000000037c .L0 
     /tmp/ccyKFwZR.s:649    .text:0000000000000380 .L0 
GAS LISTING /tmp/ccyKFwZR.s 			page 26


     /tmp/ccyKFwZR.s:651    .text:0000000000000384 .L0 
     /tmp/ccyKFwZR.s:663    .text:0000000000000384 .L0 
     /tmp/ccyKFwZR.s:66     .text:0000000000000038 .L0 
     /tmp/ccyKFwZR.s:70     .text:0000000000000044 .L0 
     /tmp/ccyKFwZR.s:427    .text:0000000000000248 .L0 
     /tmp/ccyKFwZR.s:437    .text:000000000000025c .L0 
     /tmp/ccyKFwZR.s:457    .text:0000000000000280 .L0 
     /tmp/ccyKFwZR.s:469    .text:0000000000000290 .L0 
     /tmp/ccyKFwZR.s:514    .text:00000000000002c0 .L0 
     /tmp/ccyKFwZR.s:585    .text:000000000000030c .L0 
     /tmp/ccyKFwZR.s:594    .text:0000000000000324 .L0 
     /tmp/ccyKFwZR.s:600    .text:0000000000000334 .L0 
     /tmp/ccyKFwZR.s:149    .text:00000000000000bc .L4
     /tmp/ccyKFwZR.s:406    .text:0000000000000240 .L27
     /tmp/ccyKFwZR.s:552    .text:00000000000002e8 .L28
     /tmp/ccyKFwZR.s:608    .text:000000000000034c .L29
     /tmp/ccyKFwZR.s:320    .text:00000000000001a8 .L3
     /tmp/ccyKFwZR.s:284    .text:0000000000000190 .L30
     /tmp/ccyKFwZR.s:337    .text:00000000000001bc .L31
     /tmp/ccyKFwZR.s:346    .text:00000000000001c8 .L32
     /tmp/ccyKFwZR.s:352    .text:00000000000001d4 .L33
     /tmp/ccyKFwZR.s:358    .text:00000000000001e0 .L34
     /tmp/ccyKFwZR.s:364    .text:00000000000001ec .L35
     /tmp/ccyKFwZR.s:370    .text:00000000000001f8 .L36
     /tmp/ccyKFwZR.s:376    .text:0000000000000204 .L37
     /tmp/ccyKFwZR.s:382    .text:0000000000000210 .L38
     /tmp/ccyKFwZR.s:388    .text:000000000000021c .L39
     /tmp/ccyKFwZR.s:394    .text:0000000000000228 .L40
     /tmp/ccyKFwZR.s:400    .text:0000000000000234 .L41
     /tmp/ccyKFwZR.s:289    .text:0000000000000198 .L8
     /tmp/ccyKFwZR.s:447    .text:0000000000000278 .L21
     /tmp/ccyKFwZR.s:581    .text:000000000000030c .L42
     /tmp/ccyKFwZR.s:571    .text:00000000000002fc .L23
     /tmp/ccyKFwZR.s:2380   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccyKFwZR.s:3979   .debug_str:0000000000000a70 .LASF213
     /tmp/ccyKFwZR.s:3693   .debug_str:00000000000001fa .LASF214
     /tmp/ccyKFwZR.s:3991   .debug_str:0000000000000b8c .LASF215
     /tmp/ccyKFwZR.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccyKFwZR.s:654    .text:0000000000000384 .Letext0
     /tmp/ccyKFwZR.s:3625   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccyKFwZR.s:3769   .debug_str:0000000000000405 .LASF0
     /tmp/ccyKFwZR.s:3795   .debug_str:00000000000004e0 .LASF1
     /tmp/ccyKFwZR.s:3913   .debug_str:0000000000000879 .LASF2
     /tmp/ccyKFwZR.s:3921   .debug_str:00000000000008c4 .LASF4
     /tmp/ccyKFwZR.s:3783   .debug_str:0000000000000474 .LASF3
     /tmp/ccyKFwZR.s:3637   .debug_str:0000000000000039 .LASF5
     /tmp/ccyKFwZR.s:3877   .debug_str:000000000000076e .LASF6
     /tmp/ccyKFwZR.s:3789   .debug_str:00000000000004b5 .LASF7
     /tmp/ccyKFwZR.s:3743   .debug_str:000000000000035f .LASF8
     /tmp/ccyKFwZR.s:3751   .debug_str:00000000000003a2 .LASF9
     /tmp/ccyKFwZR.s:3675   .debug_str:0000000000000180 .LASF10
     /tmp/ccyKFwZR.s:3733   .debug_str:0000000000000322 .LASF11
     /tmp/ccyKFwZR.s:3695   .debug_str:0000000000000208 .LASF12
     /tmp/ccyKFwZR.s:3673   .debug_str:0000000000000170 .LASF13
     /tmp/ccyKFwZR.s:3959   .debug_str:0000000000000a06 .LASF14
     /tmp/ccyKFwZR.s:3723   .debug_str:00000000000002cd .LASF15
     /tmp/ccyKFwZR.s:3945   .debug_str:0000000000000980 .LASF16
GAS LISTING /tmp/ccyKFwZR.s 			page 27


     /tmp/ccyKFwZR.s:3871   .debug_str:000000000000074f .LASF39
     /tmp/ccyKFwZR.s:3901   .debug_str:000000000000083c .LASF40
     /tmp/ccyKFwZR.s:3793   .debug_str:00000000000004db .LASF17
     /tmp/ccyKFwZR.s:3677   .debug_str:000000000000018f .LASF18
     /tmp/ccyKFwZR.s:3885   .debug_str:00000000000007b9 .LASF19
     /tmp/ccyKFwZR.s:3857   .debug_str:00000000000006dc .LASF20
     /tmp/ccyKFwZR.s:3765   .debug_str:00000000000003ec .LASF21
     /tmp/ccyKFwZR.s:3657   .debug_str:00000000000000ff .LASF26
     /tmp/ccyKFwZR.s:4065   .debug_str:0000000000000e31 .LASF28
     /tmp/ccyKFwZR.s:3935   .debug_str:0000000000000925 .LASF22
     /tmp/ccyKFwZR.s:4047   .debug_str:0000000000000d8d .LASF24
     /tmp/ccyKFwZR.s:3671   .debug_str:0000000000000164 .LASF23
     /tmp/ccyKFwZR.s:3953   .debug_str:00000000000009ba .LASF25
     /tmp/ccyKFwZR.s:3999   .debug_str:0000000000000bd8 .LASF27
     /tmp/ccyKFwZR.s:4063   .debug_str:0000000000000e10 .LASF29
     /tmp/ccyKFwZR.s:3631   .debug_str:000000000000001b .LASF30
     /tmp/ccyKFwZR.s:3957   .debug_str:00000000000009e6 .LASF31
     /tmp/ccyKFwZR.s:3829   .debug_str:0000000000000613 .LASF32
     /tmp/ccyKFwZR.s:3641   .debug_str:000000000000004b .LASF34
     /tmp/ccyKFwZR.s:3961   .debug_str:0000000000000a12 .LASF33
     /tmp/ccyKFwZR.s:3831   .debug_str:000000000000061d .LASF35
     /tmp/ccyKFwZR.s:4043   .debug_str:0000000000000d69 .LASF61
     /tmp/ccyKFwZR.s:3821   .debug_str:00000000000005b5 .LASF63
     /tmp/ccyKFwZR.s:3741   .debug_str:0000000000000359 .LASF36
     /tmp/ccyKFwZR.s:3865   .debug_str:000000000000071f .LASF37
     /tmp/ccyKFwZR.s:3817   .debug_str:0000000000000599 .LASF38
     /tmp/ccyKFwZR.s:3685   .debug_str:00000000000001ad .LASF41
     /tmp/ccyKFwZR.s:3971   .debug_str:0000000000000a4c .LASF114
     /tmp/ccyKFwZR.s:3833   .debug_str:000000000000063e .LASF42
     /tmp/ccyKFwZR.s:3937   .debug_str:0000000000000935 .LASF43
     /tmp/ccyKFwZR.s:3983   .debug_str:0000000000000b54 .LASF44
     /tmp/ccyKFwZR.s:3661   .debug_str:0000000000000120 .LASF45
     /tmp/ccyKFwZR.s:3881   .debug_str:000000000000079c .LASF46
     /tmp/ccyKFwZR.s:3683   .debug_str:00000000000001a4 .LASF47
     /tmp/ccyKFwZR.s:3917   .debug_str:000000000000089f .LASF48
     /tmp/ccyKFwZR.s:4051   .debug_str:0000000000000dce .LASF49
     /tmp/ccyKFwZR.s:3975   .debug_str:0000000000000a5c .LASF71
     /tmp/ccyKFwZR.s:3763   .debug_str:00000000000003e6 .LASF50
     /tmp/ccyKFwZR.s:3713   .debug_str:0000000000000296 .LASF51
     /tmp/ccyKFwZR.s:3867   .debug_str:000000000000073d .LASF216
     /tmp/ccyKFwZR.s:3633   .debug_str:0000000000000024 .LASF52
     /tmp/ccyKFwZR.s:4061   .debug_str:0000000000000e0a .LASF53
     /tmp/ccyKFwZR.s:3995   .debug_str:0000000000000bb8 .LASF54
     /tmp/ccyKFwZR.s:3989   .debug_str:0000000000000b82 .LASF55
     /tmp/ccyKFwZR.s:3785   .debug_str:0000000000000486 .LASF56
     /tmp/ccyKFwZR.s:3745   .debug_str:000000000000036f .LASF57
     /tmp/ccyKFwZR.s:3835   .debug_str:0000000000000644 .LASF58
     /tmp/ccyKFwZR.s:3907   .debug_str:0000000000000857 .LASF59
     /tmp/ccyKFwZR.s:3715   .debug_str:000000000000029c .LASF60
     /tmp/ccyKFwZR.s:3997   .debug_str:0000000000000bc0 .LASF174
     /tmp/ccyKFwZR.s:4067   .debug_str:0000000000000e4d .LASF62
     /tmp/ccyKFwZR.s:3725   .debug_str:00000000000002e3 .LASF64
     /tmp/ccyKFwZR.s:3635   .debug_str:0000000000000029 .LASF65
     /tmp/ccyKFwZR.s:3781   .debug_str:0000000000000467 .LASF66
     /tmp/ccyKFwZR.s:4033   .debug_str:0000000000000d13 .LASF67
     /tmp/ccyKFwZR.s:3853   .debug_str:00000000000006b8 .LASF68
     /tmp/ccyKFwZR.s:3701   .debug_str:0000000000000238 .LASF69
GAS LISTING /tmp/ccyKFwZR.s 			page 28


     /tmp/ccyKFwZR.s:3655   .debug_str:00000000000000d7 .LASF70
     /tmp/ccyKFwZR.s:3709   .debug_str:000000000000026c .LASF73
     /tmp/ccyKFwZR.s:3647   .debug_str:0000000000000086 .LASF75
     /tmp/ccyKFwZR.s:3931   .debug_str:00000000000008f9 .LASF72
     /tmp/ccyKFwZR.s:3663   .debug_str:0000000000000129 .LASF74
     /tmp/ccyKFwZR.s:3651   .debug_str:00000000000000b9 .LASF76
     /tmp/ccyKFwZR.s:3963   .debug_str:0000000000000a1b .LASF77
     /tmp/ccyKFwZR.s:4039   .debug_str:0000000000000d38 .LASF81
     /tmp/ccyKFwZR.s:4059   .debug_str:0000000000000e04 .LASF78
     /tmp/ccyKFwZR.s:3985   .debug_str:0000000000000b5e .LASF79
     /tmp/ccyKFwZR.s:3801   .debug_str:0000000000000513 .LASF80
     /tmp/ccyKFwZR.s:3699   .debug_str:000000000000021f .LASF82
     /tmp/ccyKFwZR.s:3887   .debug_str:00000000000007c2 .LASF83
     /tmp/ccyKFwZR.s:4023   .debug_str:0000000000000cbb .LASF84
     /tmp/ccyKFwZR.s:3665   .debug_str:0000000000000137 .LASF85
     /tmp/ccyKFwZR.s:3735   .debug_str:0000000000000331 .LASF86
     /tmp/ccyKFwZR.s:3939   .debug_str:000000000000093d .LASF87
     /tmp/ccyKFwZR.s:3941   .debug_str:0000000000000952 .LASF88
     /tmp/ccyKFwZR.s:3839   .debug_str:000000000000065d .LASF89
     /tmp/ccyKFwZR.s:4029   .debug_str:0000000000000cf5 .LASF90
     /tmp/ccyKFwZR.s:3747   .debug_str:000000000000037a .LASF91
     /tmp/ccyKFwZR.s:3855   .debug_str:00000000000006c4 .LASF92
     /tmp/ccyKFwZR.s:3863   .debug_str:000000000000070e .LASF93
     /tmp/ccyKFwZR.s:3691   .debug_str:00000000000001de .LASF94
     /tmp/ccyKFwZR.s:4057   .debug_str:0000000000000df8 .LASF95
     /tmp/ccyKFwZR.s:3649   .debug_str:0000000000000099 .LASF96
     /tmp/ccyKFwZR.s:3869   .debug_str:0000000000000742 .LASF97
     /tmp/ccyKFwZR.s:4035   .debug_str:0000000000000d18 .LASF98
     /tmp/ccyKFwZR.s:4013   .debug_str:0000000000000c65 .LASF99
     /tmp/ccyKFwZR.s:4027   .debug_str:0000000000000cdc .LASF100
     /tmp/ccyKFwZR.s:3977   .debug_str:0000000000000a64 .LASF101
     /tmp/ccyKFwZR.s:3773   .debug_str:0000000000000429 .LASF102
     /tmp/ccyKFwZR.s:3627   .debug_str:0000000000000000 .LASF103
     /tmp/ccyKFwZR.s:3731   .debug_str:0000000000000307 .LASF104
     /tmp/ccyKFwZR.s:3813   .debug_str:0000000000000586 .LASF105
     /tmp/ccyKFwZR.s:4017   .debug_str:0000000000000c78 .LASF106
     /tmp/ccyKFwZR.s:3629   .debug_str:0000000000000010 .LASF107
     /tmp/ccyKFwZR.s:3797   .debug_str:00000000000004f3 .LASF108
     /tmp/ccyKFwZR.s:3645   .debug_str:0000000000000079 .LASF109
     /tmp/ccyKFwZR.s:3807   .debug_str:000000000000054e .LASF110
     /tmp/ccyKFwZR.s:3721   .debug_str:00000000000002c0 .LASF111
     /tmp/ccyKFwZR.s:4049   .debug_str:0000000000000db6 .LASF112
     /tmp/ccyKFwZR.s:4025   .debug_str:0000000000000cd6 .LASF113
     /tmp/ccyKFwZR.s:3899   .debug_str:0000000000000831 .LASF115
     /tmp/ccyKFwZR.s:3753   .debug_str:00000000000003b0 .LASF116
     /tmp/ccyKFwZR.s:3727   .debug_str:00000000000002ef .LASF117
     /tmp/ccyKFwZR.s:4055   .debug_str:0000000000000def .LASF118
     /tmp/ccyKFwZR.s:3757   .debug_str:00000000000003c2 .LASF119
     /tmp/ccyKFwZR.s:3851   .debug_str:00000000000006a0 .LASF120
     /tmp/ccyKFwZR.s:3929   .debug_str:00000000000008eb .LASF121
     /tmp/ccyKFwZR.s:3933   .debug_str:000000000000090a .LASF122
     /tmp/ccyKFwZR.s:3775   .debug_str:0000000000000440 .LASF123
     /tmp/ccyKFwZR.s:4041   .debug_str:0000000000000d4f .LASF124
     /tmp/ccyKFwZR.s:4007   .debug_str:0000000000000c20 .LASF127
     /tmp/ccyKFwZR.s:3811   .debug_str:0000000000000571 .LASF129
     /tmp/ccyKFwZR.s:3909   .debug_str:0000000000000865 .LASF125
     /tmp/ccyKFwZR.s:3861   .debug_str:00000000000006f9 .LASF126
GAS LISTING /tmp/ccyKFwZR.s 			page 29


     /tmp/ccyKFwZR.s:3891   .debug_str:00000000000007eb .LASF128
     /tmp/ccyKFwZR.s:3895   .debug_str:000000000000080a .LASF130
     /tmp/ccyKFwZR.s:3849   .debug_str:0000000000000699 .LASF131
     /tmp/ccyKFwZR.s:3791   .debug_str:00000000000004c8 .LASF132
     /tmp/ccyKFwZR.s:3841   .debug_str:0000000000000668 .LASF133
     /tmp/ccyKFwZR.s:3987   .debug_str:0000000000000b6e .LASF134
     /tmp/ccyKFwZR.s:3843   .debug_str:0000000000000670 .LASF135
     /tmp/ccyKFwZR.s:3859   .debug_str:00000000000006e5 .LASF136
     /tmp/ccyKFwZR.s:3805   .debug_str:0000000000000546 .LASF137
     /tmp/ccyKFwZR.s:3897   .debug_str:000000000000081d .LASF138
     /tmp/ccyKFwZR.s:4069   .debug_str:0000000000000e5a .LASF139
     /tmp/ccyKFwZR.s:3779   .debug_str:0000000000000453 .LASF140
     /tmp/ccyKFwZR.s:3955   .debug_str:00000000000009df .LASF141
     /tmp/ccyKFwZR.s:3925   .debug_str:00000000000008d1 .LASF142
     /tmp/ccyKFwZR.s:3927   .debug_str:00000000000008e4 .LASF143
     /tmp/ccyKFwZR.s:3719   .debug_str:00000000000002ad .LASF144
     /tmp/ccyKFwZR.s:3923   .debug_str:00000000000008cb .LASF145
     /tmp/ccyKFwZR.s:3761   .debug_str:00000000000003d4 .LASF146
     /tmp/ccyKFwZR.s:3777   .debug_str:000000000000044d .LASF147
     /tmp/ccyKFwZR.s:3705   .debug_str:0000000000000250 .LASF148
     /tmp/ccyKFwZR.s:3639   .debug_str:0000000000000040 .LASF149
     /tmp/ccyKFwZR.s:3915   .debug_str:0000000000000887 .LASF150
     /tmp/ccyKFwZR.s:3911   .debug_str:000000000000086e .LASF151
     /tmp/ccyKFwZR.s:3893   .debug_str:00000000000007f2 .LASF152
     /tmp/ccyKFwZR.s:3973   .debug_str:0000000000000a52 .LASF153
     /tmp/ccyKFwZR.s:4053   .debug_str:0000000000000dd9 .LASF154
     /tmp/ccyKFwZR.s:3681   .debug_str:000000000000019a .LASF155
     /tmp/ccyKFwZR.s:3827   .debug_str:00000000000005fd .LASF156
     /tmp/ccyKFwZR.s:4005   .debug_str:0000000000000c11 .LASF157
     /tmp/ccyKFwZR.s:3749   .debug_str:0000000000000386 .LASF158
     /tmp/ccyKFwZR.s:3667   .debug_str:0000000000000147 .LASF159
     /tmp/ccyKFwZR.s:3967   .debug_str:0000000000000a2b .LASF160
     /tmp/ccyKFwZR.s:3883   .debug_str:00000000000007a4 .LASF161
     /tmp/ccyKFwZR.s:3787   .debug_str:0000000000000493 .LASF162
     /tmp/ccyKFwZR.s:3825   .debug_str:00000000000005ed .LASF217
     /tmp/ccyKFwZR.s:4021   .debug_str:0000000000000c9d .LASF218
     /tmp/ccyKFwZR.s:3943   .debug_str:0000000000000972 .LASF163
     /tmp/ccyKFwZR.s:3737   .debug_str:000000000000034d .LASF164
     /tmp/ccyKFwZR.s:3951   .debug_str:00000000000009b5 .LASF165
     /tmp/ccyKFwZR.s:3845   .debug_str:0000000000000678 .LASF166
     /tmp/ccyKFwZR.s:3729   .debug_str:00000000000002f8 .LASF167
     /tmp/ccyKFwZR.s:4019   .debug_str:0000000000000c8f .LASF168
     /tmp/ccyKFwZR.s:3799   .debug_str:0000000000000509 .LASF169
     /tmp/ccyKFwZR.s:3703   .debug_str:0000000000000246 .LASF170
     /tmp/ccyKFwZR.s:3771   .debug_str:0000000000000412 .LASF171
     /tmp/ccyKFwZR.s:3669   .debug_str:0000000000000155 .LASF172
     /tmp/ccyKFwZR.s:3819   .debug_str:000000000000059e .LASF173
     /tmp/ccyKFwZR.s:3823   .debug_str:00000000000005d4 .LASF219
     /tmp/ccyKFwZR.s:3889   .debug_str:00000000000007d2 .LASF175
     /tmp/ccyKFwZR.s:3903   .debug_str:0000000000000845 .LASF176
     /tmp/ccyKFwZR.s:3847   .debug_str:000000000000067d .LASF177
     /tmp/ccyKFwZR.s:3965   .debug_str:0000000000000a26 .LASF178
     /tmp/ccyKFwZR.s:3949   .debug_str:00000000000009a5 .LASF220
     /tmp/ccyKFwZR.s:4009   .debug_str:0000000000000c29 .LASF179
     /tmp/ccyKFwZR.s:3873   .debug_str:000000000000075f .LASF181
     /tmp/ccyKFwZR.s:3711   .debug_str:0000000000000275 .LASF180
     /tmp/ccyKFwZR.s:3707   .debug_str:0000000000000262 .LASF182
GAS LISTING /tmp/ccyKFwZR.s 			page 30


     /tmp/ccyKFwZR.s:3981   .debug_str:0000000000000b34 .LASF183
     /tmp/ccyKFwZR.s:3755   .debug_str:00000000000003b9 .LASF184
     /tmp/ccyKFwZR.s:4003   .debug_str:0000000000000bee .LASF185
     /tmp/ccyKFwZR.s:3905   .debug_str:000000000000084c .LASF186
     /tmp/ccyKFwZR.s:3837   .debug_str:000000000000064f .LASF187
     /tmp/ccyKFwZR.s:4001   .debug_str:0000000000000be2 .LASF188
     /tmp/ccyKFwZR.s:3643   .debug_str:000000000000006c .LASF189
     /tmp/ccyKFwZR.s:3919   .debug_str:00000000000008aa .LASF190
     /tmp/ccyKFwZR.s:3875   .debug_str:0000000000000768 .LASF191
     /tmp/ccyKFwZR.s:3717   .debug_str:00000000000002a5 .LASF192
     /tmp/ccyKFwZR.s:3759   .debug_str:00000000000003cd .LASF193
     /tmp/ccyKFwZR.s:3659   .debug_str:0000000000000104 .LASF194
     /tmp/ccyKFwZR.s:3815   .debug_str:0000000000000592 .LASF195
     /tmp/ccyKFwZR.s:4011   .debug_str:0000000000000c49 .LASF196
     /tmp/ccyKFwZR.s:3969   .debug_str:0000000000000a46 .LASF197
     /tmp/ccyKFwZR.s:3879   .debug_str:0000000000000781 .LASF198
     /tmp/ccyKFwZR.s:3679   .debug_str:0000000000000194 .LASF199
     /tmp/ccyKFwZR.s:3689   .debug_str:00000000000001c3 .LASF200
     /tmp/ccyKFwZR.s:3947   .debug_str:0000000000000996 .LASF201
     /tmp/ccyKFwZR.s:3803   .debug_str:0000000000000520 .LASF202
     /tmp/ccyKFwZR.s:4031   .debug_str:0000000000000d0c .LASF203
     /tmp/ccyKFwZR.s:4045   .debug_str:0000000000000d71 .LASF204
     /tmp/ccyKFwZR.s:627    .text:000000000000035c .LFB48
     /tmp/ccyKFwZR.s:652    .text:0000000000000384 .LFE48
     /tmp/ccyKFwZR.s:641    .text:0000000000000374 .LVL37
     /tmp/ccyKFwZR.s:46     .text:0000000000000020 .LFB47
     /tmp/ccyKFwZR.s:621    .text:000000000000035c .LFE47
     /tmp/ccyKFwZR.s:3697   .debug_str:0000000000000218 .LASF205
     /tmp/ccyKFwZR.s:3611   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccyKFwZR.s:4015   .debug_str:0000000000000c73 .LASF206
     /tmp/ccyKFwZR.s:4037   .debug_str:0000000000000d30 .LASF207
     /tmp/ccyKFwZR.s:153    .text:00000000000000bc .LBB66
     /tmp/ccyKFwZR.s:168    .text:00000000000000c8 .LBE66
     /tmp/ccyKFwZR.s:174    .text:00000000000000d0 .LBB68
     /tmp/ccyKFwZR.s:189    .text:00000000000000dc .LBE68
     /tmp/ccyKFwZR.s:294    .text:000000000000019c .LBB70
     /tmp/ccyKFwZR.s:305    .text:00000000000001a0 .LBE70
     /tmp/ccyKFwZR.s:3536   .debug_loc:0000000000000000 .LLST6
     /tmp/ccyKFwZR.s:310    .text:00000000000001a4 .LBB72
     /tmp/ccyKFwZR.s:322    .text:00000000000001a8 .LBE72
     /tmp/ccyKFwZR.s:3543   .debug_loc:0000000000000023 .LLST7
     /tmp/ccyKFwZR.s:282    .text:000000000000018c .LVL0
     /tmp/ccyKFwZR.s:288    .text:0000000000000198 .LVL1
     /tmp/ccyKFwZR.s:344    .text:00000000000001c4 .LVL6
     /tmp/ccyKFwZR.s:350    .text:00000000000001d0 .LVL7
     /tmp/ccyKFwZR.s:356    .text:00000000000001dc .LVL8
     /tmp/ccyKFwZR.s:362    .text:00000000000001e8 .LVL9
     /tmp/ccyKFwZR.s:368    .text:00000000000001f4 .LVL10
     /tmp/ccyKFwZR.s:374    .text:0000000000000200 .LVL11
     /tmp/ccyKFwZR.s:380    .text:000000000000020c .LVL12
     /tmp/ccyKFwZR.s:386    .text:0000000000000218 .LVL13
     /tmp/ccyKFwZR.s:392    .text:0000000000000224 .LVL14
     /tmp/ccyKFwZR.s:398    .text:0000000000000230 .LVL15
     /tmp/ccyKFwZR.s:404    .text:000000000000023c .LVL16
     /tmp/ccyKFwZR.s:473    .text:00000000000002a0 .LBB54
     /tmp/ccyKFwZR.s:555    .text:00000000000002e8 .LBE54
     /tmp/ccyKFwZR.s:475    .text:00000000000002a0 .LBB55
GAS LISTING /tmp/ccyKFwZR.s 			page 31


     /tmp/ccyKFwZR.s:490    .text:00000000000002ac .LBE55
     /tmp/ccyKFwZR.s:494    .text:00000000000002b0 .LBB57
     /tmp/ccyKFwZR.s:509    .text:00000000000002bc .LBE57
     /tmp/ccyKFwZR.s:524    .text:00000000000002d8 .LBB59
     /tmp/ccyKFwZR.s:535    .text:00000000000002dc .LBE59
     /tmp/ccyKFwZR.s:3550   .debug_loc:0000000000000046 .LLST4
     /tmp/ccyKFwZR.s:540    .text:00000000000002e0 .LBB61
     /tmp/ccyKFwZR.s:554    .text:00000000000002e8 .LBE61
     /tmp/ccyKFwZR.s:3557   .debug_loc:0000000000000069 .LLST5
     /tmp/ccyKFwZR.s:519    .text:00000000000002d4 .LVL22
     /tmp/ccyKFwZR.s:3564   .debug_loc:000000000000008c .LLST0
     /tmp/ccyKFwZR.s:591    .text:0000000000000324 .LBB43
     /tmp/ccyKFwZR.s:606    .text:0000000000000348 .LBE43
     /tmp/ccyKFwZR.s:3575   .debug_loc:00000000000000c2 .LLST1
     /tmp/ccyKFwZR.s:605    .text:0000000000000348 .LVL35
     /tmp/ccyKFwZR.s:563    .text:00000000000002f0 .LVL27
     /tmp/ccyKFwZR.s:577    .text:0000000000000308 .LVL30
     /tmp/ccyKFwZR.s:80     .text:0000000000000058 .LBB36
     /tmp/ccyKFwZR.s:96     .text:0000000000000064 .LBE36
     /tmp/ccyKFwZR.s:412    .text:0000000000000240 .LBB47
     /tmp/ccyKFwZR.s:424    .text:0000000000000248 .LBE47
     /tmp/ccyKFwZR.s:3583   .debug_loc:00000000000000e6 .LLST2
     /tmp/ccyKFwZR.s:432    .text:000000000000025c .LBB49
     /tmp/ccyKFwZR.s:449    .text:0000000000000278 .LBE49
     /tmp/ccyKFwZR.s:460    .text:000000000000028c .LBB52
     /tmp/ccyKFwZR.s:467    .text:0000000000000290 .LBE52
     /tmp/ccyKFwZR.s:3591   .debug_loc:000000000000010a .LLST3
     /tmp/ccyKFwZR.s:453    .text:0000000000000280 .LVL19
     /tmp/ccyKFwZR.s:615    .text:0000000000000358 .LVL36
     /tmp/ccyKFwZR.s:10     .text:0000000000000000 .LFB46
     /tmp/ccyKFwZR.s:40     .text:0000000000000020 .LFE46
     /tmp/ccyKFwZR.s:3653   .debug_str:00000000000000d2 .LASF208
     /tmp/ccyKFwZR.s:3739   .debug_str:0000000000000354 .LASF221
     /tmp/ccyKFwZR.s:3767   .debug_str:00000000000003f8 .LASF209
     /tmp/ccyKFwZR.s:3993   .debug_str:0000000000000baf .LASF210
     /tmp/ccyKFwZR.s:3809   .debug_str:0000000000000566 .LASF211
     /tmp/ccyKFwZR.s:3687   .debug_str:00000000000001b5 .LASF212
     /tmp/ccyKFwZR.s:293    .text:000000000000019c .LVL2
     /tmp/ccyKFwZR.s:302    .text:00000000000001a0 .LVL3
     /tmp/ccyKFwZR.s:309    .text:00000000000001a4 .LVL4
     /tmp/ccyKFwZR.s:318    .text:00000000000001a8 .LVL5
     /tmp/ccyKFwZR.s:523    .text:00000000000002d8 .LVL23
     /tmp/ccyKFwZR.s:532    .text:00000000000002dc .LVL24
     /tmp/ccyKFwZR.s:539    .text:00000000000002e0 .LVL25
     /tmp/ccyKFwZR.s:551    .text:00000000000002e8 .LVL26
     /tmp/ccyKFwZR.s:565    .text:00000000000002f4 .LVL28
     /tmp/ccyKFwZR.s:570    .text:00000000000002fc .LVL29
     /tmp/ccyKFwZR.s:580    .text:000000000000030c .LVL31
     /tmp/ccyKFwZR.s:603    .text:0000000000000340 .LVL34
     /tmp/ccyKFwZR.s:596    .text:0000000000000330 .LVL32
     /tmp/ccyKFwZR.s:601    .text:000000000000033c .LVL33
     /tmp/ccyKFwZR.s:411    .text:0000000000000240 .LVL17
     /tmp/ccyKFwZR.s:421    .text:0000000000000248 .LVL18
     /tmp/ccyKFwZR.s:459    .text:000000000000028c .LVL20
     /tmp/ccyKFwZR.s:465    .text:0000000000000290 .LVL21
     /tmp/ccyKFwZR.s:664    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccyKFwZR.s:559    .text:00000000000002e8 .LBB41
GAS LISTING /tmp/ccyKFwZR.s 			page 32


     /tmp/ccyKFwZR.s:578    .text:0000000000000308 .LBE41
     /tmp/ccyKFwZR.s:582    .text:000000000000030c .LBB45
     /tmp/ccyKFwZR.s:610    .text:000000000000034c .LBE45
     /tmp/ccyKFwZR.s:151    .text:00000000000000bc .LBB65
     /tmp/ccyKFwZR.s:323    .text:00000000000001a8 .LBE65
     /tmp/ccyKFwZR.s:340    .text:00000000000001bc .LBB74
     /tmp/ccyKFwZR.s:407    .text:0000000000000240 .LBE74

UNDEFINED SYMBOLS
_ZN3PCB5regA4E
_ZN3PCB7runningE
_ZN13KernelConsole5putcHEv
_ZN15MemoryAllocator9memAllocHEv
_ZN15MemoryAllocator8memFreeHEv
_ZN3PCB13threadCreateHEv
_ZN3PCB11threadExitHEv
_ZN3PCB15threadDispatchHEv
_ZN3PCB11threadJoinHEv
_ZN15KernelSemaphore8semOpenHEv
_ZN15KernelSemaphore9semCloseHEv
_ZN15KernelSemaphore8semWaitHEv
_ZN15KernelSemaphore10semSignalHEv
_ZN3PCB10timeSleepHEv
_ZN13KernelConsole5getcHEv
_ZN3PCB16timeSliceCounterE
_ZN3PCB10sleepyHeadE
_ZN3PCB12removeSleepyEv
_ZN3PCB8dispatchEv
plic_claim
plic_complete
CONSOLE_STATUS
CONSOLE_RX_DATA
_ZN13KernelConsole11inputBufferE
_ZN13ConsoleBuffer3putEc
__putc
_Z8userMainv
