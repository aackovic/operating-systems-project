GAS LISTING /tmp/ccgrUU0r.s 			page 1


   1              		.file	"PCB.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN3PCB13threadWrapperEv
   9              	_ZN3PCB13threadWrapperEv:
  10              	.LFB46:
  11              		.file 1 "src/PCB.cpp"
   1:src/PCB.cpp   **** //
   2:src/PCB.cpp   **** // Created by os on 5/16/23.
   3:src/PCB.cpp   **** //
   4:src/PCB.cpp   **** 
   5:src/PCB.cpp   **** #include "../h/PCB.hpp"
   6:src/PCB.cpp   **** #include "../h/Riscv.hpp"
   7:src/PCB.cpp   **** #include "../h/KernelSemaphore.hpp"
   8:src/PCB.cpp   **** #include "../h/syscall_c.hpp"
   9:src/PCB.cpp   **** 
  10:src/PCB.cpp   **** uint64 PCB::timeSliceCounter=0;
  11:src/PCB.cpp   **** PCB *PCB::running = nullptr;
  12:src/PCB.cpp   **** PCB *PCB::sleepyHead = nullptr;
  13:src/PCB.cpp   **** uint64 PCB::regA4=0;
  14:src/PCB.cpp   **** 
  15:src/PCB.cpp   **** void PCB::dispatch() {
  16:src/PCB.cpp   ****     PCB* old = running;
  17:src/PCB.cpp   ****     if(!old->isFinished() && !old->isSleeping()&&!old->isSuspended()){
  18:src/PCB.cpp   ****         Scheduler::put(old);
  19:src/PCB.cpp   ****     }
  20:src/PCB.cpp   ****     running = Scheduler::get();
  21:src/PCB.cpp   ****     if(!running)
  22:src/PCB.cpp   ****         return;
  23:src/PCB.cpp   ****     running->state=RUNNING;
  24:src/PCB.cpp   ****     //running->changeRegime();
  25:src/PCB.cpp   ****     PCB::contextSwitch(&old->context,&running->context);
  26:src/PCB.cpp   **** }
  27:src/PCB.cpp   **** 
  28:src/PCB.cpp   **** void PCB::threadWrapper() {
  12              		.loc 1 28 27
  13              		.cfi_startproc
  14 0000 130101FE 		addi	sp,sp,-32
  15              		.cfi_def_cfa_offset 32
  16 0004 233C1100 		sd	ra,24(sp)
  17 0008 23388100 		sd	s0,16(sp)
  18 000c 23349100 		sd	s1,8(sp)
  19              		.cfi_offset 1, -8
  20              		.cfi_offset 8, -16
  21              		.cfi_offset 9, -24
  22 0010 13040102 		addi	s0,sp,32
  23              		.cfi_def_cfa 8, 0
  29:src/PCB.cpp   ****     Riscv::popSppSpie();
  24              		.loc 1 29 5
  25              		.loc 1 29 22 is_stmt 0
  26 0014 97000000 		call	_ZN5Riscv10popSppSpieEv@plt
  26      E7800000 
  27              	.LVL0:
  30:src/PCB.cpp   ****     running->body(running->arg);
GAS LISTING /tmp/ccgrUU0r.s 			page 2


  28              		.loc 1 30 5 is_stmt 1
  29              		.loc 1 30 14 is_stmt 0
  30 001c 97040000 		lla	s1,.LANCHOR0
  30      93840400 
  31 0024 83B70400 		ld	a5,0(s1)
  32 0028 03B78700 		ld	a4,8(a5)
  33              		.loc 1 30 18
  34 002c 03B50703 		ld	a0,48(a5)
  35 0030 E7000700 		jalr	a4
  36              	.LVL1:
  31:src/PCB.cpp   ****     timeSliceCounter=0;
  37              		.loc 1 31 5 is_stmt 1
  38              		.loc 1 31 21 is_stmt 0
  39 0034 23B40400 		sd	zero,8(s1)
  32:src/PCB.cpp   ****     running->changeState(FINISHED);
  40              		.loc 1 32 5 is_stmt 1
  41              		.loc 1 32 25 is_stmt 0
  42 0038 83B70400 		ld	a5,0(s1)
  43              	.LVL2:
  44              	.LBB50:
  45              	.LBB51:
  46              		.file 2 "src/../h/PCB.hpp"
   1:src/../h/PCB.hpp **** //
   2:src/../h/PCB.hpp **** // Created by os on 5/16/23.
   3:src/../h/PCB.hpp **** //
   4:src/../h/PCB.hpp **** 
   5:src/../h/PCB.hpp **** #ifndef PROJECT_BASE_V1_1_PCB_HPP
   6:src/../h/PCB.hpp **** #define PROJECT_BASE_V1_1_PCB_HPP
   7:src/../h/PCB.hpp **** 
   8:src/../h/PCB.hpp **** #include "../lib/hw.h"
   9:src/../h/PCB.hpp **** #include "Scheduler.hpp"
  10:src/../h/PCB.hpp **** 
  11:src/../h/PCB.hpp **** class PCB {
  12:src/../h/PCB.hpp **** private:
  13:src/../h/PCB.hpp ****     //constants
  14:src/../h/PCB.hpp ****     static uint64 constexpr STACK_SIZE = 1024;
  15:src/../h/PCB.hpp ****     static uint64 constexpr TIME_SLICE = 2;
  16:src/../h/PCB.hpp ****     //struct
  17:src/../h/PCB.hpp ****     struct Context{
  18:src/../h/PCB.hpp ****         uint64 ra;
  19:src/../h/PCB.hpp ****         uint64 sp;
  20:src/../h/PCB.hpp ****     };
  21:src/../h/PCB.hpp **** public:
  22:src/../h/PCB.hpp ****     ///change?
  23:src/../h/PCB.hpp ****     enum State{
  24:src/../h/PCB.hpp ****         READY, RUNNING, SUSPENDED, FINISHED, EXITING, SLEEPING
  25:src/../h/PCB.hpp ****     };
  26:src/../h/PCB.hpp **** 
  27:src/../h/PCB.hpp ****     using Body = void(*)(void *);
  28:src/../h/PCB.hpp ****     static PCB* running;
  29:src/../h/PCB.hpp **** private:
  30:src/../h/PCB.hpp ****     //saving regA4 because interpreter uses it
  31:src/../h/PCB.hpp ****     static uint64 regA4;
  32:src/../h/PCB.hpp **** 
  33:src/../h/PCB.hpp ****     ///change?
  34:src/../h/PCB.hpp ****     bool rcs=0;
  35:src/../h/PCB.hpp **** 
GAS LISTING /tmp/ccgrUU0r.s 			page 3


  36:src/../h/PCB.hpp ****     //pcb variables
  37:src/../h/PCB.hpp ****     State state;
  38:src/../h/PCB.hpp ****     Body body;
  39:src/../h/PCB.hpp ****     void* stack;
  40:src/../h/PCB.hpp ****     Context context;
  41:src/../h/PCB.hpp ****     uint64 timeSlice;
  42:src/../h/PCB.hpp ****     void * arg;
  43:src/../h/PCB.hpp ****     uint64 sleepingTime=0;
  44:src/../h/PCB.hpp **** 
  45:src/../h/PCB.hpp ****     //sleepyThread
  46:src/../h/PCB.hpp ****     static PCB* sleepyHead;
  47:src/../h/PCB.hpp ****     PCB* nextSleepy = nullptr;
  48:src/../h/PCB.hpp **** 
  49:src/../h/PCB.hpp ****     //variable for regime change
  50:src/../h/PCB.hpp ****     bool mainOrConsole=false;
  51:src/../h/PCB.hpp **** 
  52:src/../h/PCB.hpp ****     ///change?
  53:src/../h/PCB.hpp ****     uint64 sscratch;
  54:src/../h/PCB.hpp **** public:
  55:src/../h/PCB.hpp ****     explicit PCB(Body body, void* arg, void* stack, uint64 timeSlice):
  56:src/../h/PCB.hpp ****         state(READY),
  57:src/../h/PCB.hpp ****         body(body),
  58:src/../h/PCB.hpp ****         stack(stack),
  59:src/../h/PCB.hpp ****         context({
  60:src/../h/PCB.hpp ****             (uint64) &threadWrapper,
  61:src/../h/PCB.hpp ****             (uint64) ((char *) stack + DEFAULT_STACK_SIZE)
  62:src/../h/PCB.hpp ****         }),
  63:src/../h/PCB.hpp ****         timeSlice(timeSlice),
  64:src/../h/PCB.hpp ****         arg(arg)
  65:src/../h/PCB.hpp ****     {}
  66:src/../h/PCB.hpp **** 
  67:src/../h/PCB.hpp ****     void* operator new (size_t);
  68:src/../h/PCB.hpp ****     void operator delete (void*);
  69:src/../h/PCB.hpp **** 
  70:src/../h/PCB.hpp ****     ~PCB();
  71:src/../h/PCB.hpp ****     static void contextSwitch(Context* oldContext, Context* runningContext);
  72:src/../h/PCB.hpp ****     static void dispatch();
  73:src/../h/PCB.hpp **** 
  74:src/../h/PCB.hpp ****     static uint64 timeSliceCounter;
  75:src/../h/PCB.hpp **** 
  76:src/../h/PCB.hpp ****     //wrapper
  77:src/../h/PCB.hpp ****     static void threadWrapper();
  78:src/../h/PCB.hpp **** 
  79:src/../h/PCB.hpp ****     //getters setters etc.
  80:src/../h/PCB.hpp ****     bool isFinished() const { return state==FINISHED;}
  81:src/../h/PCB.hpp ****     void start() { Scheduler::put(this);}
  82:src/../h/PCB.hpp ****     uint64 getTimeSlice() const { return timeSlice;}
  83:src/../h/PCB.hpp ****     void setSleepingTime(uint64 t) { sleepingTime=t;}
  84:src/../h/PCB.hpp ****     uint64  getSleepingTime() const {return sleepingTime;}
  85:src/../h/PCB.hpp ****     static void decreaseSleepingTime() {if(sleepyHead) sleepyHead->sleepingTime--;}
  86:src/../h/PCB.hpp ****     bool isSleeping() const { return state==SLEEPING;}
  87:src/../h/PCB.hpp ****     bool isSuspended() const {return state==SUSPENDED;}
  88:src/../h/PCB.hpp ****     void setMainOrConsole(bool mc) { mainOrConsole=mc;}
  89:src/../h/PCB.hpp ****     void changeState(State s) { state=s;}
  47              		.loc 2 89 33 is_stmt 1
  48              		.loc 2 89 38 is_stmt 0
  49 003c 13073000 		li	a4,3
GAS LISTING /tmp/ccgrUU0r.s 			page 4


  50 0040 23A2E700 		sw	a4,4(a5)
  51              	.LVL3:
  52              	.LBE51:
  53              	.LBE50:
  33:src/PCB.cpp   ****     thread_exit();
  54              		.loc 1 33 5 is_stmt 1
  55              		.loc 1 33 16 is_stmt 0
  56 0044 97000000 		call	_Z11thread_exitv@plt
  56      E7800000 
  57              	.LVL4:
  34:src/PCB.cpp   **** }
  58              		.loc 1 34 1
  59 004c 83308101 		ld	ra,24(sp)
  60              		.cfi_restore 1
  61 0050 03340101 		ld	s0,16(sp)
  62              		.cfi_restore 8
  63              		.cfi_def_cfa 2, 32
  64 0054 83348100 		ld	s1,8(sp)
  65              		.cfi_restore 9
  66 0058 13010102 		addi	sp,sp,32
  67              		.cfi_def_cfa_offset 0
  68 005c 67800000 		jr	ra
  69              		.cfi_endproc
  70              	.LFE46:
  72              		.align	2
  73              		.globl	_ZN3PCB8dispatchEv
  75              	_ZN3PCB8dispatchEv:
  76              	.LFB45:
  15:src/PCB.cpp   ****     PCB* old = running;
  77              		.loc 1 15 22 is_stmt 1
  78              		.cfi_startproc
  79 0060 130101FE 		addi	sp,sp,-32
  80              		.cfi_def_cfa_offset 32
  81 0064 233C1100 		sd	ra,24(sp)
  82 0068 23388100 		sd	s0,16(sp)
  83 006c 23349100 		sd	s1,8(sp)
  84              		.cfi_offset 1, -8
  85              		.cfi_offset 8, -16
  86              		.cfi_offset 9, -24
  87 0070 13040102 		addi	s0,sp,32
  88              		.cfi_def_cfa 8, 0
  16:src/PCB.cpp   ****     if(!old->isFinished() && !old->isSleeping()&&!old->isSuspended()){
  89              		.loc 1 16 5
  16:src/PCB.cpp   ****     if(!old->isFinished() && !old->isSleeping()&&!old->isSuspended()){
  90              		.loc 1 16 10 is_stmt 0
  91 0074 97040000 		ld	s1,.LANCHOR0
  91      83B40400 
  92              	.LVL5:
  17:src/PCB.cpp   ****         Scheduler::put(old);
  93              		.loc 1 17 5 is_stmt 1
  94              	.LBB52:
  95              	.LBB53:
  80:src/../h/PCB.hpp ****     void start() { Scheduler::put(this);}
  96              		.loc 2 80 31
  80:src/../h/PCB.hpp ****     void start() { Scheduler::put(this);}
  97              		.loc 2 80 38 is_stmt 0
  98 007c 83A74400 		lw	a5,4(s1)
GAS LISTING /tmp/ccgrUU0r.s 			page 5


  99              	.LVL6:
 100              	.LBE53:
 101              	.LBE52:
  17:src/PCB.cpp   ****         Scheduler::put(old);
 102              		.loc 1 17 48
 103 0080 13073000 		li	a4,3
 104 0084 638AE700 		beq	a5,a4,.L4
 105              	.LVL7:
  86:src/../h/PCB.hpp ****     bool isSuspended() const {return state==SUSPENDED;}
 106              		.loc 2 86 31 is_stmt 1
  17:src/PCB.cpp   ****         Scheduler::put(old);
 107              		.loc 1 17 27 is_stmt 0
 108 0088 13075000 		li	a4,5
 109 008c 6386E700 		beq	a5,a4,.L4
 110              	.LVL8:
  87:src/../h/PCB.hpp ****     void setMainOrConsole(bool mc) { mainOrConsole=mc;}
 111              		.loc 2 87 31 is_stmt 1
  17:src/PCB.cpp   ****         Scheduler::put(old);
 112              		.loc 1 17 48 is_stmt 0
 113 0090 13072000 		li	a4,2
 114 0094 6396E704 		bne	a5,a4,.L7
 115              	.L4:
  20:src/PCB.cpp   ****     if(!running)
 116              		.loc 1 20 5 is_stmt 1
  20:src/PCB.cpp   ****     if(!running)
 117              		.loc 1 20 29 is_stmt 0
 118 0098 97000000 		call	_ZN9Scheduler3getEv@plt
 118      E7800000 
 119              	.LVL9:
  20:src/PCB.cpp   ****     if(!running)
 120              		.loc 1 20 13
 121 00a0 97070000 		sd	a0,.LANCHOR0,a5
 121      23B0A700 
  21:src/PCB.cpp   ****         return;
 122              		.loc 1 21 5 is_stmt 1
 123 00a8 63020502 		beqz	a0,.L3
  23:src/PCB.cpp   ****     //running->changeRegime();
 124              		.loc 1 23 5
  23:src/PCB.cpp   ****     //running->changeRegime();
 125              		.loc 1 23 19 is_stmt 0
 126 00ac 93071000 		li	a5,1
 127 00b0 2322F500 		sw	a5,4(a0)
  25:src/PCB.cpp   **** }
 128              		.loc 1 25 5 is_stmt 1
  25:src/PCB.cpp   **** }
 129              		.loc 1 25 23 is_stmt 0
 130 00b4 97050000 		ld	a1,.LANCHOR0
 130      83B50500 
 131 00bc 93858501 		addi	a1,a1,24
 132 00c0 13858401 		addi	a0,s1,24
 133 00c4 97000000 		call	_ZN3PCB13contextSwitchEPNS_7ContextES1_@plt
 133      E7800000 
 134              	.LVL10:
 135              	.L3:
  26:src/PCB.cpp   **** 
 136              		.loc 1 26 1
 137 00cc 83308101 		ld	ra,24(sp)
GAS LISTING /tmp/ccgrUU0r.s 			page 6


 138              		.cfi_remember_state
 139              		.cfi_restore 1
 140 00d0 03340101 		ld	s0,16(sp)
 141              		.cfi_restore 8
 142              		.cfi_def_cfa 2, 32
 143 00d4 83348100 		ld	s1,8(sp)
 144              		.cfi_restore 9
 145              	.LVL11:
 146 00d8 13010102 		addi	sp,sp,32
 147              		.cfi_def_cfa_offset 0
 148 00dc 67800000 		jr	ra
 149              	.LVL12:
 150              	.L7:
 151              		.cfi_restore_state
  18:src/PCB.cpp   ****     }
 152              		.loc 1 18 9 is_stmt 1
  18:src/PCB.cpp   ****     }
 153              		.loc 1 18 23 is_stmt 0
 154 00e0 13850400 		mv	a0,s1
 155 00e4 97000000 		call	_ZN9Scheduler3putEP3PCB@plt
 155      E7800000 
 156              	.LVL13:
 157 00ec 6FF0DFFA 		j	.L4
 158              		.cfi_endproc
 159              	.LFE45:
 161              		.align	2
 162              		.globl	_ZN3PCBnwEm
 164              	_ZN3PCBnwEm:
 165              	.LFB47:
  35:src/PCB.cpp   **** 
  36:src/PCB.cpp   **** void *PCB::operator new(size_t size) {
 166              		.loc 1 36 38 is_stmt 1
 167              		.cfi_startproc
 168              	.LVL14:
 169 00f0 130101FF 		addi	sp,sp,-16
 170              		.cfi_def_cfa_offset 16
 171 00f4 23341100 		sd	ra,8(sp)
 172 00f8 23308100 		sd	s0,0(sp)
 173              		.cfi_offset 1, -8
 174              		.cfi_offset 8, -16
 175 00fc 13040101 		addi	s0,sp,16
 176              		.cfi_def_cfa 8, 0
  37:src/PCB.cpp   ****     return MemoryAllocator::kmalloc(size);
 177              		.loc 1 37 5
 178              		.loc 1 37 36 is_stmt 0
 179 0100 97000000 		call	_ZN15MemoryAllocator7kmallocEm@plt
 179      E7800000 
 180              	.LVL15:
  38:src/PCB.cpp   **** }
 181              		.loc 1 38 1
 182 0108 83308100 		ld	ra,8(sp)
 183              		.cfi_restore 1
 184 010c 03340100 		ld	s0,0(sp)
 185              		.cfi_restore 8
 186              		.cfi_def_cfa 2, 16
 187 0110 13010101 		addi	sp,sp,16
 188              		.cfi_def_cfa_offset 0
GAS LISTING /tmp/ccgrUU0r.s 			page 7


 189 0114 67800000 		jr	ra
 190              		.cfi_endproc
 191              	.LFE47:
 193              		.align	2
 194              		.globl	_ZN3PCBdlEPv
 196              	_ZN3PCBdlEPv:
 197              	.LFB48:
  39:src/PCB.cpp   **** 
  40:src/PCB.cpp   **** void PCB::operator delete(void * ptr) {
 198              		.loc 1 40 39 is_stmt 1
 199              		.cfi_startproc
 200              	.LVL16:
 201 0118 130101FF 		addi	sp,sp,-16
 202              		.cfi_def_cfa_offset 16
 203 011c 23341100 		sd	ra,8(sp)
 204 0120 23308100 		sd	s0,0(sp)
 205              		.cfi_offset 1, -8
 206              		.cfi_offset 8, -16
 207 0124 13040101 		addi	s0,sp,16
 208              		.cfi_def_cfa 8, 0
  41:src/PCB.cpp   ****     MemoryAllocator::kfree(ptr);
 209              		.loc 1 41 5
 210              		.loc 1 41 27 is_stmt 0
 211 0128 97000000 		call	_ZN15MemoryAllocator5kfreeEPv@plt
 211      E7800000 
 212              	.LVL17:
  42:src/PCB.cpp   **** }
 213              		.loc 1 42 1
 214 0130 83308100 		ld	ra,8(sp)
 215              		.cfi_restore 1
 216 0134 03340100 		ld	s0,0(sp)
 217              		.cfi_restore 8
 218              		.cfi_def_cfa 2, 16
 219 0138 13010101 		addi	sp,sp,16
 220              		.cfi_def_cfa_offset 0
 221 013c 67800000 		jr	ra
 222              		.cfi_endproc
 223              	.LFE48:
 225              		.align	2
 226              		.globl	_ZN3PCB13threadCreateHEv
 228              	_ZN3PCB13threadCreateHEv:
 229              	.LFB49:
  43:src/PCB.cpp   **** 
  44:src/PCB.cpp   **** void PCB::threadCreateH() {
 230              		.loc 1 44 27 is_stmt 1
 231              		.cfi_startproc
 232 0140 130101FD 		addi	sp,sp,-48
 233              		.cfi_def_cfa_offset 48
 234 0144 23341102 		sd	ra,40(sp)
 235 0148 23308102 		sd	s0,32(sp)
 236 014c 233C9100 		sd	s1,24(sp)
 237 0150 23382101 		sd	s2,16(sp)
 238 0154 23343101 		sd	s3,8(sp)
 239              		.cfi_offset 1, -8
 240              		.cfi_offset 8, -16
 241              		.cfi_offset 9, -24
 242              		.cfi_offset 18, -32
GAS LISTING /tmp/ccgrUU0r.s 			page 8


 243              		.cfi_offset 19, -40
 244 0158 13040103 		addi	s0,sp,48
 245              		.cfi_def_cfa 8, 0
  45:src/PCB.cpp   ****     PCB** handle;
 246              		.loc 1 45 5
  46:src/PCB.cpp   ****     uint64 start_routine;
 247              		.loc 1 46 5
  47:src/PCB.cpp   ****     uint64 arg;
 248              		.loc 1 47 5
  48:src/PCB.cpp   ****     __asm__ volatile("mv %0, a1" : "=r"(handle));
 249              		.loc 1 48 5
 250              		.loc 1 48 49 is_stmt 0
 251              	#APP
 252              	# 48 "src/PCB.cpp" 1
  49              	    __asm__ volatile("mv %0, a2" : "=r"(start_routine));
 253              		mv s1, a1
 254              	# 0 "" 2
 255              	.LVL18:
 256              		.loc 1 49 5 is_stmt 1
 257              		.loc 1 49 56 is_stmt 0
 258              	# 49 "src/PCB.cpp" 1
  50              	    __asm__ volatile("mv %0, a3" : "=r"(arg));
 259              		mv s3, a2
 260              	# 0 "" 2
 261              	.LVL19:
 262              		.loc 1 50 5 is_stmt 1
 263              		.loc 1 50 46 is_stmt 0
 264              	# 50 "src/PCB.cpp" 1
  51              	    PCB *newPCB = new PCB((void (*)(void *)) start_routine, (void *) arg, (void *) regA4, DEFAULT_T
 265              		mv s2, a3
 266              	# 0 "" 2
 267              	.LVL20:
 268              		.loc 1 51 5 is_stmt 1
 269              		.loc 1 51 109 is_stmt 0
 270              	#NO_APP
 271 0168 13058005 		li	a0,88
 272 016c 97000000 		call	_ZN3PCBnwEm
 272      E7800000 
 273              	.LVL21:
 274 0174 97070000 		ld	a5,.LANCHOR0+16
 274      83B70700 
 275              	.LVL22:
 276              	.LBB54:
 277              	.LBB55:
  64:src/../h/PCB.hpp ****     {}
 278              		.loc 2 64 16
 279 017c 23000500 		sb	zero,0(a0)
 280 0180 23220500 		sw	zero,4(a0)
 281 0184 23343501 		sd	s3,8(a0)
 282 0188 2338F500 		sd	a5,16(a0)
 283 018c 17070000 		lla	a4,_ZN3PCB13threadWrapperEv
 283      13070700 
 284 0194 233CE500 		sd	a4,24(a0)
  61:src/../h/PCB.hpp ****         }),
 285              		.loc 2 61 38
 286 0198 37170000 		li	a4,4096
 287 019c B387E700 		add	a5,a5,a4
GAS LISTING /tmp/ccgrUU0r.s 			page 9


 288              	.LVL23:
  64:src/../h/PCB.hpp ****     {}
 289              		.loc 2 64 16
 290 01a0 2330F502 		sd	a5,32(a0)
 291 01a4 93072000 		li	a5,2
 292 01a8 2334F502 		sd	a5,40(a0)
 293 01ac 23382503 		sd	s2,48(a0)
 294 01b0 233C0502 		sd	zero,56(a0)
 295 01b4 23300504 		sd	zero,64(a0)
 296 01b8 23040504 		sb	zero,72(a0)
 297              	.LVL24:
 298              	.LBE55:
 299              	.LBE54:
  52:src/PCB.cpp   **** 
  53:src/PCB.cpp   ****     (*handle)=newPCB;
 300              		.loc 1 53 5 is_stmt 1
 301              		.loc 1 53 14 is_stmt 0
 302 01bc 23B0A400 		sd	a0,0(s1)
  54:src/PCB.cpp   **** 
  55:src/PCB.cpp   ****     if(!newPCB)
 303              		.loc 1 55 5 is_stmt 1
 304 01c0 63040504 		beqz	a0,.L16
  56:src/PCB.cpp   ****         __asm__ volatile("li a0, 0xffffffffffffffff");
  57:src/PCB.cpp   ****     else{
  58:src/PCB.cpp   ****         newPCB->start();
 305              		.loc 1 58 9
 306              	.LVL25:
 307              	.LBB56:
 308              	.LBB57:
  81:src/../h/PCB.hpp ****     uint64 getTimeSlice() const { return timeSlice;}
 309              		.loc 2 81 20
  81:src/../h/PCB.hpp ****     uint64 getTimeSlice() const { return timeSlice;}
 310              		.loc 2 81 34 is_stmt 0
 311 01c4 97000000 		call	_ZN9Scheduler3putEP3PCB@plt
 311      E7800000 
 312              	.LVL26:
 313              	.LBE57:
 314              	.LBE56:
  59:src/PCB.cpp   ****         __asm__ volatile("li a0, 0");
 315              		.loc 1 59 9 is_stmt 1
 316              		.loc 1 59 37 is_stmt 0
 317              	#APP
 318              	# 59 "src/PCB.cpp" 1
  60              	    }
 319              		li a0, 0
 320              	# 0 "" 2
 321              	#NO_APP
 322              	.L14:
  61:src/PCB.cpp   ****     Riscv::w_a0_sscratch();
 323              		.loc 1 61 5 is_stmt 1
 324              	.LBB58:
 325              	.LBB59:
 326              		.file 3 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 5/15/23.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
GAS LISTING /tmp/ccgrUU0r.s 			page 10


   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/Riscv.hpp **** 
   8:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   9:src/../h/Riscv.hpp **** #include "../h/userMain.hpp"
  10:src/../h/Riscv.hpp **** #include "../h/PCB.hpp"
  11:src/../h/Riscv.hpp **** 
  12:src/../h/Riscv.hpp **** class Riscv {
  13:src/../h/Riscv.hpp **** public:
  14:src/../h/Riscv.hpp ****     //non inline
  15:src/../h/Riscv.hpp ****     static void popSppSpie();
  16:src/../h/Riscv.hpp **** 
  17:src/../h/Riscv.hpp ****     static void pushRegisters();
  18:src/../h/Riscv.hpp **** 
  19:src/../h/Riscv.hpp ****     static void popRegisters();
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp ****     static uint64 r_scause();
  22:src/../h/Riscv.hpp **** 
  23:src/../h/Riscv.hpp ****     static void w_scause(uint64 scause);
  24:src/../h/Riscv.hpp **** 
  25:src/../h/Riscv.hpp ****     static uint64 r_sepc();
  26:src/../h/Riscv.hpp **** 
  27:src/../h/Riscv.hpp ****     static void w_sepc(uint64 sepc);
  28:src/../h/Riscv.hpp **** 
  29:src/../h/Riscv.hpp ****     static uint64 r_stvec();
  30:src/../h/Riscv.hpp **** 
  31:src/../h/Riscv.hpp ****     static void w_stvec(uint64 stvec);
  32:src/../h/Riscv.hpp **** 
  33:src/../h/Riscv.hpp ****     static uint64 r_stval();
  34:src/../h/Riscv.hpp **** 
  35:src/../h/Riscv.hpp ****     static void w_stval(uint64 stval);
  36:src/../h/Riscv.hpp **** 
  37:src/../h/Riscv.hpp ****     enum BitMaskSip{
  38:src/../h/Riscv.hpp ****         SIP_SSIP = (1<<1),
  39:src/../h/Riscv.hpp ****         SIP_STIP = (1<<5),
  40:src/../h/Riscv.hpp ****         SIP_SEIP = (1<<9),
  41:src/../h/Riscv.hpp ****     };
  42:src/../h/Riscv.hpp **** 
  43:src/../h/Riscv.hpp ****     static void ms_sip(uint64 mask);
  44:src/../h/Riscv.hpp **** 
  45:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  46:src/../h/Riscv.hpp **** 
  47:src/../h/Riscv.hpp ****     static uint64 r_sip();
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     static void w_sip(uint64 sip);
  50:src/../h/Riscv.hpp **** 
  51:src/../h/Riscv.hpp ****     enum BitMaskSstatus{
  52:src/../h/Riscv.hpp ****         SSTATUS_SIE = (1<<1),
  53:src/../h/Riscv.hpp ****         SSTATUS_SPIE = (1<<5),
  54:src/../h/Riscv.hpp ****         SSTATUS_SPP = (1<<8),
  55:src/../h/Riscv.hpp ****     };
  56:src/../h/Riscv.hpp **** 
  57:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  58:src/../h/Riscv.hpp **** 
  59:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp ****     static uint64 r_sstatus();
GAS LISTING /tmp/ccgrUU0r.s 			page 11


  62:src/../h/Riscv.hpp **** 
  63:src/../h/Riscv.hpp ****     static  void w_sstatus(uint64 sstatus);
  64:src/../h/Riscv.hpp **** 
  65:src/../h/Riscv.hpp ****     static void supervisorTrap();
  66:src/../h/Riscv.hpp **** 
  67:src/../h/Riscv.hpp ****     static void w_a0_sscratch();
  68:src/../h/Riscv.hpp **** 
  69:src/../h/Riscv.hpp **** private:
  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp ****     // supervisor trap handler
  72:src/../h/Riscv.hpp ****     static void handleSupervisorTrap();
  73:src/../h/Riscv.hpp **** 
  74:src/../h/Riscv.hpp ****     static void userMainWrapper(void *);
  75:src/../h/Riscv.hpp **** 
  76:src/../h/Riscv.hpp ****     friend class MemoryAllocator;
  77:src/../h/Riscv.hpp ****     friend class PCB;
  78:src/../h/Riscv.hpp ****     friend class Semaphore;
  79:src/../h/Riscv.hpp **** };
  80:src/../h/Riscv.hpp **** 
  81:src/../h/Riscv.hpp **** inline uint64 Riscv::r_scause() {
  82:src/../h/Riscv.hpp ****     uint64 volatile scause;
  83:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  84:src/../h/Riscv.hpp ****     return scause;
  85:src/../h/Riscv.hpp **** }
  86:src/../h/Riscv.hpp **** 
  87:src/../h/Riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  88:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  89:src/../h/Riscv.hpp **** }
  90:src/../h/Riscv.hpp **** 
  91:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sepc() {
  92:src/../h/Riscv.hpp ****     uint64 volatile sepc;
  93:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
  94:src/../h/Riscv.hpp ****     return sepc;
  95:src/../h/Riscv.hpp **** }
  96:src/../h/Riscv.hpp **** 
  97:src/../h/Riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
  98:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
  99:src/../h/Riscv.hpp **** }
 100:src/../h/Riscv.hpp **** 
 101:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stvec() {
 102:src/../h/Riscv.hpp ****     uint64 volatile stvec;
 103:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 104:src/../h/Riscv.hpp ****     return stvec;
 105:src/../h/Riscv.hpp **** }
 106:src/../h/Riscv.hpp **** 
 107:src/../h/Riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 108:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 109:src/../h/Riscv.hpp **** }
 110:src/../h/Riscv.hpp **** 
 111:src/../h/Riscv.hpp **** inline uint64 Riscv::r_stval() {
 112:src/../h/Riscv.hpp ****     uint64 volatile stval;
 113:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 114:src/../h/Riscv.hpp ****     return stval;
 115:src/../h/Riscv.hpp **** }
 116:src/../h/Riscv.hpp **** 
 117:src/../h/Riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 118:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
GAS LISTING /tmp/ccgrUU0r.s 			page 12


 119:src/../h/Riscv.hpp **** }
 120:src/../h/Riscv.hpp **** 
 121:src/../h/Riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 122:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 123:src/../h/Riscv.hpp **** }
 124:src/../h/Riscv.hpp **** 
 125:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 126:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 127:src/../h/Riscv.hpp **** }
 128:src/../h/Riscv.hpp **** 
 129:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sip() {
 130:src/../h/Riscv.hpp ****     uint64 volatile sip;
 131:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 132:src/../h/Riscv.hpp ****     return sip;
 133:src/../h/Riscv.hpp **** }
 134:src/../h/Riscv.hpp **** 
 135:src/../h/Riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 136:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 137:src/../h/Riscv.hpp **** }
 138:src/../h/Riscv.hpp **** 
 139:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 140:src/../h/Riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 141:src/../h/Riscv.hpp **** }
 142:src/../h/Riscv.hpp **** 
 143:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
 144:src/../h/Riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 145:src/../h/Riscv.hpp **** }
 146:src/../h/Riscv.hpp **** 
 147:src/../h/Riscv.hpp **** inline uint64 Riscv::r_sstatus() {
 148:src/../h/Riscv.hpp ****     uint64 volatile sstatus;
 149:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 150:src/../h/Riscv.hpp ****     return sstatus;
 151:src/../h/Riscv.hpp **** }
 152:src/../h/Riscv.hpp **** 
 153:src/../h/Riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus) {
 154:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 155:src/../h/Riscv.hpp **** }
 156:src/../h/Riscv.hpp **** 
 157:src/../h/Riscv.hpp **** inline void Riscv::w_a0_sscratch() {
 158:src/../h/Riscv.hpp ****     uint64 a1Temp;
 327              		.loc 3 158 5
 159:src/../h/Riscv.hpp ****     __asm__ volatile("mv %0, a1":"=r"(a1Temp));
 328              		.loc 3 159 5
 329              		.loc 3 159 47 is_stmt 0
 330              	#APP
 331              	# 159 "src/../h/Riscv.hpp" 1
 160              	    __asm__ volatile("mv a1, %0"::"r"(PCB::running->sscratch));
 332              		mv a5, a1
 333              	# 0 "" 2
 334              	.LVL27:
 335              		.loc 3 160 5 is_stmt 1
 336              		.loc 3 160 53 is_stmt 0
 337              	#NO_APP
 338 01d4 17070000 		ld	a4,.LANCHOR0
 338      03370700 
 339 01dc 03370705 		ld	a4,80(a4)
 340              		.loc 3 160 63
GAS LISTING /tmp/ccgrUU0r.s 			page 13


 341              	#APP
 342              	# 160 "src/../h/Riscv.hpp" 1
 161              	    __asm__ volatile("sd a0, 80(a1)");
 343              		mv a1, a4
 344              	# 0 "" 2
 345              		.loc 3 161 5 is_stmt 1
 346              		.loc 3 161 38 is_stmt 0
 347              	# 161 "src/../h/Riscv.hpp" 1
 162              	    __asm__ volatile("mv a1,%0"::"r"(a1Temp));
 348              		sd a0, 80(a1)
 349              	# 0 "" 2
 350              		.loc 3 162 5 is_stmt 1
 351              		.loc 3 162 46 is_stmt 0
 352              	# 162 "src/../h/Riscv.hpp" 1
 163              	    /*uint64 a0;
 353              		mv a1,a5
 354              	# 0 "" 2
 355              	.LVL28:
 356              	#NO_APP
 357              	.LBE59:
 358              	.LBE58:
  62:src/PCB.cpp   **** }
 359              		.loc 1 62 1
 360 01ec 83308102 		ld	ra,40(sp)
 361              		.cfi_remember_state
 362              		.cfi_restore 1
 363 01f0 03340102 		ld	s0,32(sp)
 364              		.cfi_restore 8
 365              		.cfi_def_cfa 2, 48
 366 01f4 83348101 		ld	s1,24(sp)
 367              		.cfi_restore 9
 368              	.LVL29:
 369 01f8 03390101 		ld	s2,16(sp)
 370              		.cfi_restore 18
 371              	.LVL30:
 372 01fc 83398100 		ld	s3,8(sp)
 373              		.cfi_restore 19
 374              	.LVL31:
 375 0200 13010103 		addi	sp,sp,48
 376              		.cfi_def_cfa_offset 0
 377 0204 67800000 		jr	ra
 378              	.LVL32:
 379              	.L16:
 380              		.cfi_restore_state
  56:src/PCB.cpp   ****     else{
 381              		.loc 1 56 9 is_stmt 1
  56:src/PCB.cpp   ****     else{
 382              		.loc 1 56 54 is_stmt 0
 383              	#APP
 384              	# 56 "src/PCB.cpp" 1
 385              		li a0, 0xffffffffffffffff
 386              	# 0 "" 2
 387              	#NO_APP
 388 020c 6FF05FFC 		j	.L14
 389              		.cfi_endproc
 390              	.LFE49:
 392              		.align	2
GAS LISTING /tmp/ccgrUU0r.s 			page 14


 393              		.globl	_ZN3PCB11threadExitHEv
 395              	_ZN3PCB11threadExitHEv:
 396              	.LFB50:
  63:src/PCB.cpp   **** 
  64:src/PCB.cpp   **** void PCB::threadExitH() {
 397              		.loc 1 64 25 is_stmt 1
 398              		.cfi_startproc
 399 0210 130101FF 		addi	sp,sp,-16
 400              		.cfi_def_cfa_offset 16
 401 0214 23341100 		sd	ra,8(sp)
 402 0218 23308100 		sd	s0,0(sp)
 403              		.cfi_offset 1, -8
 404              		.cfi_offset 8, -16
 405 021c 13040101 		addi	s0,sp,16
 406              		.cfi_def_cfa 8, 0
  65:src/PCB.cpp   ****     dispatch();
 407              		.loc 1 65 5
 408              		.loc 1 65 13 is_stmt 0
 409 0220 97000000 		call	_ZN3PCB8dispatchEv
 409      E7800000 
 410              	.LVL33:
  66:src/PCB.cpp   ****     __asm__ volatile("li a0, 0");
 411              		.loc 1 66 5 is_stmt 1
 412              		.loc 1 66 33 is_stmt 0
 413              	#APP
 414              	# 66 "src/PCB.cpp" 1
  67              	    Riscv::w_a0_sscratch();
 415              		li a0, 0
 416              	# 0 "" 2
 417              		.loc 1 67 5 is_stmt 1
 418              	#NO_APP
 419              	.LBB60:
 420              	.LBB61:
 158:src/../h/Riscv.hpp ****     __asm__ volatile("mv %0, a1":"=r"(a1Temp));
 421              		.loc 3 158 5
 159:src/../h/Riscv.hpp ****     __asm__ volatile("mv a1, %0"::"r"(PCB::running->sscratch));
 422              		.loc 3 159 5
 159:src/../h/Riscv.hpp ****     __asm__ volatile("mv a1, %0"::"r"(PCB::running->sscratch));
 423              		.loc 3 159 47 is_stmt 0
 424              	#APP
 425              	# 159 "src/../h/Riscv.hpp" 1
 426              		mv a5, a1
 427              	# 0 "" 2
 428              	.LVL34:
 160:src/../h/Riscv.hpp ****     __asm__ volatile("sd a0, 80(a1)");
 429              		.loc 3 160 5 is_stmt 1
 160:src/../h/Riscv.hpp ****     __asm__ volatile("sd a0, 80(a1)");
 430              		.loc 3 160 53 is_stmt 0
 431              	#NO_APP
 432 0230 17070000 		ld	a4,.LANCHOR0
 432      03370700 
 433 0238 03370705 		ld	a4,80(a4)
 160:src/../h/Riscv.hpp ****     __asm__ volatile("sd a0, 80(a1)");
 434              		.loc 3 160 63
 435              	#APP
 436              	# 160 "src/../h/Riscv.hpp" 1
 161:src/../h/Riscv.hpp ****     __asm__ volatile("mv a1,%0"::"r"(a1Temp));
GAS LISTING /tmp/ccgrUU0r.s 			page 15


 437              		mv a1, a4
 438              	# 0 "" 2
 439              		.loc 3 161 5 is_stmt 1
 161:src/../h/Riscv.hpp ****     __asm__ volatile("mv a1,%0"::"r"(a1Temp));
 440              		.loc 3 161 38 is_stmt 0
 441              	# 161 "src/../h/Riscv.hpp" 1
 162:src/../h/Riscv.hpp ****     /*uint64 a0;
 442              		sd a0, 80(a1)
 443              	# 0 "" 2
 444              		.loc 3 162 5 is_stmt 1
 162:src/../h/Riscv.hpp ****     /*uint64 a0;
 445              		.loc 3 162 46 is_stmt 0
 446              	# 162 "src/../h/Riscv.hpp" 1
 447              		mv a1,a5
 448              	# 0 "" 2
 449              	.LVL35:
 450              	#NO_APP
 451              	.LBE61:
 452              	.LBE60:
  68:src/PCB.cpp   **** }
 453              		.loc 1 68 1
 454 0248 83308100 		ld	ra,8(sp)
 455              		.cfi_restore 1
 456 024c 03340100 		ld	s0,0(sp)
 457              		.cfi_restore 8
 458              		.cfi_def_cfa 2, 16
 459 0250 13010101 		addi	sp,sp,16
 460              		.cfi_def_cfa_offset 0
 461 0254 67800000 		jr	ra
 462              		.cfi_endproc
 463              	.LFE50:
 465              		.align	2
 466              		.globl	_ZN3PCB15threadDispatchHEv
 468              	_ZN3PCB15threadDispatchHEv:
 469              	.LFB51:
  69:src/PCB.cpp   **** 
  70:src/PCB.cpp   **** void PCB::threadDispatchH() {
 470              		.loc 1 70 29 is_stmt 1
 471              		.cfi_startproc
 472 0258 130101FF 		addi	sp,sp,-16
 473              		.cfi_def_cfa_offset 16
 474 025c 23341100 		sd	ra,8(sp)
 475 0260 23308100 		sd	s0,0(sp)
 476              		.cfi_offset 1, -8
 477              		.cfi_offset 8, -16
 478 0264 13040101 		addi	s0,sp,16
 479              		.cfi_def_cfa 8, 0
  71:src/PCB.cpp   ****     timeSliceCounter=0;
 480              		.loc 1 71 5
 481              		.loc 1 71 21 is_stmt 0
 482 0268 97070000 		sd	zero,.LANCHOR0+8,a5
 482      23B00700 
  72:src/PCB.cpp   ****     dispatch();
 483              		.loc 1 72 5 is_stmt 1
 484              		.loc 1 72 13 is_stmt 0
 485 0270 97000000 		call	_ZN3PCB8dispatchEv
 485      E7800000 
GAS LISTING /tmp/ccgrUU0r.s 			page 16


 486              	.LVL36:
  73:src/PCB.cpp   **** }
 487              		.loc 1 73 1
 488 0278 83308100 		ld	ra,8(sp)
 489              		.cfi_restore 1
 490 027c 03340100 		ld	s0,0(sp)
 491              		.cfi_restore 8
 492              		.cfi_def_cfa 2, 16
 493 0280 13010101 		addi	sp,sp,16
 494              		.cfi_def_cfa_offset 0
 495 0284 67800000 		jr	ra
 496              		.cfi_endproc
 497              	.LFE51:
 499              		.align	2
 500              		.globl	_ZN3PCB11threadJoinHEv
 502              	_ZN3PCB11threadJoinHEv:
 503              	.LFB52:
  74:src/PCB.cpp   **** 
  75:src/PCB.cpp   **** void PCB::threadJoinH() {
 504              		.loc 1 75 25 is_stmt 1
 505              		.cfi_startproc
 506 0288 130101FF 		addi	sp,sp,-16
 507              		.cfi_def_cfa_offset 16
 508 028c 23341100 		sd	ra,8(sp)
 509 0290 23308100 		sd	s0,0(sp)
 510              		.cfi_offset 1, -8
 511              		.cfi_offset 8, -16
 512 0294 13040101 		addi	s0,sp,16
 513              		.cfi_def_cfa 8, 0
  76:src/PCB.cpp   ****     running->changeState(SUSPENDED);
 514              		.loc 1 76 5
 515              	.LVL37:
 516              	.LBB62:
 517              	.LBB63:
 518              		.loc 2 89 33
 519              		.loc 2 89 38 is_stmt 0
 520 0298 97070000 		ld	a5,.LANCHOR0
 520      83B70700 
 521 02a0 13072000 		li	a4,2
 522 02a4 23A2E700 		sw	a4,4(a5)
 523              	.LVL38:
 524              	.LBE63:
 525              	.LBE62:
  77:src/PCB.cpp   ****     dispatch();
 526              		.loc 1 77 5 is_stmt 1
 527              		.loc 1 77 13 is_stmt 0
 528 02a8 97000000 		call	_ZN3PCB8dispatchEv
 528      E7800000 
 529              	.LVL39:
  78:src/PCB.cpp   **** }
 530              		.loc 1 78 1
 531 02b0 83308100 		ld	ra,8(sp)
 532              		.cfi_restore 1
 533 02b4 03340100 		ld	s0,0(sp)
 534              		.cfi_restore 8
 535              		.cfi_def_cfa 2, 16
 536 02b8 13010101 		addi	sp,sp,16
GAS LISTING /tmp/ccgrUU0r.s 			page 17


 537              		.cfi_def_cfa_offset 0
 538 02bc 67800000 		jr	ra
 539              		.cfi_endproc
 540              	.LFE52:
 542              		.align	2
 543              		.globl	_ZN3PCBD2Ev
 545              	_ZN3PCBD2Ev:
 546              	.LFB55:
  79:src/PCB.cpp   **** 
  80:src/PCB.cpp   **** void PCB::timeSleepH() {
  81:src/PCB.cpp   ****     time_t time;
  82:src/PCB.cpp   ****     __asm__ volatile("mv %0, a1" : "=r"(time));
  83:src/PCB.cpp   ****     timeSliceCounter=0;
  84:src/PCB.cpp   ****     running->setSleepingTime(time);
  85:src/PCB.cpp   ****     insertSleepy();
  86:src/PCB.cpp   ****     dispatch();
  87:src/PCB.cpp   ****     __asm__ volatile("li a0, 0");
  88:src/PCB.cpp   ****     Riscv::w_a0_sscratch();
  89:src/PCB.cpp   **** }
  90:src/PCB.cpp   **** 
  91:src/PCB.cpp   **** PCB::~PCB() {
 547              		.loc 1 91 1 is_stmt 1
 548              		.cfi_startproc
 549              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 550              		.cfi_lsda 0x1b,.LLSDA55
 551              	.LVL40:
 552 02c0 130101FF 		addi	sp,sp,-16
 553              		.cfi_def_cfa_offset 16
 554 02c4 23341100 		sd	ra,8(sp)
 555 02c8 23308100 		sd	s0,0(sp)
 556              		.cfi_offset 1, -8
 557              		.cfi_offset 8, -16
 558 02cc 13040101 		addi	s0,sp,16
 559              		.cfi_def_cfa 8, 0
 560              	.LBB64:
  92:src/PCB.cpp   ****     MemoryAllocator::kfree(stack);
 561              		.loc 1 92 5
 562              		.loc 1 92 27 is_stmt 0
 563 02d0 03350501 		ld	a0,16(a0)
 564              	.LVL41:
 565 02d4 97000000 		call	_ZN15MemoryAllocator5kfreeEPv@plt
 565      E7800000 
 566              	.LVL42:
 567              	.LBE64:
  93:src/PCB.cpp   **** }
 568              		.loc 1 93 1
 569 02dc 83308100 		ld	ra,8(sp)
 570              		.cfi_restore 1
 571 02e0 03340100 		ld	s0,0(sp)
 572              		.cfi_restore 8
 573              		.cfi_def_cfa 2, 16
 574 02e4 13010101 		addi	sp,sp,16
 575              		.cfi_def_cfa_offset 0
 576 02e8 67800000 		jr	ra
 577              		.cfi_endproc
 578              	.LFE55:
 579              		.globl	__gxx_personality_v0
GAS LISTING /tmp/ccgrUU0r.s 			page 18


 580              		.section	.gcc_except_table,"a",@progbits
 581              	.LLSDA55:
 582 0000 FF       		.byte	0xff
 583 0001 FF       		.byte	0xff
 584 0002 03       		.byte	0x3
 585 0003 00       		.byte	0
 586              		.text
 588              		.globl	_ZN3PCBD1Ev
 589              		.set	_ZN3PCBD1Ev,_ZN3PCBD2Ev
 590              		.align	2
 591              		.globl	_ZN3PCB12insertSleepyEv
 593              	_ZN3PCB12insertSleepyEv:
 594              	.LFB57:
  94:src/PCB.cpp   **** 
  95:src/PCB.cpp   **** void PCB::insertSleepy() {
 595              		.loc 1 95 26 is_stmt 1
 596              		.cfi_startproc
 597 02ec 130101FF 		addi	sp,sp,-16
 598              		.cfi_def_cfa_offset 16
 599 02f0 23348100 		sd	s0,8(sp)
 600              		.cfi_offset 8, -8
 601 02f4 13040101 		addi	s0,sp,16
 602              		.cfi_def_cfa 8, 0
  96:src/PCB.cpp   ****     running->changeState(SLEEPING);
 603              		.loc 1 96 5
 604              		.loc 1 96 25 is_stmt 0
 605 02f8 97070000 		lla	a5,.LANCHOR0
 605      93870700 
 606 0300 03B70700 		ld	a4,0(a5)
 607              	.LVL43:
 608              	.LBB65:
 609              	.LBB66:
 610              		.loc 2 89 33 is_stmt 1
 611              		.loc 2 89 38 is_stmt 0
 612 0304 93065000 		li	a3,5
 613 0308 2322D700 		sw	a3,4(a4)
 614              	.LVL44:
 615              	.LBE66:
 616              	.LBE65:
  97:src/PCB.cpp   ****     PCB *prev= nullptr;
 617              		.loc 1 97 5 is_stmt 1
  98:src/PCB.cpp   ****     for(PCB* curr = sleepyHead; curr; curr=curr->nextSleepy){
 618              		.loc 1 98 5
 619              	.LBB67:
 620              		.loc 1 98 14 is_stmt 0
 621 030c 83B78701 		ld	a5,24(a5)
 622              	.LVL45:
 623              	.LBE67:
  97:src/PCB.cpp   ****     PCB *prev= nullptr;
 624              		.loc 1 97 10
 625 0310 93050000 		li	a1,0
 626              	.LVL46:
 627              	.L28:
 628              	.LBB78:
 629              		.loc 1 98 33 is_stmt 1 discriminator 1
 630 0314 638E0702 		beqz	a5,.L26
  99:src/PCB.cpp   ****         if(curr->getSleepingTime()  > running->getSleepingTime()){
GAS LISTING /tmp/ccgrUU0r.s 			page 19


 631              		.loc 1 99 9
 632              	.LVL47:
 633              	.LBB68:
 634              	.LBB69:
  84:src/../h/PCB.hpp ****     static void decreaseSleepingTime() {if(sleepyHead) sleepyHead->sleepingTime--;}
 635              		.loc 2 84 38
  84:src/../h/PCB.hpp ****     static void decreaseSleepingTime() {if(sleepyHead) sleepyHead->sleepingTime--;}
 636              		.loc 2 84 45 is_stmt 0
 637 0318 03B68703 		ld	a2,56(a5)
 638              	.LVL48:
 639              	.LBE69:
 640              	.LBE68:
 641              		.loc 1 99 63
 642 031c 97060000 		ld	a3,.LANCHOR0
 642      83B60600 
 643              	.LVL49:
 644              	.LBB70:
 645              	.LBB71:
  84:src/../h/PCB.hpp ****     static void decreaseSleepingTime() {if(sleepyHead) sleepyHead->sleepingTime--;}
 646              		.loc 2 84 38 is_stmt 1
  84:src/../h/PCB.hpp ****     static void decreaseSleepingTime() {if(sleepyHead) sleepyHead->sleepingTime--;}
 647              		.loc 2 84 45 is_stmt 0
 648 0324 03B78603 		ld	a4,56(a3)
 649              	.LVL50:
 650              	.LBE71:
 651              	.LBE70:
 652              		.loc 1 99 9
 653 0328 636CC700 		bgtu	a2,a4,.L32
 100:src/PCB.cpp   ****             running->nextSleepy=curr;
 101:src/PCB.cpp   ****             running->nextSleepy->setSleepingTime(running->nextSleepy->getSleepingTime()-running->ge
 102:src/PCB.cpp   ****             break;
 103:src/PCB.cpp   ****         }
 104:src/PCB.cpp   ****         running->setSleepingTime(running->getSleepingTime()-curr->getSleepingTime());
 654              		.loc 1 104 9 is_stmt 1 discriminator 2
 655              	.LVL51:
 656              	.LBE78:
  84:src/../h/PCB.hpp ****     static void decreaseSleepingTime() {if(sleepyHead) sleepyHead->sleepingTime--;}
 657              		.loc 2 84 38 discriminator 2
  84:src/../h/PCB.hpp ****     static void decreaseSleepingTime() {if(sleepyHead) sleepyHead->sleepingTime--;}
 658              		.loc 2 84 38 discriminator 2
 659              	.LBB79:
 660              		.loc 1 104 33 is_stmt 0 discriminator 2
 661 032c 3307C740 		sub	a4,a4,a2
 662              	.LVL52:
 663              	.LBB72:
 664              	.LBB73:
  83:src/../h/PCB.hpp ****     uint64  getSleepingTime() const {return sleepingTime;}
 665              		.loc 2 83 38 is_stmt 1 discriminator 2
  83:src/../h/PCB.hpp ****     uint64  getSleepingTime() const {return sleepingTime;}
 666              		.loc 2 83 50 is_stmt 0 discriminator 2
 667 0330 23BCE602 		sd	a4,56(a3)
 668              	.LVL53:
 669              	.LBE73:
 670              	.LBE72:
 105:src/PCB.cpp   ****         prev=curr;
 671              		.loc 1 105 9 is_stmt 1 discriminator 2
  98:src/PCB.cpp   ****         if(curr->getSleepingTime()  > running->getSleepingTime()){
GAS LISTING /tmp/ccgrUU0r.s 			page 20


 672              		.loc 1 98 5 discriminator 2
 673              		.loc 1 105 13 is_stmt 0 discriminator 2
 674 0334 93850700 		mv	a1,a5
  98:src/PCB.cpp   ****         if(curr->getSleepingTime()  > running->getSleepingTime()){
 675              		.loc 1 98 43 discriminator 2
 676 0338 83B70704 		ld	a5,64(a5)
 677              	.LVL54:
  98:src/PCB.cpp   ****         if(curr->getSleepingTime()  > running->getSleepingTime()){
 678              		.loc 1 98 5 discriminator 2
 679 033c 6FF09FFD 		j	.L28
 680              	.L32:
 100:src/PCB.cpp   ****             running->nextSleepy->setSleepingTime(running->nextSleepy->getSleepingTime()-running->ge
 681              		.loc 1 100 13 is_stmt 1
 100:src/PCB.cpp   ****             running->nextSleepy->setSleepingTime(running->nextSleepy->getSleepingTime()-running->ge
 682              		.loc 1 100 32 is_stmt 0
 683 0340 23B0F604 		sd	a5,64(a3)
 101:src/PCB.cpp   ****             break;
 684              		.loc 1 101 13 is_stmt 1
 685              	.LVL55:
 686              	.LBB74:
 687              	.LBB75:
  84:src/../h/PCB.hpp ****     static void decreaseSleepingTime() {if(sleepyHead) sleepyHead->sleepingTime--;}
 688              		.loc 2 84 38
  84:src/../h/PCB.hpp ****     static void decreaseSleepingTime() {if(sleepyHead) sleepyHead->sleepingTime--;}
 689              		.loc 2 84 45 is_stmt 0
 690 0344 83B68703 		ld	a3,56(a5)
 691              	.LVL56:
 692              	.LBE75:
 693              	.LBE74:
 694              	.LBE79:
  84:src/../h/PCB.hpp ****     static void decreaseSleepingTime() {if(sleepyHead) sleepyHead->sleepingTime--;}
 695              		.loc 2 84 38 is_stmt 1
 696              	.LBB80:
 101:src/PCB.cpp   ****             break;
 697              		.loc 1 101 49 is_stmt 0
 698 0348 3387E640 		sub	a4,a3,a4
 699              	.LVL57:
 700              	.LBB76:
 701              	.LBB77:
  83:src/../h/PCB.hpp ****     uint64  getSleepingTime() const {return sleepingTime;}
 702              		.loc 2 83 38 is_stmt 1
  83:src/../h/PCB.hpp ****     uint64  getSleepingTime() const {return sleepingTime;}
 703              		.loc 2 83 50 is_stmt 0
 704 034c 23BCE702 		sd	a4,56(a5)
 705              	.LVL58:
 706              	.L26:
 707              	.LBE77:
 708              	.LBE76:
 709              	.LBE80:
 106:src/PCB.cpp   ****     }
 107:src/PCB.cpp   ****     if(!prev)
 710              		.loc 1 107 5 is_stmt 1
 711 0350 638E0500 		beqz	a1,.L33
 108:src/PCB.cpp   ****         sleepyHead=running;
 109:src/PCB.cpp   ****     else
 110:src/PCB.cpp   ****         prev->nextSleepy=running;
 712              		.loc 1 110 9
GAS LISTING /tmp/ccgrUU0r.s 			page 21


 713              		.loc 1 110 25 is_stmt 0
 714 0354 97070000 		ld	a5,.LANCHOR0
 714      83B70700 
 715              	.LVL59:
 716 035c 23B0F504 		sd	a5,64(a1)
 717              	.L25:
 111:src/PCB.cpp   **** }
 718              		.loc 1 111 1
 719 0360 03348100 		ld	s0,8(sp)
 720              		.cfi_remember_state
 721              		.cfi_restore 8
 722              		.cfi_def_cfa 2, 16
 723 0364 13010101 		addi	sp,sp,16
 724              		.cfi_def_cfa_offset 0
 725 0368 67800000 		jr	ra
 726              	.LVL60:
 727              	.L33:
 728              		.cfi_restore_state
 108:src/PCB.cpp   ****         sleepyHead=running;
 729              		.loc 1 108 9 is_stmt 1
 108:src/PCB.cpp   ****         sleepyHead=running;
 730              		.loc 1 108 19 is_stmt 0
 731 036c 97070000 		lla	a5,.LANCHOR0
 731      93870700 
 732              	.LVL61:
 733 0374 03B70700 		ld	a4,0(a5)
 734 0378 23BCE700 		sd	a4,24(a5)
 735 037c 6FF05FFE 		j	.L25
 736              		.cfi_endproc
 737              	.LFE57:
 739              		.align	2
 740              		.globl	_ZN3PCB10timeSleepHEv
 742              	_ZN3PCB10timeSleepHEv:
 743              	.LFB53:
  80:src/PCB.cpp   ****     time_t time;
 744              		.loc 1 80 24 is_stmt 1
 745              		.cfi_startproc
 746 0380 130101FE 		addi	sp,sp,-32
 747              		.cfi_def_cfa_offset 32
 748 0384 233C1100 		sd	ra,24(sp)
 749 0388 23388100 		sd	s0,16(sp)
 750 038c 23349100 		sd	s1,8(sp)
 751              		.cfi_offset 1, -8
 752              		.cfi_offset 8, -16
 753              		.cfi_offset 9, -24
 754 0390 13040102 		addi	s0,sp,32
 755              		.cfi_def_cfa 8, 0
  81:src/PCB.cpp   ****     __asm__ volatile("mv %0, a1" : "=r"(time));
 756              		.loc 1 81 5
  82:src/PCB.cpp   ****     timeSliceCounter=0;
 757              		.loc 1 82 5
  82:src/PCB.cpp   ****     timeSliceCounter=0;
 758              		.loc 1 82 47 is_stmt 0
 759              	#APP
 760              	# 82 "src/PCB.cpp" 1
 761              		mv a4, a1
 762              	# 0 "" 2
GAS LISTING /tmp/ccgrUU0r.s 			page 22


 763              	.LVL62:
  83:src/PCB.cpp   ****     running->setSleepingTime(time);
 764              		.loc 1 83 5 is_stmt 1
  83:src/PCB.cpp   ****     running->setSleepingTime(time);
 765              		.loc 1 83 21 is_stmt 0
 766              	#NO_APP
 767 0398 97040000 		lla	s1,.LANCHOR0
 767      93840400 
 768 03a0 23B40400 		sd	zero,8(s1)
  84:src/PCB.cpp   ****     insertSleepy();
 769              		.loc 1 84 5 is_stmt 1
  84:src/PCB.cpp   ****     insertSleepy();
 770              		.loc 1 84 29 is_stmt 0
 771 03a4 83B70400 		ld	a5,0(s1)
 772              	.LVL63:
 773              	.LBB81:
 774              	.LBB82:
  83:src/../h/PCB.hpp ****     uint64  getSleepingTime() const {return sleepingTime;}
 775              		.loc 2 83 38 is_stmt 1
  83:src/../h/PCB.hpp ****     uint64  getSleepingTime() const {return sleepingTime;}
 776              		.loc 2 83 50 is_stmt 0
 777 03a8 23BCE702 		sd	a4,56(a5)
 778              	.LVL64:
 779              	.LBE82:
 780              	.LBE81:
  85:src/PCB.cpp   ****     dispatch();
 781              		.loc 1 85 5 is_stmt 1
  85:src/PCB.cpp   ****     dispatch();
 782              		.loc 1 85 17 is_stmt 0
 783 03ac 97000000 		call	_ZN3PCB12insertSleepyEv
 783      E7800000 
 784              	.LVL65:
  86:src/PCB.cpp   ****     __asm__ volatile("li a0, 0");
 785              		.loc 1 86 5 is_stmt 1
  86:src/PCB.cpp   ****     __asm__ volatile("li a0, 0");
 786              		.loc 1 86 13 is_stmt 0
 787 03b4 97000000 		call	_ZN3PCB8dispatchEv
 787      E7800000 
 788              	.LVL66:
  87:src/PCB.cpp   ****     Riscv::w_a0_sscratch();
 789              		.loc 1 87 5 is_stmt 1
  87:src/PCB.cpp   ****     Riscv::w_a0_sscratch();
 790              		.loc 1 87 33 is_stmt 0
 791              	#APP
 792              	# 87 "src/PCB.cpp" 1
  88:src/PCB.cpp   **** }
 793              		li a0, 0
 794              	# 0 "" 2
 795              		.loc 1 88 5 is_stmt 1
 796              	#NO_APP
 797              	.LBB83:
 798              	.LBB84:
 158:src/../h/Riscv.hpp ****     __asm__ volatile("mv %0, a1":"=r"(a1Temp));
 799              		.loc 3 158 5
 159:src/../h/Riscv.hpp ****     __asm__ volatile("mv a1, %0"::"r"(PCB::running->sscratch));
 800              		.loc 3 159 5
 159:src/../h/Riscv.hpp ****     __asm__ volatile("mv a1, %0"::"r"(PCB::running->sscratch));
GAS LISTING /tmp/ccgrUU0r.s 			page 23


 801              		.loc 3 159 47 is_stmt 0
 802              	#APP
 803              	# 159 "src/../h/Riscv.hpp" 1
 804              		mv a5, a1
 805              	# 0 "" 2
 806              	.LVL67:
 160:src/../h/Riscv.hpp ****     __asm__ volatile("sd a0, 80(a1)");
 807              		.loc 3 160 5 is_stmt 1
 160:src/../h/Riscv.hpp ****     __asm__ volatile("sd a0, 80(a1)");
 808              		.loc 3 160 53 is_stmt 0
 809              	#NO_APP
 810 03c4 03B70400 		ld	a4,0(s1)
 811 03c8 03370705 		ld	a4,80(a4)
 160:src/../h/Riscv.hpp ****     __asm__ volatile("sd a0, 80(a1)");
 812              		.loc 3 160 63
 813              	#APP
 814              	# 160 "src/../h/Riscv.hpp" 1
 161:src/../h/Riscv.hpp ****     __asm__ volatile("mv a1,%0"::"r"(a1Temp));
 815              		mv a1, a4
 816              	# 0 "" 2
 817              		.loc 3 161 5 is_stmt 1
 161:src/../h/Riscv.hpp ****     __asm__ volatile("mv a1,%0"::"r"(a1Temp));
 818              		.loc 3 161 38 is_stmt 0
 819              	# 161 "src/../h/Riscv.hpp" 1
 162:src/../h/Riscv.hpp ****     /*uint64 a0;
 820              		sd a0, 80(a1)
 821              	# 0 "" 2
 822              		.loc 3 162 5 is_stmt 1
 162:src/../h/Riscv.hpp ****     /*uint64 a0;
 823              		.loc 3 162 46 is_stmt 0
 824              	# 162 "src/../h/Riscv.hpp" 1
 825              		mv a1,a5
 826              	# 0 "" 2
 827              	.LVL68:
 828              	#NO_APP
 829              	.LBE84:
 830              	.LBE83:
  89:src/PCB.cpp   **** 
 831              		.loc 1 89 1
 832 03d8 83308101 		ld	ra,24(sp)
 833              		.cfi_restore 1
 834 03dc 03340101 		ld	s0,16(sp)
 835              		.cfi_restore 8
 836              		.cfi_def_cfa 2, 32
 837 03e0 83348100 		ld	s1,8(sp)
 838              		.cfi_restore 9
 839 03e4 13010102 		addi	sp,sp,32
 840              		.cfi_def_cfa_offset 0
 841 03e8 67800000 		jr	ra
 842              		.cfi_endproc
 843              	.LFE53:
 845              		.align	2
 846              		.globl	_ZN3PCB12removeSleepyEv
 848              	_ZN3PCB12removeSleepyEv:
 849              	.LFB58:
 112:src/PCB.cpp   **** 
 113:src/PCB.cpp   **** void PCB::removeSleepy() {
GAS LISTING /tmp/ccgrUU0r.s 			page 24


 850              		.loc 1 113 26 is_stmt 1
 851              		.cfi_startproc
 852 03ec 130101FE 		addi	sp,sp,-32
 853              		.cfi_def_cfa_offset 32
 854 03f0 233C1100 		sd	ra,24(sp)
 855 03f4 23388100 		sd	s0,16(sp)
 856 03f8 23349100 		sd	s1,8(sp)
 857              		.cfi_offset 1, -8
 858              		.cfi_offset 8, -16
 859              		.cfi_offset 9, -24
 860 03fc 13040102 		addi	s0,sp,32
 861              		.cfi_def_cfa 8, 0
 114:src/PCB.cpp   ****     if(!sleepyHead)
 862              		.loc 1 114 5
 863              		.loc 1 114 8 is_stmt 0
 864 0400 97040000 		ld	s1,.LANCHOR0+24
 864      83B40400 
 865              		.loc 1 114 5
 866 0408 638E0400 		beqz	s1,.L36
 115:src/PCB.cpp   ****         return;
 116:src/PCB.cpp   ****     PCB* curr;
 117:src/PCB.cpp   ****     PCB *prev = nullptr;
 867              		.loc 1 117 10
 868 040c 13050000 		li	a0,0
 869 0410 6F00C003 		j	.L42
 870              	.LVL69:
 871              	.L38:
 118:src/PCB.cpp   ****     for(curr = sleepyHead; curr && !curr->getSleepingTime();curr=curr->nextSleepy, sleepyHead=curr)
 119:src/PCB.cpp   ****         if(prev) {
 120:src/PCB.cpp   ****             prev->nextSleepy = nullptr;
 121:src/PCB.cpp   ****             Scheduler::put(prev);
 122:src/PCB.cpp   ****         }
 123:src/PCB.cpp   ****         prev=curr;
 124:src/PCB.cpp   ****     }
 125:src/PCB.cpp   ****     if(prev){
 872              		.loc 1 125 5 is_stmt 1 discriminator 5
 873 0414 63080500 		beqz	a0,.L36
 126:src/PCB.cpp   ****         prev->nextSleepy=nullptr;
 874              		.loc 1 126 9
 875              		.loc 1 126 25 is_stmt 0
 876 0418 23300504 		sd	zero,64(a0)
 127:src/PCB.cpp   ****         Scheduler::put(prev);
 877              		.loc 1 127 9 is_stmt 1
 878              		.loc 1 127 23 is_stmt 0
 879 041c 97000000 		call	_ZN9Scheduler3putEP3PCB@plt
 879      E7800000 
 880              	.LVL70:
 881              	.L36:
 128:src/PCB.cpp   ****     }
 129:src/PCB.cpp   **** }
 882              		.loc 1 129 1
 883 0424 83308101 		ld	ra,24(sp)
 884              		.cfi_remember_state
 885              		.cfi_restore 1
 886 0428 03340101 		ld	s0,16(sp)
 887              		.cfi_restore 8
 888              		.cfi_def_cfa 2, 32
GAS LISTING /tmp/ccgrUU0r.s 			page 25


 889 042c 83348100 		ld	s1,8(sp)
 890              		.cfi_restore 9
 891 0430 13010102 		addi	sp,sp,32
 892              		.cfi_def_cfa_offset 0
 893 0434 67800000 		jr	ra
 894              	.LVL71:
 895              	.L40:
 896              		.cfi_restore_state
 123:src/PCB.cpp   ****     }
 897              		.loc 1 123 9 is_stmt 1 discriminator 8
 118:src/PCB.cpp   ****         if(prev) {
 898              		.loc 1 118 5 discriminator 8
 118:src/PCB.cpp   ****         if(prev) {
 899              		.loc 1 118 65 is_stmt 0 discriminator 8
 900 0438 83B70404 		ld	a5,64(s1)
 901              	.LVL72:
 118:src/PCB.cpp   ****         if(prev) {
 902              		.loc 1 118 94 discriminator 8
 903 043c 17070000 		sd	a5,.LANCHOR0+24,a4
 903      2330F700 
 123:src/PCB.cpp   ****     }
 904              		.loc 1 123 13 discriminator 8
 905 0444 13850400 		mv	a0,s1
 118:src/PCB.cpp   ****         if(prev) {
 906              		.loc 1 118 65 discriminator 8
 907 0448 93840700 		mv	s1,a5
 908              	.LVL73:
 909              	.L42:
 118:src/PCB.cpp   ****         if(prev) {
 910              		.loc 1 118 33 is_stmt 1 discriminator 1
 911 044c E38404FC 		beqz	s1,.L38
 912              	.LVL74:
 913              	.LBB85:
 914              	.LBB86:
  84:src/../h/PCB.hpp ****     static void decreaseSleepingTime() {if(sleepyHead) sleepyHead->sleepingTime--;}
 915              		.loc 2 84 38
  84:src/../h/PCB.hpp ****     static void decreaseSleepingTime() {if(sleepyHead) sleepyHead->sleepingTime--;}
 916              		.loc 2 84 45 is_stmt 0
 917 0450 83B78403 		ld	a5,56(s1)
 918              	.LVL75:
 919              	.LBE86:
 920              	.LBE85:
 118:src/PCB.cpp   ****         if(prev) {
 921              		.loc 1 118 33
 922 0454 E39007FC 		bnez	a5,.L38
 119:src/PCB.cpp   ****             prev->nextSleepy = nullptr;
 923              		.loc 1 119 9 is_stmt 1
 924 0458 E30005FE 		beqz	a0,.L40
 120:src/PCB.cpp   ****             Scheduler::put(prev);
 925              		.loc 1 120 13
 120:src/PCB.cpp   ****             Scheduler::put(prev);
 926              		.loc 1 120 30 is_stmt 0
 927 045c 23300504 		sd	zero,64(a0)
 121:src/PCB.cpp   ****         }
 928              		.loc 1 121 13 is_stmt 1
 121:src/PCB.cpp   ****         }
 929              		.loc 1 121 27 is_stmt 0
GAS LISTING /tmp/ccgrUU0r.s 			page 26


 930 0460 97000000 		call	_ZN9Scheduler3putEP3PCB@plt
 930      E7800000 
 931              	.LVL76:
 932 0468 6FF01FFD 		j	.L40
 933              		.cfi_endproc
 934              	.LFE58:
 936              		.align	2
 937              		.globl	_ZN3PCB12changeRegimeEv
 939              	_ZN3PCB12changeRegimeEv:
 940              	.LFB59:
 130:src/PCB.cpp   **** 
 131:src/PCB.cpp   **** void PCB::changeRegime() {
 941              		.loc 1 131 26 is_stmt 1
 942              		.cfi_startproc
 943              	.LVL77:
 944 046c 130101FF 		addi	sp,sp,-16
 945              		.cfi_def_cfa_offset 16
 946 0470 23348100 		sd	s0,8(sp)
 947              		.cfi_offset 8, -8
 948 0474 13040101 		addi	s0,sp,16
 949              		.cfi_def_cfa 8, 0
 132:src/PCB.cpp   ****     if(mainOrConsole)
 950              		.loc 1 132 5
 951              		.loc 1 132 8 is_stmt 0
 952 0478 83478504 		lbu	a5,72(a0)
 953              		.loc 1 132 5
 954 047c 638C0700 		beqz	a5,.L45
 133:src/PCB.cpp   ****         Riscv::ms_sstatus(Riscv::SSTATUS_SPP);
 955              		.loc 1 133 9 is_stmt 1
 956              	.LVL78:
 957              	.LBB87:
 958              	.LBB88:
 140:src/../h/Riscv.hpp **** }
 959              		.loc 3 140 5
 140:src/../h/Riscv.hpp **** }
 960              		.loc 3 140 68 is_stmt 0
 961 0480 93070010 		li	a5,256
 962              	#APP
 963              	# 140 "src/../h/Riscv.hpp" 1
 964              		csrs sstatus, a5
 965              	# 0 "" 2
 966              	.LVL79:
 967              	#NO_APP
 968              	.L44:
 969              	.LBE88:
 970              	.LBE87:
 134:src/PCB.cpp   ****     else
 135:src/PCB.cpp   ****         Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
 136:src/PCB.cpp   **** }
 971              		.loc 1 136 1
 972 0488 03348100 		ld	s0,8(sp)
 973              		.cfi_remember_state
 974              		.cfi_restore 8
 975              		.cfi_def_cfa 2, 16
 976 048c 13010101 		addi	sp,sp,16
 977              		.cfi_def_cfa_offset 0
 978 0490 67800000 		jr	ra
GAS LISTING /tmp/ccgrUU0r.s 			page 27


 979              	.L45:
 980              		.cfi_restore_state
 135:src/PCB.cpp   **** }
 981              		.loc 1 135 9 is_stmt 1
 982              	.LVL80:
 983              	.LBB89:
 984              	.LBB90:
 144:src/../h/Riscv.hpp **** }
 985              		.loc 3 144 5
 144:src/../h/Riscv.hpp **** }
 986              		.loc 3 144 68 is_stmt 0
 987 0494 93070010 		li	a5,256
 988              	#APP
 989              	# 144 "src/../h/Riscv.hpp" 1
 990              		csrc sstatus, a5
 991              	# 0 "" 2
 992              	.LVL81:
 993              	#NO_APP
 994              	.LBE90:
 995              	.LBE89:
 996              		.loc 1 136 1
 997 049c 6FF0DFFE 		j	.L44
 998              		.cfi_endproc
 999              	.LFE59:
 1001              		.globl	_ZN3PCB5regA4E
 1002              		.globl	_ZN3PCB10sleepyHeadE
 1003              		.globl	_ZN3PCB7runningE
 1004              		.globl	_ZN3PCB16timeSliceCounterE
 1005              		.bss
 1006              		.align	3
 1007              		.set	.LANCHOR0,. + 0
 1010              	_ZN3PCB7runningE:
 1011 0000 00000000 		.zero	8
 1011      00000000 
 1014              	_ZN3PCB16timeSliceCounterE:
 1015 0008 00000000 		.zero	8
 1015      00000000 
 1018              	_ZN3PCB5regA4E:
 1019 0010 00000000 		.zero	8
 1019      00000000 
 1022              	_ZN3PCB10sleepyHeadE:
 1023 0018 00000000 		.zero	8
 1023      00000000 
 1024              		.text
 1025              	.Letext0:
 1026              		.file 4 "src/../h/../lib/hw.h"
 1027              		.file 5 "src/../h/../h/MemoryAllocator.hpp"
 1028              		.file 6 "src/../h/Scheduler.hpp"
 1029              		.file 7 "src/../h/Queue.hpp"
 1030              		.file 8 "src/../h/syscall_c.hpp"
 5163              		.align	3
 5166              	DW.ref.__gxx_personality_v0:
 5167 0000 00000000 		.dword	__gxx_personality_v0
 5167      00000000 
 5168              		.ident	"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04) 9.4.0"
 5169              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccgrUU0r.s 			page 28


DEFINED SYMBOLS
                            *ABS*:0000000000000000 PCB.cpp
     /tmp/ccgrUU0r.s:9      .text:0000000000000000 _ZN3PCB13threadWrapperEv
     /tmp/ccgrUU0r.s:13     .text:0000000000000000 .L0 
     /tmp/ccgrUU0r.s:14     .text:0000000000000000 .L0 
     /tmp/ccgrUU0r.s:15     .text:0000000000000004 .L0 
     /tmp/ccgrUU0r.s:19     .text:0000000000000010 .L0 
     /tmp/ccgrUU0r.s:20     .text:0000000000000010 .L0 
     /tmp/ccgrUU0r.s:21     .text:0000000000000010 .L0 
     /tmp/ccgrUU0r.s:23     .text:0000000000000014 .L0 
     /tmp/ccgrUU0r.s:25     .text:0000000000000014 .L0 
     /tmp/ccgrUU0r.s:26     .text:0000000000000014 .L0 
     /tmp/ccgrUU0r.s:29     .text:000000000000001c .L0 
     /tmp/ccgrUU0r.s:30     .text:000000000000001c .L0 
     /tmp/ccgrUU0r.s:34     .text:000000000000002c .L0 
     /tmp/ccgrUU0r.s:38     .text:0000000000000034 .L0 
     /tmp/ccgrUU0r.s:39     .text:0000000000000034 .L0 
     /tmp/ccgrUU0r.s:41     .text:0000000000000038 .L0 
     /tmp/ccgrUU0r.s:42     .text:0000000000000038 .L0 
     /tmp/ccgrUU0r.s:48     .text:000000000000003c .L0 
     /tmp/ccgrUU0r.s:49     .text:000000000000003c .L0 
     /tmp/ccgrUU0r.s:55     .text:0000000000000044 .L0 
     /tmp/ccgrUU0r.s:56     .text:0000000000000044 .L0 
     /tmp/ccgrUU0r.s:59     .text:000000000000004c .L0 
     /tmp/ccgrUU0r.s:60     .text:0000000000000050 .L0 
     /tmp/ccgrUU0r.s:62     .text:0000000000000054 .L0 
     /tmp/ccgrUU0r.s:63     .text:0000000000000054 .L0 
     /tmp/ccgrUU0r.s:65     .text:0000000000000058 .L0 
     /tmp/ccgrUU0r.s:67     .text:000000000000005c .L0 
     /tmp/ccgrUU0r.s:69     .text:0000000000000060 .L0 
     /tmp/ccgrUU0r.s:75     .text:0000000000000060 _ZN3PCB8dispatchEv
     /tmp/ccgrUU0r.s:78     .text:0000000000000060 .L0 
     /tmp/ccgrUU0r.s:79     .text:0000000000000060 .L0 
     /tmp/ccgrUU0r.s:80     .text:0000000000000064 .L0 
     /tmp/ccgrUU0r.s:84     .text:0000000000000070 .L0 
     /tmp/ccgrUU0r.s:85     .text:0000000000000070 .L0 
     /tmp/ccgrUU0r.s:86     .text:0000000000000070 .L0 
     /tmp/ccgrUU0r.s:88     .text:0000000000000074 .L0 
     /tmp/ccgrUU0r.s:90     .text:0000000000000074 .L0 
     /tmp/ccgrUU0r.s:91     .text:0000000000000074 .L0 
     /tmp/ccgrUU0r.s:96     .text:000000000000007c .L0 
     /tmp/ccgrUU0r.s:97     .text:000000000000007c .L0 
     /tmp/ccgrUU0r.s:98     .text:000000000000007c .L0 
     /tmp/ccgrUU0r.s:103    .text:0000000000000080 .L0 
     /tmp/ccgrUU0r.s:107    .text:0000000000000088 .L0 
     /tmp/ccgrUU0r.s:108    .text:0000000000000088 .L0 
     /tmp/ccgrUU0r.s:112    .text:0000000000000090 .L0 
     /tmp/ccgrUU0r.s:113    .text:0000000000000090 .L0 
     /tmp/ccgrUU0r.s:117    .text:0000000000000098 .L0 
     /tmp/ccgrUU0r.s:118    .text:0000000000000098 .L0 
     /tmp/ccgrUU0r.s:121    .text:00000000000000a0 .L0 
     /tmp/ccgrUU0r.s:123    .text:00000000000000a8 .L0 
     /tmp/ccgrUU0r.s:125    .text:00000000000000ac .L0 
     /tmp/ccgrUU0r.s:126    .text:00000000000000ac .L0 
     /tmp/ccgrUU0r.s:129    .text:00000000000000b4 .L0 
     /tmp/ccgrUU0r.s:130    .text:00000000000000b4 .L0 
     /tmp/ccgrUU0r.s:137    .text:00000000000000cc .L0 
GAS LISTING /tmp/ccgrUU0r.s 			page 29


     /tmp/ccgrUU0r.s:138    .text:00000000000000d0 .L0 
     /tmp/ccgrUU0r.s:139    .text:00000000000000d0 .L0 
     /tmp/ccgrUU0r.s:141    .text:00000000000000d4 .L0 
     /tmp/ccgrUU0r.s:142    .text:00000000000000d4 .L0 
     /tmp/ccgrUU0r.s:144    .text:00000000000000d8 .L0 
     /tmp/ccgrUU0r.s:147    .text:00000000000000dc .L0 
     /tmp/ccgrUU0r.s:151    .text:00000000000000e0 .L0 
     /tmp/ccgrUU0r.s:153    .text:00000000000000e0 .L0 
     /tmp/ccgrUU0r.s:154    .text:00000000000000e0 .L0 
     /tmp/ccgrUU0r.s:158    .text:00000000000000f0 .L0 
     /tmp/ccgrUU0r.s:164    .text:00000000000000f0 _ZN3PCBnwEm
     /tmp/ccgrUU0r.s:167    .text:00000000000000f0 .L0 
     /tmp/ccgrUU0r.s:169    .text:00000000000000f0 .L0 
     /tmp/ccgrUU0r.s:170    .text:00000000000000f4 .L0 
     /tmp/ccgrUU0r.s:173    .text:00000000000000fc .L0 
     /tmp/ccgrUU0r.s:174    .text:00000000000000fc .L0 
     /tmp/ccgrUU0r.s:176    .text:0000000000000100 .L0 
     /tmp/ccgrUU0r.s:178    .text:0000000000000100 .L0 
     /tmp/ccgrUU0r.s:179    .text:0000000000000100 .L0 
     /tmp/ccgrUU0r.s:182    .text:0000000000000108 .L0 
     /tmp/ccgrUU0r.s:183    .text:000000000000010c .L0 
     /tmp/ccgrUU0r.s:185    .text:0000000000000110 .L0 
     /tmp/ccgrUU0r.s:186    .text:0000000000000110 .L0 
     /tmp/ccgrUU0r.s:188    .text:0000000000000114 .L0 
     /tmp/ccgrUU0r.s:190    .text:0000000000000118 .L0 
     /tmp/ccgrUU0r.s:196    .text:0000000000000118 _ZN3PCBdlEPv
     /tmp/ccgrUU0r.s:199    .text:0000000000000118 .L0 
     /tmp/ccgrUU0r.s:201    .text:0000000000000118 .L0 
     /tmp/ccgrUU0r.s:202    .text:000000000000011c .L0 
     /tmp/ccgrUU0r.s:205    .text:0000000000000124 .L0 
     /tmp/ccgrUU0r.s:206    .text:0000000000000124 .L0 
     /tmp/ccgrUU0r.s:208    .text:0000000000000128 .L0 
     /tmp/ccgrUU0r.s:210    .text:0000000000000128 .L0 
     /tmp/ccgrUU0r.s:211    .text:0000000000000128 .L0 
     /tmp/ccgrUU0r.s:214    .text:0000000000000130 .L0 
     /tmp/ccgrUU0r.s:215    .text:0000000000000134 .L0 
     /tmp/ccgrUU0r.s:217    .text:0000000000000138 .L0 
     /tmp/ccgrUU0r.s:218    .text:0000000000000138 .L0 
     /tmp/ccgrUU0r.s:220    .text:000000000000013c .L0 
     /tmp/ccgrUU0r.s:222    .text:0000000000000140 .L0 
     /tmp/ccgrUU0r.s:228    .text:0000000000000140 _ZN3PCB13threadCreateHEv
     /tmp/ccgrUU0r.s:231    .text:0000000000000140 .L0 
     /tmp/ccgrUU0r.s:232    .text:0000000000000140 .L0 
     /tmp/ccgrUU0r.s:233    .text:0000000000000144 .L0 
     /tmp/ccgrUU0r.s:239    .text:0000000000000158 .L0 
     /tmp/ccgrUU0r.s:240    .text:0000000000000158 .L0 
     /tmp/ccgrUU0r.s:241    .text:0000000000000158 .L0 
     /tmp/ccgrUU0r.s:242    .text:0000000000000158 .L0 
     /tmp/ccgrUU0r.s:243    .text:0000000000000158 .L0 
     /tmp/ccgrUU0r.s:245    .text:000000000000015c .L0 
     /tmp/ccgrUU0r.s:247    .text:000000000000015c .L0 
     /tmp/ccgrUU0r.s:248    .text:000000000000015c .L0 
     /tmp/ccgrUU0r.s:249    .text:000000000000015c .L0 
     /tmp/ccgrUU0r.s:250    .text:000000000000015c .L0 
         src/PCB.cpp:48     .text:000000000000015c .L0 
     /tmp/ccgrUU0r.s:257    .text:0000000000000160 .L0 
         src/PCB.cpp:49     .text:0000000000000160 .L0 
GAS LISTING /tmp/ccgrUU0r.s 			page 30


     /tmp/ccgrUU0r.s:263    .text:0000000000000164 .L0 
         src/PCB.cpp:50     .text:0000000000000164 .L0 
     /tmp/ccgrUU0r.s:269    .text:0000000000000168 .L0 
     /tmp/ccgrUU0r.s:271    .text:0000000000000168 .L0 
     /tmp/ccgrUU0r.s:279    .text:000000000000017c .L0 
     /tmp/ccgrUU0r.s:286    .text:0000000000000198 .L0 
     /tmp/ccgrUU0r.s:290    .text:00000000000001a0 .L0 
     /tmp/ccgrUU0r.s:301    .text:00000000000001bc .L0 
     /tmp/ccgrUU0r.s:302    .text:00000000000001bc .L0 
     /tmp/ccgrUU0r.s:304    .text:00000000000001c0 .L0 
     /tmp/ccgrUU0r.s:309    .text:00000000000001c4 .L0 
     /tmp/ccgrUU0r.s:310    .text:00000000000001c4 .L0 
     /tmp/ccgrUU0r.s:311    .text:00000000000001c4 .L0 
     /tmp/ccgrUU0r.s:316    .text:00000000000001cc .L0 
         src/PCB.cpp:59     .text:00000000000001cc .L0 
     /tmp/ccgrUU0r.s:327    .text:00000000000001d0 .L0 
     /tmp/ccgrUU0r.s:328    .text:00000000000001d0 .L0 
     /tmp/ccgrUU0r.s:329    .text:00000000000001d0 .L0 
  src/../h/Riscv.hpp:159    .text:00000000000001d0 .L0 
     /tmp/ccgrUU0r.s:336    .text:00000000000001d4 .L0 
     /tmp/ccgrUU0r.s:338    .text:00000000000001d4 .L0 
  src/../h/Riscv.hpp:160    .text:00000000000001e0 .L0 
     /tmp/ccgrUU0r.s:346    .text:00000000000001e4 .L0 
  src/../h/Riscv.hpp:161    .text:00000000000001e4 .L0 
     /tmp/ccgrUU0r.s:351    .text:00000000000001e8 .L0 
  src/../h/Riscv.hpp:162    .text:00000000000001e8 .L0 
     /tmp/ccgrUU0r.s:360    .text:00000000000001ec .L0 
     /tmp/ccgrUU0r.s:361    .text:00000000000001f0 .L0 
     /tmp/ccgrUU0r.s:362    .text:00000000000001f0 .L0 
     /tmp/ccgrUU0r.s:364    .text:00000000000001f4 .L0 
     /tmp/ccgrUU0r.s:365    .text:00000000000001f4 .L0 
     /tmp/ccgrUU0r.s:367    .text:00000000000001f8 .L0 
     /tmp/ccgrUU0r.s:370    .text:00000000000001fc .L0 
     /tmp/ccgrUU0r.s:373    .text:0000000000000200 .L0 
     /tmp/ccgrUU0r.s:376    .text:0000000000000204 .L0 
     /tmp/ccgrUU0r.s:380    .text:0000000000000208 .L0 
     /tmp/ccgrUU0r.s:382    .text:0000000000000208 .L0 
         src/PCB.cpp:56     .text:0000000000000208 .L0 
     /tmp/ccgrUU0r.s:389    .text:0000000000000210 .L0 
     /tmp/ccgrUU0r.s:395    .text:0000000000000210 _ZN3PCB11threadExitHEv
     /tmp/ccgrUU0r.s:398    .text:0000000000000210 .L0 
     /tmp/ccgrUU0r.s:399    .text:0000000000000210 .L0 
     /tmp/ccgrUU0r.s:400    .text:0000000000000214 .L0 
     /tmp/ccgrUU0r.s:403    .text:000000000000021c .L0 
     /tmp/ccgrUU0r.s:404    .text:000000000000021c .L0 
     /tmp/ccgrUU0r.s:406    .text:0000000000000220 .L0 
     /tmp/ccgrUU0r.s:408    .text:0000000000000220 .L0 
     /tmp/ccgrUU0r.s:409    .text:0000000000000220 .L0 
     /tmp/ccgrUU0r.s:412    .text:0000000000000228 .L0 
         src/PCB.cpp:66     .text:0000000000000228 .L0 
     /tmp/ccgrUU0r.s:421    .text:000000000000022c .L0 
     /tmp/ccgrUU0r.s:422    .text:000000000000022c .L0 
     /tmp/ccgrUU0r.s:423    .text:000000000000022c .L0 
  src/../h/Riscv.hpp:159    .text:000000000000022c .L0 
     /tmp/ccgrUU0r.s:430    .text:0000000000000230 .L0 
     /tmp/ccgrUU0r.s:432    .text:0000000000000230 .L0 
  src/../h/Riscv.hpp:160    .text:000000000000023c .L0 
GAS LISTING /tmp/ccgrUU0r.s 			page 31


     /tmp/ccgrUU0r.s:440    .text:0000000000000240 .L0 
  src/../h/Riscv.hpp:161    .text:0000000000000240 .L0 
     /tmp/ccgrUU0r.s:445    .text:0000000000000244 .L0 
  src/../h/Riscv.hpp:162    .text:0000000000000244 .L0 
     /tmp/ccgrUU0r.s:454    .text:0000000000000248 .L0 
     /tmp/ccgrUU0r.s:455    .text:000000000000024c .L0 
     /tmp/ccgrUU0r.s:457    .text:0000000000000250 .L0 
     /tmp/ccgrUU0r.s:458    .text:0000000000000250 .L0 
     /tmp/ccgrUU0r.s:460    .text:0000000000000254 .L0 
     /tmp/ccgrUU0r.s:462    .text:0000000000000258 .L0 
     /tmp/ccgrUU0r.s:468    .text:0000000000000258 _ZN3PCB15threadDispatchHEv
     /tmp/ccgrUU0r.s:471    .text:0000000000000258 .L0 
     /tmp/ccgrUU0r.s:472    .text:0000000000000258 .L0 
     /tmp/ccgrUU0r.s:473    .text:000000000000025c .L0 
     /tmp/ccgrUU0r.s:476    .text:0000000000000264 .L0 
     /tmp/ccgrUU0r.s:477    .text:0000000000000264 .L0 
     /tmp/ccgrUU0r.s:479    .text:0000000000000268 .L0 
     /tmp/ccgrUU0r.s:481    .text:0000000000000268 .L0 
     /tmp/ccgrUU0r.s:482    .text:0000000000000268 .L0 
     /tmp/ccgrUU0r.s:484    .text:0000000000000270 .L0 
     /tmp/ccgrUU0r.s:485    .text:0000000000000270 .L0 
     /tmp/ccgrUU0r.s:488    .text:0000000000000278 .L0 
     /tmp/ccgrUU0r.s:489    .text:000000000000027c .L0 
     /tmp/ccgrUU0r.s:491    .text:0000000000000280 .L0 
     /tmp/ccgrUU0r.s:492    .text:0000000000000280 .L0 
     /tmp/ccgrUU0r.s:494    .text:0000000000000284 .L0 
     /tmp/ccgrUU0r.s:496    .text:0000000000000288 .L0 
     /tmp/ccgrUU0r.s:502    .text:0000000000000288 _ZN3PCB11threadJoinHEv
     /tmp/ccgrUU0r.s:505    .text:0000000000000288 .L0 
     /tmp/ccgrUU0r.s:506    .text:0000000000000288 .L0 
     /tmp/ccgrUU0r.s:507    .text:000000000000028c .L0 
     /tmp/ccgrUU0r.s:510    .text:0000000000000294 .L0 
     /tmp/ccgrUU0r.s:511    .text:0000000000000294 .L0 
     /tmp/ccgrUU0r.s:513    .text:0000000000000298 .L0 
     /tmp/ccgrUU0r.s:518    .text:0000000000000298 .L0 
     /tmp/ccgrUU0r.s:519    .text:0000000000000298 .L0 
     /tmp/ccgrUU0r.s:520    .text:0000000000000298 .L0 
     /tmp/ccgrUU0r.s:527    .text:00000000000002a8 .L0 
     /tmp/ccgrUU0r.s:528    .text:00000000000002a8 .L0 
     /tmp/ccgrUU0r.s:531    .text:00000000000002b0 .L0 
     /tmp/ccgrUU0r.s:532    .text:00000000000002b4 .L0 
     /tmp/ccgrUU0r.s:534    .text:00000000000002b8 .L0 
     /tmp/ccgrUU0r.s:535    .text:00000000000002b8 .L0 
     /tmp/ccgrUU0r.s:537    .text:00000000000002bc .L0 
     /tmp/ccgrUU0r.s:539    .text:00000000000002c0 .L0 
     /tmp/ccgrUU0r.s:545    .text:00000000000002c0 _ZN3PCBD2Ev
     /tmp/ccgrUU0r.s:548    .text:00000000000002c0 .L0 
     /tmp/ccgrUU0r.s:5166   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccgrUU0r.s:552    .text:00000000000002c0 .L0 
     /tmp/ccgrUU0r.s:553    .text:00000000000002c4 .L0 
     /tmp/ccgrUU0r.s:556    .text:00000000000002cc .L0 
     /tmp/ccgrUU0r.s:557    .text:00000000000002cc .L0 
     /tmp/ccgrUU0r.s:559    .text:00000000000002d0 .L0 
     /tmp/ccgrUU0r.s:562    .text:00000000000002d0 .L0 
     /tmp/ccgrUU0r.s:563    .text:00000000000002d0 .L0 
     /tmp/ccgrUU0r.s:569    .text:00000000000002dc .L0 
     /tmp/ccgrUU0r.s:570    .text:00000000000002e0 .L0 
GAS LISTING /tmp/ccgrUU0r.s 			page 32


     /tmp/ccgrUU0r.s:572    .text:00000000000002e4 .L0 
     /tmp/ccgrUU0r.s:573    .text:00000000000002e4 .L0 
     /tmp/ccgrUU0r.s:575    .text:00000000000002e8 .L0 
     /tmp/ccgrUU0r.s:577    .text:00000000000002ec .L0 
     /tmp/ccgrUU0r.s:545    .text:00000000000002c0 _ZN3PCBD1Ev
     /tmp/ccgrUU0r.s:593    .text:00000000000002ec _ZN3PCB12insertSleepyEv
     /tmp/ccgrUU0r.s:596    .text:00000000000002ec .L0 
     /tmp/ccgrUU0r.s:597    .text:00000000000002ec .L0 
     /tmp/ccgrUU0r.s:598    .text:00000000000002f0 .L0 
     /tmp/ccgrUU0r.s:600    .text:00000000000002f4 .L0 
     /tmp/ccgrUU0r.s:602    .text:00000000000002f8 .L0 
     /tmp/ccgrUU0r.s:604    .text:00000000000002f8 .L0 
     /tmp/ccgrUU0r.s:605    .text:00000000000002f8 .L0 
     /tmp/ccgrUU0r.s:611    .text:0000000000000304 .L0 
     /tmp/ccgrUU0r.s:612    .text:0000000000000304 .L0 
     /tmp/ccgrUU0r.s:618    .text:000000000000030c .L0 
     /tmp/ccgrUU0r.s:620    .text:000000000000030c .L0 
     /tmp/ccgrUU0r.s:621    .text:000000000000030c .L0 
     /tmp/ccgrUU0r.s:625    .text:0000000000000310 .L0 
     /tmp/ccgrUU0r.s:630    .text:0000000000000314 .L0 
     /tmp/ccgrUU0r.s:635    .text:0000000000000318 .L0 
     /tmp/ccgrUU0r.s:636    .text:0000000000000318 .L0 
     /tmp/ccgrUU0r.s:637    .text:0000000000000318 .L0 
     /tmp/ccgrUU0r.s:642    .text:000000000000031c .L0 
     /tmp/ccgrUU0r.s:647    .text:0000000000000324 .L0 
     /tmp/ccgrUU0r.s:648    .text:0000000000000324 .L0 
     /tmp/ccgrUU0r.s:653    .text:0000000000000328 .L0 
     /tmp/ccgrUU0r.s:657    .text:000000000000032c .L0 
     /tmp/ccgrUU0r.s:658    .text:000000000000032c .L0 
     /tmp/ccgrUU0r.s:660    .text:000000000000032c .L0 
     /tmp/ccgrUU0r.s:661    .text:000000000000032c .L0 
     /tmp/ccgrUU0r.s:666    .text:0000000000000330 .L0 
     /tmp/ccgrUU0r.s:667    .text:0000000000000330 .L0 
     /tmp/ccgrUU0r.s:672    .text:0000000000000334 .L0 
     /tmp/ccgrUU0r.s:673    .text:0000000000000334 .L0 
     /tmp/ccgrUU0r.s:674    .text:0000000000000334 .L0 
     /tmp/ccgrUU0r.s:676    .text:0000000000000338 .L0 
     /tmp/ccgrUU0r.s:679    .text:000000000000033c .L0 
     /tmp/ccgrUU0r.s:682    .text:0000000000000340 .L0 
     /tmp/ccgrUU0r.s:683    .text:0000000000000340 .L0 
     /tmp/ccgrUU0r.s:688    .text:0000000000000344 .L0 
     /tmp/ccgrUU0r.s:689    .text:0000000000000344 .L0 
     /tmp/ccgrUU0r.s:690    .text:0000000000000344 .L0 
     /tmp/ccgrUU0r.s:697    .text:0000000000000348 .L0 
     /tmp/ccgrUU0r.s:698    .text:0000000000000348 .L0 
     /tmp/ccgrUU0r.s:703    .text:000000000000034c .L0 
     /tmp/ccgrUU0r.s:704    .text:000000000000034c .L0 
     /tmp/ccgrUU0r.s:711    .text:0000000000000350 .L0 
     /tmp/ccgrUU0r.s:713    .text:0000000000000354 .L0 
     /tmp/ccgrUU0r.s:714    .text:0000000000000354 .L0 
     /tmp/ccgrUU0r.s:719    .text:0000000000000360 .L0 
     /tmp/ccgrUU0r.s:720    .text:0000000000000364 .L0 
     /tmp/ccgrUU0r.s:721    .text:0000000000000364 .L0 
     /tmp/ccgrUU0r.s:722    .text:0000000000000364 .L0 
     /tmp/ccgrUU0r.s:724    .text:0000000000000368 .L0 
     /tmp/ccgrUU0r.s:728    .text:000000000000036c .L0 
     /tmp/ccgrUU0r.s:730    .text:000000000000036c .L0 
GAS LISTING /tmp/ccgrUU0r.s 			page 33


     /tmp/ccgrUU0r.s:731    .text:000000000000036c .L0 
     /tmp/ccgrUU0r.s:736    .text:0000000000000380 .L0 
     /tmp/ccgrUU0r.s:742    .text:0000000000000380 _ZN3PCB10timeSleepHEv
     /tmp/ccgrUU0r.s:745    .text:0000000000000380 .L0 
     /tmp/ccgrUU0r.s:746    .text:0000000000000380 .L0 
     /tmp/ccgrUU0r.s:747    .text:0000000000000384 .L0 
     /tmp/ccgrUU0r.s:751    .text:0000000000000390 .L0 
     /tmp/ccgrUU0r.s:752    .text:0000000000000390 .L0 
     /tmp/ccgrUU0r.s:753    .text:0000000000000390 .L0 
     /tmp/ccgrUU0r.s:755    .text:0000000000000394 .L0 
     /tmp/ccgrUU0r.s:757    .text:0000000000000394 .L0 
     /tmp/ccgrUU0r.s:758    .text:0000000000000394 .L0 
         src/PCB.cpp:82     .text:0000000000000394 .L0 
     /tmp/ccgrUU0r.s:765    .text:0000000000000398 .L0 
     /tmp/ccgrUU0r.s:767    .text:0000000000000398 .L0 
     /tmp/ccgrUU0r.s:770    .text:00000000000003a4 .L0 
     /tmp/ccgrUU0r.s:771    .text:00000000000003a4 .L0 
     /tmp/ccgrUU0r.s:776    .text:00000000000003a8 .L0 
     /tmp/ccgrUU0r.s:777    .text:00000000000003a8 .L0 
     /tmp/ccgrUU0r.s:782    .text:00000000000003ac .L0 
     /tmp/ccgrUU0r.s:783    .text:00000000000003ac .L0 
     /tmp/ccgrUU0r.s:786    .text:00000000000003b4 .L0 
     /tmp/ccgrUU0r.s:787    .text:00000000000003b4 .L0 
     /tmp/ccgrUU0r.s:790    .text:00000000000003bc .L0 
         src/PCB.cpp:87     .text:00000000000003bc .L0 
     /tmp/ccgrUU0r.s:799    .text:00000000000003c0 .L0 
     /tmp/ccgrUU0r.s:800    .text:00000000000003c0 .L0 
     /tmp/ccgrUU0r.s:801    .text:00000000000003c0 .L0 
  src/../h/Riscv.hpp:159    .text:00000000000003c0 .L0 
     /tmp/ccgrUU0r.s:808    .text:00000000000003c4 .L0 
     /tmp/ccgrUU0r.s:810    .text:00000000000003c4 .L0 
  src/../h/Riscv.hpp:160    .text:00000000000003cc .L0 
     /tmp/ccgrUU0r.s:818    .text:00000000000003d0 .L0 
  src/../h/Riscv.hpp:161    .text:00000000000003d0 .L0 
     /tmp/ccgrUU0r.s:823    .text:00000000000003d4 .L0 
  src/../h/Riscv.hpp:162    .text:00000000000003d4 .L0 
     /tmp/ccgrUU0r.s:832    .text:00000000000003d8 .L0 
     /tmp/ccgrUU0r.s:833    .text:00000000000003dc .L0 
     /tmp/ccgrUU0r.s:835    .text:00000000000003e0 .L0 
     /tmp/ccgrUU0r.s:836    .text:00000000000003e0 .L0 
     /tmp/ccgrUU0r.s:838    .text:00000000000003e4 .L0 
     /tmp/ccgrUU0r.s:840    .text:00000000000003e8 .L0 
     /tmp/ccgrUU0r.s:842    .text:00000000000003ec .L0 
     /tmp/ccgrUU0r.s:848    .text:00000000000003ec _ZN3PCB12removeSleepyEv
     /tmp/ccgrUU0r.s:851    .text:00000000000003ec .L0 
     /tmp/ccgrUU0r.s:852    .text:00000000000003ec .L0 
     /tmp/ccgrUU0r.s:853    .text:00000000000003f0 .L0 
     /tmp/ccgrUU0r.s:857    .text:00000000000003fc .L0 
     /tmp/ccgrUU0r.s:858    .text:00000000000003fc .L0 
     /tmp/ccgrUU0r.s:859    .text:00000000000003fc .L0 
     /tmp/ccgrUU0r.s:861    .text:0000000000000400 .L0 
     /tmp/ccgrUU0r.s:863    .text:0000000000000400 .L0 
     /tmp/ccgrUU0r.s:864    .text:0000000000000400 .L0 
     /tmp/ccgrUU0r.s:866    .text:0000000000000408 .L0 
     /tmp/ccgrUU0r.s:868    .text:000000000000040c .L0 
     /tmp/ccgrUU0r.s:873    .text:0000000000000414 .L0 
     /tmp/ccgrUU0r.s:875    .text:0000000000000418 .L0 
GAS LISTING /tmp/ccgrUU0r.s 			page 34


     /tmp/ccgrUU0r.s:876    .text:0000000000000418 .L0 
     /tmp/ccgrUU0r.s:878    .text:000000000000041c .L0 
     /tmp/ccgrUU0r.s:879    .text:000000000000041c .L0 
     /tmp/ccgrUU0r.s:883    .text:0000000000000424 .L0 
     /tmp/ccgrUU0r.s:884    .text:0000000000000428 .L0 
     /tmp/ccgrUU0r.s:885    .text:0000000000000428 .L0 
     /tmp/ccgrUU0r.s:887    .text:000000000000042c .L0 
     /tmp/ccgrUU0r.s:888    .text:000000000000042c .L0 
     /tmp/ccgrUU0r.s:890    .text:0000000000000430 .L0 
     /tmp/ccgrUU0r.s:892    .text:0000000000000434 .L0 
     /tmp/ccgrUU0r.s:896    .text:0000000000000438 .L0 
     /tmp/ccgrUU0r.s:898    .text:0000000000000438 .L0 
     /tmp/ccgrUU0r.s:899    .text:0000000000000438 .L0 
     /tmp/ccgrUU0r.s:900    .text:0000000000000438 .L0 
     /tmp/ccgrUU0r.s:903    .text:000000000000043c .L0 
     /tmp/ccgrUU0r.s:905    .text:0000000000000444 .L0 
     /tmp/ccgrUU0r.s:907    .text:0000000000000448 .L0 
     /tmp/ccgrUU0r.s:911    .text:000000000000044c .L0 
     /tmp/ccgrUU0r.s:916    .text:0000000000000450 .L0 
     /tmp/ccgrUU0r.s:917    .text:0000000000000450 .L0 
     /tmp/ccgrUU0r.s:922    .text:0000000000000454 .L0 
     /tmp/ccgrUU0r.s:924    .text:0000000000000458 .L0 
     /tmp/ccgrUU0r.s:926    .text:000000000000045c .L0 
     /tmp/ccgrUU0r.s:927    .text:000000000000045c .L0 
     /tmp/ccgrUU0r.s:929    .text:0000000000000460 .L0 
     /tmp/ccgrUU0r.s:930    .text:0000000000000460 .L0 
     /tmp/ccgrUU0r.s:933    .text:000000000000046c .L0 
     /tmp/ccgrUU0r.s:939    .text:000000000000046c _ZN3PCB12changeRegimeEv
     /tmp/ccgrUU0r.s:942    .text:000000000000046c .L0 
     /tmp/ccgrUU0r.s:944    .text:000000000000046c .L0 
     /tmp/ccgrUU0r.s:945    .text:0000000000000470 .L0 
     /tmp/ccgrUU0r.s:947    .text:0000000000000474 .L0 
     /tmp/ccgrUU0r.s:949    .text:0000000000000478 .L0 
     /tmp/ccgrUU0r.s:951    .text:0000000000000478 .L0 
     /tmp/ccgrUU0r.s:952    .text:0000000000000478 .L0 
     /tmp/ccgrUU0r.s:954    .text:000000000000047c .L0 
     /tmp/ccgrUU0r.s:959    .text:0000000000000480 .L0 
     /tmp/ccgrUU0r.s:960    .text:0000000000000480 .L0 
     /tmp/ccgrUU0r.s:961    .text:0000000000000480 .L0 
     /tmp/ccgrUU0r.s:972    .text:0000000000000488 .L0 
     /tmp/ccgrUU0r.s:973    .text:000000000000048c .L0 
     /tmp/ccgrUU0r.s:974    .text:000000000000048c .L0 
     /tmp/ccgrUU0r.s:975    .text:000000000000048c .L0 
     /tmp/ccgrUU0r.s:977    .text:0000000000000490 .L0 
     /tmp/ccgrUU0r.s:980    .text:0000000000000494 .L0 
     /tmp/ccgrUU0r.s:985    .text:0000000000000494 .L0 
     /tmp/ccgrUU0r.s:986    .text:0000000000000494 .L0 
     /tmp/ccgrUU0r.s:987    .text:0000000000000494 .L0 
     /tmp/ccgrUU0r.s:997    .text:000000000000049c .L0 
     /tmp/ccgrUU0r.s:998    .text:00000000000004a0 .L0 
     /tmp/ccgrUU0r.s:1018   .bss:0000000000000010 _ZN3PCB5regA4E
     /tmp/ccgrUU0r.s:1022   .bss:0000000000000018 _ZN3PCB10sleepyHeadE
     /tmp/ccgrUU0r.s:1010   .bss:0000000000000000 _ZN3PCB7runningE
     /tmp/ccgrUU0r.s:1014   .bss:0000000000000008 _ZN3PCB16timeSliceCounterE
     /tmp/ccgrUU0r.s:1007   .bss:0000000000000000 .LANCHOR0
     /tmp/ccgrUU0r.s:1031   .text:00000000000004a0 .L0 
     /tmp/ccgrUU0r.s:30     .text:000000000000001c .L0 
GAS LISTING /tmp/ccgrUU0r.s 			page 35


     /tmp/ccgrUU0r.s:91     .text:0000000000000074 .L0 
     /tmp/ccgrUU0r.s:121    .text:00000000000000a0 .L0 
     /tmp/ccgrUU0r.s:130    .text:00000000000000b4 .L0 
     /tmp/ccgrUU0r.s:274    .text:0000000000000174 .L0 
     /tmp/ccgrUU0r.s:283    .text:000000000000018c .L0 
     /tmp/ccgrUU0r.s:338    .text:00000000000001d4 .L0 
     /tmp/ccgrUU0r.s:432    .text:0000000000000230 .L0 
     /tmp/ccgrUU0r.s:482    .text:0000000000000268 .L0 
     /tmp/ccgrUU0r.s:520    .text:0000000000000298 .L0 
     /tmp/ccgrUU0r.s:605    .text:00000000000002f8 .L0 
     /tmp/ccgrUU0r.s:642    .text:000000000000031c .L0 
     /tmp/ccgrUU0r.s:714    .text:0000000000000354 .L0 
     /tmp/ccgrUU0r.s:731    .text:000000000000036c .L0 
     /tmp/ccgrUU0r.s:767    .text:0000000000000398 .L0 
     /tmp/ccgrUU0r.s:864    .text:0000000000000400 .L0 
     /tmp/ccgrUU0r.s:903    .text:000000000000043c .L0 
     /tmp/ccgrUU0r.s:115    .text:0000000000000098 .L4
     /tmp/ccgrUU0r.s:150    .text:00000000000000e0 .L7
     /tmp/ccgrUU0r.s:135    .text:00000000000000cc .L3
     /tmp/ccgrUU0r.s:379    .text:0000000000000208 .L16
     /tmp/ccgrUU0r.s:322    .text:00000000000001d0 .L14
     /tmp/ccgrUU0r.s:706    .text:0000000000000350 .L26
     /tmp/ccgrUU0r.s:680    .text:0000000000000340 .L32
     /tmp/ccgrUU0r.s:627    .text:0000000000000314 .L28
     /tmp/ccgrUU0r.s:727    .text:000000000000036c .L33
     /tmp/ccgrUU0r.s:717    .text:0000000000000360 .L25
     /tmp/ccgrUU0r.s:881    .text:0000000000000424 .L36
     /tmp/ccgrUU0r.s:909    .text:000000000000044c .L42
     /tmp/ccgrUU0r.s:871    .text:0000000000000414 .L38
     /tmp/ccgrUU0r.s:895    .text:0000000000000438 .L40
     /tmp/ccgrUU0r.s:979    .text:0000000000000494 .L45
     /tmp/ccgrUU0r.s:968    .text:0000000000000488 .L44
     /tmp/ccgrUU0r.s:3037   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccgrUU0r.s:5068   .debug_str:0000000000000a34 .LASF199
     /tmp/ccgrUU0r.s:5094   .debug_str:0000000000000bc9 .LASF200
     /tmp/ccgrUU0r.s:5078   .debug_str:0000000000000b30 .LASF201
     /tmp/ccgrUU0r.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccgrUU0r.s:1025   .text:00000000000004a0 .Letext0
     /tmp/ccgrUU0r.s:4726   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccgrUU0r.s:4866   .debug_str:0000000000000415 .LASF0
     /tmp/ccgrUU0r.s:4896   .debug_str:0000000000000510 .LASF1
     /tmp/ccgrUU0r.s:5008   .debug_str:0000000000000869 .LASF2
     /tmp/ccgrUU0r.s:5016   .debug_str:00000000000008a4 .LASF4
     /tmp/ccgrUU0r.s:4878   .debug_str:000000000000046d .LASF3
     /tmp/ccgrUU0r.s:4740   .debug_str:0000000000000043 .LASF5
     /tmp/ccgrUU0r.s:4984   .debug_str:00000000000007c3 .LASF6
     /tmp/ccgrUU0r.s:4970   .debug_str:0000000000000762 .LASF7
     /tmp/ccgrUU0r.s:4884   .debug_str:00000000000004ae .LASF8
     /tmp/ccgrUU0r.s:4844   .debug_str:000000000000036c .LASF9
     /tmp/ccgrUU0r.s:4852   .debug_str:00000000000003af .LASF10
     /tmp/ccgrUU0r.s:4782   .debug_str:00000000000001b6 .LASF11
     /tmp/ccgrUU0r.s:4834   .debug_str:000000000000033c .LASF12
     /tmp/ccgrUU0r.s:4798   .debug_str:0000000000000222 .LASF13
     /tmp/ccgrUU0r.s:4780   .debug_str:00000000000001a6 .LASF14
     /tmp/ccgrUU0r.s:5052   .debug_str:00000000000009d5 .LASF15
     /tmp/ccgrUU0r.s:4824   .debug_str:00000000000002e4 .LASF16
     /tmp/ccgrUU0r.s:5040   .debug_str:000000000000095d .LASF17
GAS LISTING /tmp/ccgrUU0r.s 			page 36


     /tmp/ccgrUU0r.s:4964   .debug_str:0000000000000731 .LASF40
     /tmp/ccgrUU0r.s:5000   .debug_str:000000000000083e .LASF67
     /tmp/ccgrUU0r.s:4894   .debug_str:000000000000050b .LASF18
     /tmp/ccgrUU0r.s:4784   .debug_str:00000000000001c5 .LASF19
     /tmp/ccgrUU0r.s:4978   .debug_str:0000000000000797 .LASF20
     /tmp/ccgrUU0r.s:4950   .debug_str:00000000000006be .LASF21
     /tmp/ccgrUU0r.s:4864   .debug_str:0000000000000409 .LASF22
     /tmp/ccgrUU0r.s:4762   .debug_str:0000000000000119 .LASF27
     /tmp/ccgrUU0r.s:5148   .debug_str:0000000000000da4 .LASF29
     /tmp/ccgrUU0r.s:5030   .debug_str:0000000000000905 .LASF23
     /tmp/ccgrUU0r.s:5128   .debug_str:0000000000000cee .LASF25
     /tmp/ccgrUU0r.s:4778   .debug_str:000000000000019a .LASF24
     /tmp/ccgrUU0r.s:5046   .debug_str:0000000000000989 .LASF26
     /tmp/ccgrUU0r.s:5086   .debug_str:0000000000000b79 .LASF28
     /tmp/ccgrUU0r.s:5146   .debug_str:0000000000000d83 .LASF30
     /tmp/ccgrUU0r.s:4732   .debug_str:000000000000001b .LASF31
     /tmp/ccgrUU0r.s:5050   .debug_str:00000000000009b5 .LASF32
     /tmp/ccgrUU0r.s:4926   .debug_str:000000000000061f .LASF33
     /tmp/ccgrUU0r.s:4744   .debug_str:0000000000000055 .LASF35
     /tmp/ccgrUU0r.s:5054   .debug_str:00000000000009e1 .LASF34
     /tmp/ccgrUU0r.s:4928   .debug_str:0000000000000629 .LASF36
     /tmp/ccgrUU0r.s:5126   .debug_str:0000000000000ce6 .LASF50
     /tmp/ccgrUU0r.s:4920   .debug_str:00000000000005da .LASF52
     /tmp/ccgrUU0r.s:4840   .debug_str:000000000000035c .LASF37
     /tmp/ccgrUU0r.s:4958   .debug_str:0000000000000701 .LASF38
     /tmp/ccgrUU0r.s:4914   .debug_str:00000000000005b1 .LASF39
     /tmp/ccgrUU0r.s:4842   .debug_str:0000000000000362 .LASF41
     /tmp/ccgrUU0r.s:4796   .debug_str:0000000000000217 .LASF42
     /tmp/ccgrUU0r.s:5142   .debug_str:0000000000000d69 .LASF202
     /tmp/ccgrUU0r.s:4746   .debug_str:0000000000000076 .LASF203
     /tmp/ccgrUU0r.s:4788   .debug_str:00000000000001d4 .LASF43
     /tmp/ccgrUU0r.s:5098   .debug_str:0000000000000bde .LASF204
     /tmp/ccgrUU0r.s:5044   .debug_str:0000000000000984 .LASF44
     /tmp/ccgrUU0r.s:4940   .debug_str:0000000000000676 .LASF45
     /tmp/ccgrUU0r.s:5150   .debug_str:0000000000000dc0 .LASF46
     /tmp/ccgrUU0r.s:4792   .debug_str:00000000000001e7 .LASF47
     /tmp/ccgrUU0r.s:4736   .debug_str:0000000000000029 .LASF48
     /tmp/ccgrUU0r.s:4994   .debug_str:000000000000080c .LASF49
     /tmp/ccgrUU0r.s:5080   .debug_str:0000000000000b53 .LASF51
     /tmp/ccgrUU0r.s:5156   .debug_str:0000000000000de0 .LASF53
     /tmp/ccgrUU0r.s:4916   .debug_str:00000000000005b6 .LASF59
     /tmp/ccgrUU0r.s:5010   .debug_str:0000000000000877 .LASF205
     /tmp/ccgrUU0r.s:5090   .debug_str:0000000000000ba2 .LASF206
     /tmp/ccgrUU0r.s:4836   .debug_str:000000000000034b .LASF54
     /tmp/ccgrUU0r.s:4856   .debug_str:00000000000003c4 .LASF55
     /tmp/ccgrUU0r.s:5152   .debug_str:0000000000000dcd .LASF56
     /tmp/ccgrUU0r.s:4888   .debug_str:00000000000004d4 .LASF57
     /tmp/ccgrUU0r.s:4966   .debug_str:0000000000000741 .LASF58
     /tmp/ccgrUU0r.s:5088   .debug_str:0000000000000b83 .LASF60
     /tmp/ccgrUU0r.s:5158   .debug_str:0000000000000df4 .LASF61
     /tmp/ccgrUU0r.s:4986   .debug_str:00000000000007ca .LASF62
     /tmp/ccgrUU0r.s:5032   .debug_str:0000000000000915 .LASF63
     /tmp/ccgrUU0r.s:4774   .debug_str:0000000000000164 .LASF64
     /tmp/ccgrUU0r.s:4998   .debug_str:0000000000000835 .LASF65
     /tmp/ccgrUU0r.s:4800   .debug_str:0000000000000232 .LASF66
     /tmp/ccgrUU0r.s:4790   .debug_str:00000000000001df .LASF68
     /tmp/ccgrUU0r.s:5060   .debug_str:0000000000000a10 .LASF137
GAS LISTING /tmp/ccgrUU0r.s 			page 37


     /tmp/ccgrUU0r.s:4930   .debug_str:000000000000064a .LASF69
     /tmp/ccgrUU0r.s:5034   .debug_str:0000000000000920 .LASF70
     /tmp/ccgrUU0r.s:5070   .debug_str:0000000000000af8 .LASF71
     /tmp/ccgrUU0r.s:4768   .debug_str:000000000000013d .LASF72
     /tmp/ccgrUU0r.s:4972   .debug_str:0000000000000775 .LASF73
     /tmp/ccgrUU0r.s:4892   .debug_str:0000000000000502 .LASF74
     /tmp/ccgrUU0r.s:5014   .debug_str:0000000000000899 .LASF75
     /tmp/ccgrUU0r.s:5132   .debug_str:0000000000000d2f .LASF76
     /tmp/ccgrUU0r.s:5064   .debug_str:0000000000000a20 .LASF94
     /tmp/ccgrUU0r.s:4862   .debug_str:0000000000000403 .LASF77
     /tmp/ccgrUU0r.s:4814   .debug_str:00000000000002a7 .LASF78
     /tmp/ccgrUU0r.s:4960   .debug_str:000000000000071f .LASF207
     /tmp/ccgrUU0r.s:4734   .debug_str:0000000000000024 .LASF79
     /tmp/ccgrUU0r.s:5144   .debug_str:0000000000000d7d .LASF80
     /tmp/ccgrUU0r.s:5082   .debug_str:0000000000000b59 .LASF81
     /tmp/ccgrUU0r.s:5076   .debug_str:0000000000000b26 .LASF82
     /tmp/ccgrUU0r.s:4880   .debug_str:000000000000047f .LASF83
     /tmp/ccgrUU0r.s:4846   .debug_str:000000000000037c .LASF84
     /tmp/ccgrUU0r.s:4932   .debug_str:0000000000000650 .LASF85
     /tmp/ccgrUU0r.s:5002   .debug_str:0000000000000847 .LASF86
     /tmp/ccgrUU0r.s:4816   .debug_str:00000000000002ad .LASF87
     /tmp/ccgrUU0r.s:5084   .debug_str:0000000000000b61 .LASF208
     /tmp/ccgrUU0r.s:4826   .debug_str:00000000000002fa .LASF88
     /tmp/ccgrUU0r.s:4876   .debug_str:0000000000000460 .LASF89
     /tmp/ccgrUU0r.s:5118   .debug_str:0000000000000c98 .LASF90
     /tmp/ccgrUU0r.s:4946   .debug_str:000000000000069a .LASF91
     /tmp/ccgrUU0r.s:4804   .debug_str:0000000000000266 .LASF92
     /tmp/ccgrUU0r.s:4760   .debug_str:00000000000000f1 .LASF93
     /tmp/ccgrUU0r.s:4812   .debug_str:000000000000029e .LASF96
     /tmp/ccgrUU0r.s:4752   .debug_str:00000000000000a0 .LASF98
     /tmp/ccgrUU0r.s:5026   .debug_str:00000000000008d9 .LASF95
     /tmp/ccgrUU0r.s:4770   .debug_str:0000000000000146 .LASF97
     /tmp/ccgrUU0r.s:4758   .debug_str:00000000000000d8 .LASF99
     /tmp/ccgrUU0r.s:5056   .debug_str:00000000000009ea .LASF100
     /tmp/ccgrUU0r.s:5122   .debug_str:0000000000000cb5 .LASF101
     /tmp/ccgrUU0r.s:5140   .debug_str:0000000000000d63 .LASF102
     /tmp/ccgrUU0r.s:5072   .debug_str:0000000000000b02 .LASF103
     /tmp/ccgrUU0r.s:4900   .debug_str:0000000000000539 .LASF104
     /tmp/ccgrUU0r.s:4802   .debug_str:000000000000024d .LASF105
     /tmp/ccgrUU0r.s:4980   .debug_str:00000000000007a0 .LASF106
     /tmp/ccgrUU0r.s:5110   .debug_str:0000000000000c47 .LASF107
     /tmp/ccgrUU0r.s:4772   .debug_str:0000000000000154 .LASF108
     /tmp/ccgrUU0r.s:5104   .debug_str:0000000000000c08 .LASF109
     /tmp/ccgrUU0r.s:5036   .debug_str:0000000000000928 .LASF110
     /tmp/ccgrUU0r.s:5038   .debug_str:000000000000093d .LASF111
     /tmp/ccgrUU0r.s:4934   .debug_str:000000000000065b .LASF112
     /tmp/ccgrUU0r.s:5116   .debug_str:0000000000000c81 .LASF113
     /tmp/ccgrUU0r.s:4848   .debug_str:0000000000000387 .LASF114
     /tmp/ccgrUU0r.s:4948   .debug_str:00000000000006a6 .LASF115
     /tmp/ccgrUU0r.s:4956   .debug_str:00000000000006f0 .LASF116
     /tmp/ccgrUU0r.s:4794   .debug_str:00000000000001fb .LASF117
     /tmp/ccgrUU0r.s:5138   .debug_str:0000000000000d57 .LASF118
     /tmp/ccgrUU0r.s:4754   .debug_str:00000000000000b3 .LASF119
     /tmp/ccgrUU0r.s:4962   .debug_str:0000000000000724 .LASF120
     /tmp/ccgrUU0r.s:5120   .debug_str:0000000000000c9d .LASF121
     /tmp/ccgrUU0r.s:5100   .debug_str:0000000000000be3 .LASF122
     /tmp/ccgrUU0r.s:5114   .debug_str:0000000000000c68 .LASF123
GAS LISTING /tmp/ccgrUU0r.s 			page 38


     /tmp/ccgrUU0r.s:5066   .debug_str:0000000000000a28 .LASF124
     /tmp/ccgrUU0r.s:4868   .debug_str:0000000000000422 .LASF125
     /tmp/ccgrUU0r.s:4728   .debug_str:0000000000000000 .LASF126
     /tmp/ccgrUU0r.s:4832   .debug_str:0000000000000321 .LASF127
     /tmp/ccgrUU0r.s:4912   .debug_str:00000000000005a5 .LASF128
     /tmp/ccgrUU0r.s:5102   .debug_str:0000000000000bf1 .LASF129
     /tmp/ccgrUU0r.s:4730   .debug_str:0000000000000010 .LASF130
     /tmp/ccgrUU0r.s:4898   .debug_str:0000000000000523 .LASF131
     /tmp/ccgrUU0r.s:4750   .debug_str:0000000000000093 .LASF132
     /tmp/ccgrUU0r.s:4904   .debug_str:000000000000054e .LASF133
     /tmp/ccgrUU0r.s:4822   .debug_str:00000000000002d7 .LASF134
     /tmp/ccgrUU0r.s:5130   .debug_str:0000000000000d17 .LASF135
     /tmp/ccgrUU0r.s:5112   .debug_str:0000000000000c62 .LASF136
     /tmp/ccgrUU0r.s:4828   .debug_str:0000000000000306 .LASF138
     /tmp/ccgrUU0r.s:4830   .debug_str:0000000000000315 .LASF139
     /tmp/ccgrUU0r.s:4890   .debug_str:00000000000004f5 .LASF140
     /tmp/ccgrUU0r.s:4808   .debug_str:0000000000000280 .LASF141
     /tmp/ccgrUU0r.s:4858   .debug_str:00000000000003e6 .LASF142
     /tmp/ccgrUU0r.s:4944   .debug_str:0000000000000682 .LASF143
     /tmp/ccgrUU0r.s:5024   .debug_str:00000000000008cb .LASF144
     /tmp/ccgrUU0r.s:5028   .debug_str:00000000000008ea .LASF145
     /tmp/ccgrUU0r.s:4870   .debug_str:0000000000000439 .LASF146
     /tmp/ccgrUU0r.s:5124   .debug_str:0000000000000ccc .LASF147
     /tmp/ccgrUU0r.s:5096   .debug_str:0000000000000bd5 .LASF148
     /tmp/ccgrUU0r.s:4910   .debug_str:0000000000000590 .LASF152
     /tmp/ccgrUU0r.s:5004   .debug_str:0000000000000855 .LASF149
     /tmp/ccgrUU0r.s:4954   .debug_str:00000000000006db .LASF150
     /tmp/ccgrUU0r.s:4990   .debug_str:00000000000007ed .LASF151
     /tmp/ccgrUU0r.s:4982   .debug_str:00000000000007b0 .LASF153
     /tmp/ccgrUU0r.s:4942   .debug_str:000000000000067b .LASF154
     /tmp/ccgrUU0r.s:4886   .debug_str:00000000000004c1 .LASF155
     /tmp/ccgrUU0r.s:4936   .debug_str:0000000000000666 .LASF156
     /tmp/ccgrUU0r.s:5074   .debug_str:0000000000000b12 .LASF157
     /tmp/ccgrUU0r.s:4938   .debug_str:000000000000066e .LASF158
     /tmp/ccgrUU0r.s:4952   .debug_str:00000000000006c7 .LASF159
     /tmp/ccgrUU0r.s:4902   .debug_str:0000000000000546 .LASF160
     /tmp/ccgrUU0r.s:4996   .debug_str:0000000000000821 .LASF161
     /tmp/ccgrUU0r.s:5154   .debug_str:0000000000000dd8 .LASF162
     /tmp/ccgrUU0r.s:4874   .debug_str:000000000000044c .LASF163
     /tmp/ccgrUU0r.s:5048   .debug_str:00000000000009ae .LASF164
     /tmp/ccgrUU0r.s:5020   .debug_str:00000000000008b1 .LASF165
     /tmp/ccgrUU0r.s:5022   .debug_str:00000000000008c4 .LASF166
     /tmp/ccgrUU0r.s:4820   .debug_str:00000000000002c4 .LASF167
     /tmp/ccgrUU0r.s:5018   .debug_str:00000000000008ab .LASF168
     /tmp/ccgrUU0r.s:4860   .debug_str:00000000000003f1 .LASF169
     /tmp/ccgrUU0r.s:4872   .debug_str:0000000000000446 .LASF170
     /tmp/ccgrUU0r.s:4810   .debug_str:000000000000028c .LASF171
     /tmp/ccgrUU0r.s:4742   .debug_str:000000000000004a .LASF172
     /tmp/ccgrUU0r.s:5012   .debug_str:0000000000000881 .LASF173
     /tmp/ccgrUU0r.s:5006   .debug_str:000000000000085e .LASF174
     /tmp/ccgrUU0r.s:4992   .debug_str:00000000000007f4 .LASF175
     /tmp/ccgrUU0r.s:5062   .debug_str:0000000000000a16 .LASF176
     /tmp/ccgrUU0r.s:5134   .debug_str:0000000000000d3a .LASF177
     /tmp/ccgrUU0r.s:4786   .debug_str:00000000000001ca .LASF178
     /tmp/ccgrUU0r.s:4924   .debug_str:0000000000000609 .LASF179
     /tmp/ccgrUU0r.s:5092   .debug_str:0000000000000bba .LASF180
     /tmp/ccgrUU0r.s:4850   .debug_str:0000000000000393 .LASF181
GAS LISTING /tmp/ccgrUU0r.s 			page 39


     /tmp/ccgrUU0r.s:4764   .debug_str:000000000000011e .LASF182
     /tmp/ccgrUU0r.s:5058   .debug_str:00000000000009f5 .LASF183
     /tmp/ccgrUU0r.s:4976   .debug_str:0000000000000782 .LASF184
     /tmp/ccgrUU0r.s:4882   .debug_str:000000000000048c .LASF185
     /tmp/ccgrUU0r.s:4922   .debug_str:00000000000005f9 .LASF209
     /tmp/ccgrUU0r.s:5108   .debug_str:0000000000000c29 .LASF210
     /tmp/ccgrUU0r.s:4908   .debug_str:0000000000000575 .LASF186
     /tmp/ccgrUU0r.s:4766   .debug_str:000000000000012c .LASF187
     /tmp/ccgrUU0r.s:4968   .debug_str:000000000000074d .LASF188
     /tmp/ccgrUU0r.s:4906   .debug_str:0000000000000566 .LASF189
     /tmp/ccgrUU0r.s:940    .text:000000000000046c .LFB59
     /tmp/ccgrUU0r.s:999    .text:00000000000004a0 .LFE59
     /tmp/ccgrUU0r.s:4838   .debug_str:0000000000000357 .LASF192
     /tmp/ccgrUU0r.s:957    .text:0000000000000480 .LBB87
     /tmp/ccgrUU0r.s:970    .text:0000000000000488 .LBE87
     /tmp/ccgrUU0r.s:4308   .debug_loc:0000000000000000 .LLST39
     /tmp/ccgrUU0r.s:983    .text:0000000000000494 .LBB89
     /tmp/ccgrUU0r.s:995    .text:000000000000049c .LBE89
     /tmp/ccgrUU0r.s:4317   .debug_loc:0000000000000026 .LLST40
     /tmp/ccgrUU0r.s:849    .text:00000000000003ec .LFB58
     /tmp/ccgrUU0r.s:934    .text:000000000000046c .LFE58
     /tmp/ccgrUU0r.s:4748   .debug_str:000000000000008e .LASF190
     /tmp/ccgrUU0r.s:4326   .debug_loc:000000000000004c .LLST36
     /tmp/ccgrUU0r.s:4756   .debug_str:00000000000000d3 .LASF191
     /tmp/ccgrUU0r.s:4345   .debug_loc:00000000000000a8 .LLST37
     /tmp/ccgrUU0r.s:913    .text:0000000000000450 .LBB85
     /tmp/ccgrUU0r.s:920    .text:0000000000000454 .LBE85
     /tmp/ccgrUU0r.s:4360   .debug_loc:00000000000000f1 .LLST38
     /tmp/ccgrUU0r.s:880    .text:0000000000000424 .LVL70
     /tmp/ccgrUU0r.s:931    .text:0000000000000468 .LVL76
     /tmp/ccgrUU0r.s:594    .text:00000000000002ec .LFB57
     /tmp/ccgrUU0r.s:737    .text:0000000000000380 .LFE57
     /tmp/ccgrUU0r.s:4367   .debug_loc:0000000000000114 .LLST21
     /tmp/ccgrUU0r.s:4714   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccgrUU0r.s:4387   .debug_loc:0000000000000171 .LLST24
     /tmp/ccgrUU0r.s:633    .text:0000000000000318 .LBB68
     /tmp/ccgrUU0r.s:640    .text:000000000000031c .LBE68
     /tmp/ccgrUU0r.s:4407   .debug_loc:00000000000001cf .LLST25
     /tmp/ccgrUU0r.s:644    .text:0000000000000324 .LBB70
     /tmp/ccgrUU0r.s:651    .text:0000000000000328 .LBE70
     /tmp/ccgrUU0r.s:4414   .debug_loc:00000000000001f2 .LLST26
     /tmp/ccgrUU0r.s:663    .text:0000000000000330 .LBB72
     /tmp/ccgrUU0r.s:670    .text:0000000000000334 .LBE72
     /tmp/ccgrUU0r.s:4421   .debug_loc:0000000000000215 .LLST27
     /tmp/ccgrUU0r.s:4428   .debug_loc:0000000000000238 .LLST28
     /tmp/ccgrUU0r.s:686    .text:0000000000000344 .LBB74
     /tmp/ccgrUU0r.s:693    .text:0000000000000348 .LBE74
     /tmp/ccgrUU0r.s:4435   .debug_loc:000000000000025b .LLST29
     /tmp/ccgrUU0r.s:700    .text:000000000000034c .LBB76
     /tmp/ccgrUU0r.s:708    .text:0000000000000350 .LBE76
     /tmp/ccgrUU0r.s:4443   .debug_loc:0000000000000280 .LLST30
     /tmp/ccgrUU0r.s:4450   .debug_loc:00000000000002a3 .LLST31
     /tmp/ccgrUU0r.s:608    .text:0000000000000304 .LBB65
     /tmp/ccgrUU0r.s:616    .text:000000000000030c .LBE65
     /tmp/ccgrUU0r.s:4461   .debug_loc:00000000000002d1 .LLST22
     /tmp/ccgrUU0r.s:4469   .debug_loc:00000000000002f5 .LLST23
     /tmp/ccgrUU0r.s:4738   .debug_str:0000000000000039 .LASF193
GAS LISTING /tmp/ccgrUU0r.s 			page 40


     /tmp/ccgrUU0r.s:4806   .debug_str:0000000000000274 .LASF211
     /tmp/ccgrUU0r.s:546    .text:00000000000002c0 .LFB55
     /tmp/ccgrUU0r.s:578    .text:00000000000002ec .LFE55
     /tmp/ccgrUU0r.s:4476   .debug_loc:0000000000000318 .LLST20
     /tmp/ccgrUU0r.s:566    .text:00000000000002dc .LVL42
     /tmp/ccgrUU0r.s:743    .text:0000000000000380 .LFB53
     /tmp/ccgrUU0r.s:843    .text:00000000000003ec .LFE53
     /tmp/ccgrUU0r.s:4974   .debug_str:000000000000077d .LASF194
     /tmp/ccgrUU0r.s:4490   .debug_loc:0000000000000351 .LLST32
     /tmp/ccgrUU0r.s:773    .text:00000000000003a8 .LBB81
     /tmp/ccgrUU0r.s:780    .text:00000000000003ac .LBE81
     /tmp/ccgrUU0r.s:4497   .debug_loc:0000000000000374 .LLST33
     /tmp/ccgrUU0r.s:4504   .debug_loc:0000000000000397 .LLST34
     /tmp/ccgrUU0r.s:797    .text:00000000000003c0 .LBB83
     /tmp/ccgrUU0r.s:830    .text:00000000000003d8 .LBE83
     /tmp/ccgrUU0r.s:4511   .debug_loc:00000000000003ba .LLST35
     /tmp/ccgrUU0r.s:784    .text:00000000000003b4 .LVL65
     /tmp/ccgrUU0r.s:788    .text:00000000000003bc .LVL66
     /tmp/ccgrUU0r.s:503    .text:0000000000000288 .LFB52
     /tmp/ccgrUU0r.s:540    .text:00000000000002c0 .LFE52
     /tmp/ccgrUU0r.s:516    .text:0000000000000298 .LBB62
     /tmp/ccgrUU0r.s:525    .text:00000000000002a8 .LBE62
     /tmp/ccgrUU0r.s:4518   .debug_loc:00000000000003dd .LLST18
     /tmp/ccgrUU0r.s:4526   .debug_loc:0000000000000401 .LLST19
     /tmp/ccgrUU0r.s:529    .text:00000000000002b0 .LVL39
     /tmp/ccgrUU0r.s:469    .text:0000000000000258 .LFB51
     /tmp/ccgrUU0r.s:497    .text:0000000000000288 .LFE51
     /tmp/ccgrUU0r.s:486    .text:0000000000000278 .LVL36
     /tmp/ccgrUU0r.s:396    .text:0000000000000210 .LFB50
     /tmp/ccgrUU0r.s:463    .text:0000000000000258 .LFE50
     /tmp/ccgrUU0r.s:419    .text:000000000000022c .LBB60
     /tmp/ccgrUU0r.s:452    .text:0000000000000248 .LBE60
     /tmp/ccgrUU0r.s:4534   .debug_loc:000000000000042c .LLST17
     /tmp/ccgrUU0r.s:410    .text:0000000000000228 .LVL33
     /tmp/ccgrUU0r.s:229    .text:0000000000000140 .LFB49
     /tmp/ccgrUU0r.s:390    .text:0000000000000210 .LFE49
     /tmp/ccgrUU0r.s:4988   .debug_str:00000000000007e6 .LASF195
     /tmp/ccgrUU0r.s:4541   .debug_loc:000000000000044f .LLST6
     /tmp/ccgrUU0r.s:4818   .debug_str:00000000000002b6 .LASF196
     /tmp/ccgrUU0r.s:4552   .debug_loc:0000000000000485 .LLST7
     /tmp/ccgrUU0r.s:4563   .debug_loc:00000000000004bb .LLST8
     /tmp/ccgrUU0r.s:5136   .debug_str:0000000000000d50 .LASF197
     /tmp/ccgrUU0r.s:4574   .debug_loc:00000000000004f1 .LLST9
     /tmp/ccgrUU0r.s:276    .text:000000000000017c .LBB54
     /tmp/ccgrUU0r.s:299    .text:00000000000001bc .LBE54
     /tmp/ccgrUU0r.s:4585   .debug_loc:0000000000000527 .LLST10
     /tmp/ccgrUU0r.s:4593   .debug_loc:000000000000054b .LLST11
     /tmp/ccgrUU0r.s:4605   .debug_loc:0000000000000582 .LLST12
     /tmp/ccgrUU0r.s:4612   .debug_loc:00000000000005a5 .LLST13
     /tmp/ccgrUU0r.s:4619   .debug_loc:00000000000005c8 .LLST14
     /tmp/ccgrUU0r.s:307    .text:00000000000001c4 .LBB56
     /tmp/ccgrUU0r.s:314    .text:00000000000001cc .LBE56
     /tmp/ccgrUU0r.s:4626   .debug_loc:00000000000005eb .LLST15
     /tmp/ccgrUU0r.s:312    .text:00000000000001cc .LVL26
     /tmp/ccgrUU0r.s:324    .text:00000000000001d0 .LBB58
     /tmp/ccgrUU0r.s:358    .text:00000000000001ec .LBE58
     /tmp/ccgrUU0r.s:4633   .debug_loc:000000000000060e .LLST16
GAS LISTING /tmp/ccgrUU0r.s 			page 41


     /tmp/ccgrUU0r.s:273    .text:0000000000000174 .LVL21
     /tmp/ccgrUU0r.s:197    .text:0000000000000118 .LFB48
     /tmp/ccgrUU0r.s:223    .text:0000000000000140 .LFE48
     /tmp/ccgrUU0r.s:4640   .debug_loc:0000000000000631 .LLST5
     /tmp/ccgrUU0r.s:212    .text:0000000000000130 .LVL17
     /tmp/ccgrUU0r.s:165    .text:00000000000000f0 .LFB47
     /tmp/ccgrUU0r.s:191    .text:0000000000000118 .LFE47
     /tmp/ccgrUU0r.s:4654   .debug_loc:000000000000066a .LLST4
     /tmp/ccgrUU0r.s:180    .text:0000000000000108 .LVL15
     /tmp/ccgrUU0r.s:10     .text:0000000000000000 .LFB46
     /tmp/ccgrUU0r.s:70     .text:0000000000000060 .LFE46
     /tmp/ccgrUU0r.s:44     .text:000000000000003c .LBB50
     /tmp/ccgrUU0r.s:53     .text:0000000000000044 .LBE50
     /tmp/ccgrUU0r.s:4668   .debug_loc:00000000000006a3 .LLST0
     /tmp/ccgrUU0r.s:4676   .debug_loc:00000000000006c7 .LLST1
     /tmp/ccgrUU0r.s:27     .text:000000000000001c .LVL0
     /tmp/ccgrUU0r.s:57     .text:000000000000004c .LVL4
     /tmp/ccgrUU0r.s:76     .text:0000000000000060 .LFB45
     /tmp/ccgrUU0r.s:159    .text:00000000000000f0 .LFE45
     /tmp/ccgrUU0r.s:4683   .debug_loc:00000000000006ea .LLST2
     /tmp/ccgrUU0r.s:94     .text:000000000000007c .LBB52
     /tmp/ccgrUU0r.s:101    .text:0000000000000080 .LBE52
     /tmp/ccgrUU0r.s:4694   .debug_loc:0000000000000720 .LLST3
     /tmp/ccgrUU0r.s:119    .text:00000000000000a0 .LVL9
     /tmp/ccgrUU0r.s:134    .text:00000000000000cc .LVL10
     /tmp/ccgrUU0r.s:156    .text:00000000000000ec .LVL13
     /tmp/ccgrUU0r.s:4854   .debug_str:00000000000003bd .LASF212
     /tmp/ccgrUU0r.s:5106   .debug_str:0000000000000c24 .LASF198
     /tmp/ccgrUU0r.s:4776   .debug_str:0000000000000182 .LASF213
     /tmp/ccgrUU0r.s:5042   .debug_str:0000000000000973 .LASF214
     /tmp/ccgrUU0r.s:4918   .debug_str:00000000000005ce .LASF215
     /tmp/ccgrUU0r.s:956    .text:0000000000000480 .LVL78
     /tmp/ccgrUU0r.s:966    .text:0000000000000488 .LVL79
     /tmp/ccgrUU0r.s:982    .text:0000000000000494 .LVL80
     /tmp/ccgrUU0r.s:992    .text:000000000000049c .LVL81
     /tmp/ccgrUU0r.s:870    .text:0000000000000414 .LVL69
     /tmp/ccgrUU0r.s:894    .text:0000000000000438 .LVL71
     /tmp/ccgrUU0r.s:901    .text:000000000000043c .LVL72
     /tmp/ccgrUU0r.s:908    .text:000000000000044c .LVL73
     /tmp/ccgrUU0r.s:912    .text:0000000000000450 .LVL74
     /tmp/ccgrUU0r.s:918    .text:0000000000000454 .LVL75
     /tmp/ccgrUU0r.s:614    .text:000000000000030c .LVL44
     /tmp/ccgrUU0r.s:626    .text:0000000000000314 .LVL46
     /tmp/ccgrUU0r.s:668    .text:0000000000000334 .LVL53
     /tmp/ccgrUU0r.s:677    .text:000000000000033c .LVL54
     /tmp/ccgrUU0r.s:622    .text:0000000000000310 .LVL45
     /tmp/ccgrUU0r.s:715    .text:000000000000035c .LVL59
     /tmp/ccgrUU0r.s:726    .text:000000000000036c .LVL60
     /tmp/ccgrUU0r.s:732    .text:0000000000000374 .LVL61
     /tmp/ccgrUU0r.s:632    .text:0000000000000318 .LVL47
     /tmp/ccgrUU0r.s:638    .text:000000000000031c .LVL48
     /tmp/ccgrUU0r.s:643    .text:0000000000000324 .LVL49
     /tmp/ccgrUU0r.s:649    .text:0000000000000328 .LVL50
     /tmp/ccgrUU0r.s:662    .text:0000000000000330 .LVL52
     /tmp/ccgrUU0r.s:685    .text:0000000000000344 .LVL55
     /tmp/ccgrUU0r.s:691    .text:0000000000000348 .LVL56
     /tmp/ccgrUU0r.s:699    .text:000000000000034c .LVL57
GAS LISTING /tmp/ccgrUU0r.s 			page 42


     /tmp/ccgrUU0r.s:705    .text:0000000000000350 .LVL58
     /tmp/ccgrUU0r.s:607    .text:0000000000000304 .LVL43
     /tmp/ccgrUU0r.s:551    .text:00000000000002c0 .LVL40
     /tmp/ccgrUU0r.s:564    .text:00000000000002d4 .LVL41
     /tmp/ccgrUU0r.s:763    .text:0000000000000398 .LVL62
     /tmp/ccgrUU0r.s:772    .text:00000000000003a8 .LVL63
     /tmp/ccgrUU0r.s:778    .text:00000000000003ac .LVL64
     /tmp/ccgrUU0r.s:806    .text:00000000000003c4 .LVL67
     /tmp/ccgrUU0r.s:827    .text:00000000000003d8 .LVL68
     /tmp/ccgrUU0r.s:515    .text:0000000000000298 .LVL37
     /tmp/ccgrUU0r.s:523    .text:00000000000002a8 .LVL38
     /tmp/ccgrUU0r.s:428    .text:0000000000000230 .LVL34
     /tmp/ccgrUU0r.s:449    .text:0000000000000248 .LVL35
     /tmp/ccgrUU0r.s:255    .text:0000000000000160 .LVL18
     /tmp/ccgrUU0r.s:368    .text:00000000000001f8 .LVL29
     /tmp/ccgrUU0r.s:378    .text:0000000000000208 .LVL32
     /tmp/ccgrUU0r.s:261    .text:0000000000000164 .LVL19
     /tmp/ccgrUU0r.s:374    .text:0000000000000200 .LVL31
     /tmp/ccgrUU0r.s:267    .text:0000000000000168 .LVL20
     /tmp/ccgrUU0r.s:371    .text:00000000000001fc .LVL30
     /tmp/ccgrUU0r.s:297    .text:00000000000001bc .LVL24
     /tmp/ccgrUU0r.s:275    .text:000000000000017c .LVL22
     /tmp/ccgrUU0r.s:288    .text:00000000000001a0 .LVL23
     /tmp/ccgrUU0r.s:306    .text:00000000000001c4 .LVL25
     /tmp/ccgrUU0r.s:334    .text:00000000000001d4 .LVL27
     /tmp/ccgrUU0r.s:355    .text:00000000000001ec .LVL28
     /tmp/ccgrUU0r.s:200    .text:0000000000000118 .LVL16
     /tmp/ccgrUU0r.s:168    .text:00000000000000f0 .LVL14
     /tmp/ccgrUU0r.s:43     .text:000000000000003c .LVL2
     /tmp/ccgrUU0r.s:51     .text:0000000000000044 .LVL3
     /tmp/ccgrUU0r.s:92     .text:000000000000007c .LVL5
     /tmp/ccgrUU0r.s:145    .text:00000000000000d8 .LVL11
     /tmp/ccgrUU0r.s:149    .text:00000000000000e0 .LVL12
     /tmp/ccgrUU0r.s:99     .text:0000000000000080 .LVL6
     /tmp/ccgrUU0r.s:1032   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccgrUU0r.s:619    .text:000000000000030c .LBB67
     /tmp/ccgrUU0r.s:623    .text:0000000000000310 .LBE67
     /tmp/ccgrUU0r.s:628    .text:0000000000000314 .LBB78
     /tmp/ccgrUU0r.s:656    .text:000000000000032c .LBE78
     /tmp/ccgrUU0r.s:659    .text:000000000000032c .LBB79
     /tmp/ccgrUU0r.s:694    .text:0000000000000348 .LBE79
     /tmp/ccgrUU0r.s:696    .text:0000000000000348 .LBB80
     /tmp/ccgrUU0r.s:709    .text:0000000000000350 .LBE80
     /tmp/ccgrUU0r.s:581    .gcc_except_table:0000000000000000 .LLSDA55

UNDEFINED SYMBOLS
_ZN5Riscv10popSppSpieEv
_Z11thread_exitv
_ZN9Scheduler3getEv
_ZN3PCB13contextSwitchEPNS_7ContextES1_
_ZN9Scheduler3putEP3PCB
_ZN15MemoryAllocator7kmallocEm
_ZN15MemoryAllocator5kfreeEPv
__gxx_personality_v0
